{"version":3,"sources":["components/easter-egg/brodyquest.mp3","components/easter-egg/easter-egg.png","actions/nodes.js","reducers/nodes.js","actions/tags.js","reducers/tags.js","actions/node-type.js","reducers/node-type.js","actions/index.js","reducers/visible.js","reducers/flags.js","reducers/index.js","config.js","store/helpers.js","actions/check-font-loaded.js","utils/index.js","selectors/tags.js","selectors/disabled.js","selectors/edges.js","selectors/ranks.js","selectors/nodes.js","utils/graph/common.js","utils/graph/solver.js","utils/graph/layout.js","utils/graph/routing.js","utils/graph/index.js","selectors/flags.js","selectors/layout.js","selectors/layers.js","selectors/linked-nodes.js","components/icons/node-icon.js","components/flowchart/icon.js","components/flowchart/draw.js","components/tooltip/index.js","components/flowchart/index.js","components/tag-list/index.js","components/node-list/filter-nodes.js","components/node-list/node-list-search.js","components/icons/visible.js","components/icons/invisible.js","components/node-list/node-list-toggle.js","selectors/node-types.js","components/node-list/node-list-row.js","components/node-list/node-list-group.js","components/node-list/node-list-groups.js","components/node-list/index.js","components/icon-toolbar/icon-button.js","components/icons/label.js","components/icons/layers.js","components/icons/menu.js","components/icons/theme.js","components/icons/export.js","components/icon-toolbar/index.js","components/sidebar/index.js","components/export-modal/export-graph.js","components/export-modal/index.js","components/wrapper/index.js","store/normalize-data.js","utils/data/animals.mock.js","utils/data/demo.mock.js","utils/flags.js","store/initial-state.js","store/load-data.js","components/app/index.js","store/index.js","components/easter-egg/index.js","utils/random-utils.js","utils/random-data.js","utils/data-source.js","index.js"],"names":["module","exports","TOGGLE_NODE_CLICKED","toggleNodeClicked","nodeClicked","type","TOGGLE_NODES_DISABLED","toggleNodesDisabled","nodeIDs","isDisabled","TOGGLE_NODE_HOVERED","toggleNodeHovered","nodeHovered","nodeReducer","nodeState","action","updateState","newState","Object","assign","clicked","includes","disabled","reduce","id","hovered","TOGGLE_TAG_ACTIVE","TOGGLE_TAG_FILTER","tagReducer","tagState","active","tagID","enabled","TOGGLE_TYPE_DISABLED","nodeTypeReducer","nodeTypeState","typeID","RESET_DATA","resetData","data","TOGGLE_LAYERS","TOGGLE_EXPORT_MODAL","toggleExportModal","visible","TOGGLE_TEXT_LABELS","TOGGLE_SIDEBAR","TOGGLE_THEME","UPDATE_CHART_SIZE","UPDATE_FONT_LOADED","CHANGE_FLAG","visibleReducer","visibleState","exportModal","layers","sidebar","flagsReducer","flagsState","name","value","createReducer","key","initialState","state","combinedReducer","combineReducers","node","nodeType","tag","flags","edge","layer","chartSize","fontLoaded","textLabels","theme","rootReducer","resetDataReducer","dataPath","sidebarWidth","newgraph","description","default","icon","noWindow","window","loadState","serializedState","localStorage","getItem","JSON","parse","err","console","error","saveState","stringify","setItem","checkFontLoaded","Promise","resolve","fonts","document","fontName","Boolean","check","checkIfLoaded","setTimeout","ready","then","onloadingdone","requestAnimationFrame","step","performance","now","arrayToObject","array","callback","newObject","forEach","unique","d","i","arr","indexOf","getTagIDs","ids","getTagEnabled","getTagData","createSelector","tagIDs","tagName","tagActive","tagEnabled","sort","map","getTagCount","total","length","filter","getNodeIDs","getNodeDisabledTag","tags","tagCount","nodeTags","nodeID","some","getNodeDisabled","nodeDisabledNode","nodeDisabledTag","typeDisabled","getVisibleNodeIDs","nodeDisabled","getVisibleLayerIDs","nodeLayer","layerIDs","visibleLayerIDs","layerID","getEdgeDisabled","sources","targets","edgeIDs","edgeSources","edgeTargets","edgeID","source","target","getEdgeIDs","getEdgeSources","getEdgeTargets","getTransitiveEdges","transitiveEdges","walkGraphEdges","path","concat","join","push","addNewEdge","getVisibleEdges","edgeDisabled","getLayerNodes","layerNodes","getNodeRank","edges","layersVisible","nodeDeps","sourceID","targetID","toposortedNodes","batchingToposort","nodeRanks","rank","getNodeName","getNodeType","getFontLoaded","getNodeActive","hoveredNode","activeViaTag","getNodeSelected","clickedNode","getNodeData","nodeName","a","b","disabled_node","disabled_tag","disabled_type","getGroupedNodes","nodes","obj","item","hasOwnProperty","getNodeTextWidth","nodeTextWidth","svg","select","body","append","attr","selectAll","enter","text","each","width","this","getBBox","remove","getNodeSize","showLabels","isTask","iconSize","padding","x","y","textWidth","innerWidth","height","textOffset","iconOffset","getVisibleNodes","fullName","nodeFullName","nodeSize","nodeRank","label","halfPI","Math","PI","snap","unit","round","distance1d","abs","angle","atan2","nodeLeft","nodeRight","nodeTop","nodeBottom","groupByRow","rows","rowNumbers","keys","row","parseFloat","sortedRows","compare","delta","localeCompare","values","offsetNode","offset","offsetEdge","points","point","nearestOnLine","ax","ay","bx","by","min","max","dx","dy","positionClamped","Error","subtract","equalTo","greaterOrEqual","solve","constraints","iterations","strict","solveStrict","solveLoose","co","distance","operator","strength","weightA","weightB","solver","kiwi","variables","expression","minus","constraint","Eq","Ge","required","strong","addConstraint","updateVariables","layout","basisX","spaceX","spaceY","layerSpaceY","layerConstraints","crossingConstraints","parallelConstraints","parallelSingleConstraints","parallelDoubleConstraints","separationConstraints","snapConstraints","rowConstraints","targetNode","sourceNode","layerNames","layerSpace","nearestLayer","nextLayer","nextLayerNodes","layerNode","crossingConstraint","edgeA","edgeB","j","parallelConstraint","sourceHasOneTarget","targetHasOneSource","halfIterations","ceil","l","rowNodes","separation","minSeparation","targetSeparation","expandDenseRows","densities","rowDensity","currentOffsetY","density","edgeAngle","sourceRow","targetRow","routing","minPassageGap","stemUnit","stemMinSource","stemMinTarget","stemMax","stemSpaceSource","stemSpaceTarget","sourceOffsetX","currentPoint","firstNode","nearestPoint","nearestDistance","Infinity","rowExtended","Number","MIN_SAFE_INTEGER","MAX_SAFE_INTEGER","nextNode","nodeGap","offsetX","candidatePoint","offsetY","sourceSeparation","sourceEdgeDistance","targetEdgeDistance","targetOffsetX","sourceOffsetY","targetOffsetY","sourceStem","targetStem","pointYMax","defaultOptions","addEdgeLinks","nodeById","addNearestLayers","layersMap","res","hasValidLayer","findNodeBy","targetThenSourceNodes","nodeDistance","targetNodes","sourceNodes","nodeA","nodeB","successors","metric","accept","visited","nearest","bounds","size","getCurrentFlags","getGraph","showLayers","result","options","graph","marginx","marginy","find","graphDagre","hasVisibleLayers","ranker","dagre","graphlib","Graph","setGraph","ranksep","setNode","setEdge","getLayoutNodes","order","getLayoutEdges","getGraphSize","getChartSize","visibleSidebar","left","top","outerChartWidth","getSidebarWidth","outerWidth","outerHeight","getZoomPosition","chart","scale","translateX","translateY","getLayers","layerName","bound","currentBound","prevBound","nextBound","start","end","getCentralNode","getLinkedNodes","linkedNodes","traverseGraph","prev","next","walk","direction","apply","reverse","paths","task","parameters","className","viewBox","svgNode","createElementNS","drawLayers","props","visibleLayers","el","layerGroup","enterLayers","exit","merge","drawLayerNames","layerNameGroup","transition","duration","DURATION","style","enterLayerNames","drawNodes","centralNode","nodeActive","nodeSelected","nodeGroup","enterNodes","classed","on","handleNodeClick","handleNodeMouseOver","handleNodeMouseOut","handleNodeKeyDown","catch","finally","drawEdges","edgeGroup","lineShape","line","curve","curveBasis","enterEdges","attrTween","current","previous","interpolatePath","draw","call","zeroWidthSpace","String","fromCharCode","Tooltip","targetRect","isRight","isTop","xOffset","yOffset","classnames","transform","replace","insertZeroWidthSpace","defaultProps","FlowChart","handleWindowResize","updateChartSize","handleBeforePrint","gs","graphSize","handleAfterPrint","onToggleNodeClicked","event","stopPropagation","handleChartClick","onToggleNodeHovered","showTooltip","hideTooltip","keyCode","tooltip","containerRef","React","createRef","svgRef","wrapperRef","edgesRef","nodesRef","layersRef","layerNamesRef","selectD3Elements","initZoomBehaviour","drawChart","zoomChart","addGlobalEventListeners","removeGlobalEventListeners","prevProps","zoom","wrapper","onUpdateChartSize","getBoundingClientRect","ResizeObserver","resizeObserver","observe","addEventListener","unobserve","removeEventListener","zoomBehaviour","k","translateExtent","ty","scaleExtent","zoomIdentity","translate","setState","ref","onClick","refX","refY","markerUnits","markerWidth","markerHeight","orient","Component","connect","dispatch","onToggleTagActive","toggleTagActive","onToggleTagFilter","toggleTagFilter","defaultText","Fragment","title","onMouseEnter","onMouseLeave","checked","onChange","e","escapeRegExp","utils","getHighlightedText","highlightMatch","searchValue","addHighlightedLabel","highlightedLabel","newNodes","filterNodes","filterNodesByType","valueRegex","RegExp","match","nodeMatchesSearch","getFilteredNodes","filteredNodes","onUpdateSearchValue","onKeyDown","handleKeyEvent","escape","bind","onToggleNodesDisabled","getNodeTypeIDs","getTypeNodeCount","types","typeNodeIDs","visibleTypeNodeIDs","getNodeTypes","typeName","typeNodeCount","nodeCount","NodeListRow","children","selected","VisibilityIcon","VisibleIcon","InvisibleIcon","faded","onFocus","onBlur","dangerouslySetInnerHTML","__html","htmlFor","aria-label","onToggleTypeDisabled","toggleTypeDisabled","collapsed","onToggleCollapsed","flipId","inverseFlipId","toLowerCase","onAppear","classList","add","onanimationend","opacity","onExit","removeElement","storedState","handleKeyDown","useEffect","useState","groupsCollapsed","setCollapsed","flipKey","updateSearchValue","autoHide","hideTracksWhenNotNeeded","icons","xmlns","menu","export","IconButton","ariaLabel","ariaLive","labelText","Icon","aria-live","disableLayerBtn","onToggleExportModal","onToggleLayers","onToggleSidebar","toggleSidebar","onToggleTextLabels","onToggleTheme","themeBtn","labelBtn","exportBtn","layerBtn","require","downloadSvg","downloadPng","exportGraph","format","download","mockFn","png","querySelector","clone","parentNode","appendChild","cloneNode","setAttribute","removeAttribute","createElement","innerHTML","prepend","css","removeChild","onToggle","onClose","formatData","getInitialPipelineState","isArray","Array","validateInput","schema_id","full_name","isParam","addNode","getEdgeID","addEdge","addTag","addLayer","Flags","isDefined","names","flagsConfig","defaults","flag","getFlagsFromUrl","url","urlParams","URL","location","href","searchParams","warn","getPipelineData","animals","demo","undefined","getInitialState","pipelineData","normalizeData","localStorageState","nodeTypeDisabled","loadJsonData","fullPath","substr","json","App","store","createStore","reducer","subscribe","getState","configureStore","announceFlags","asyncLoadJsonData","checkWebFontLoading","updatePipelineData","message","flagsEnabled","allNames","info","isEnabled","status","statusIcon","getFlagsMessage","jest","loadData","normalizedData","EasterEgg","play","audio","Audio","mp3","loop","KonamiCode","listen","toggleState","toggleAudio","toggleCSS","pause","src","img","alt","seed","get","characters","charAt","floor","random","generateHash","set","toString","getSeedFromURL","seedrandom","getNumberArray","n","from","randomIndex","randomNumber","randomNumberBetween","getRandom","range","LOREM_IPSUM","split","getRandomName","LAYERS","Pipeline","rankCount","getRankCount","rankLayers","getRankLayers","generateTags","generateNodes","generateEdges","update","finalise","layerSize","rankNodeCount","getRankNodeCount","createNode","_sources","initialRank","getRandomTags","_targets","len","taken","getRandomSelection","nodesByRank","edgeCount","getNodesByRank","ranks","getRandomNodeAtRank","rankIndex","rankValue","rankNodes","sourceRankIndex","remainingRankCount","biasedRandom","_sourceNode","_targetNode","degree","visibleNodes","sortedNodes","getType","activeNodes","activeTags","activeEdges","generateRandomPipeline","all","hasWindow","getDataSource","qs","search","REACT_APP_DATA_SOURCE","process","isDemo","host","encodeURIComponent","expectedInput","getRandomPipeline","validateDataSource","ReactDOM","render","getElementById"],"mappings":"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A,eACA,aAEFiI,MAAO,CACL,CACElB,OAAQ,WACRC,OAAQ,YAEV,CACED,OAAQ,WACRC,OAAQ,YAEV,CACED,OAAQ,WACRC,OAAQ,YAEV,CACED,OAAQ,WACRC,OAAQ,YAEV,CACED,OAAQ,WACRC,OAAQ,YAEV,CACED,OAAQ,WACRC,OAAQ,YAEV,CACED,OAAQ,WACRC,OAAQ,YAEV,CACED,OAAQ,WACRC,OAAQ,YAEV,CACED,OAAQ,WACRC,OAAQ,YAEV,CACED,OAAQ,WACRC,OAAQ,YAEV,CACED,OAAQ,WACRC,OAAQ,YAEV,CACED,OAAQ,WACRC,OAAQ,YAEV,CACED,OAAQ,WACRC,OAAQ,YAEV,CACED,OAAQ,WACRC,OAAQ,YAEV,CACED,OAAQ,WACRC,OAAQ,YAEV,CACED,OAAQ,WACRC,OAAQ,YAEV,CACED,OAAQ,WACRC,OAAQ,YAEV,CACED,OAAQ,WACRC,OAAQ,YAEV,CACED,OAAQ,WACRC,OAAQ,YAEV,CACED,OAAQ,WACRC,OAAQ,YAEV,CACED,OAAQ,WACRC,OAAQ,YAEV,CACED,OAAQ,WACRC,OAAQ,YAEV,CACED,OAAQ,WACRC,OAAQ,YAEV,CACED,OAAQ,WACRC,OAAQ,YAEV,CACED,OAAQ,WACRC,OAAQ,YAEV,CACED,OAAQ,WACRC,OAAQ,YAEV,CACED,OAAQ,WACRC,OAAQ,YAEV,CACED,OAAQ,WACRC,OAAQ,YAEV,CACED,OAAQ,WACRC,OAAQ,YAEV,CACED,OAAQ,WACRC,OAAQ,YAEV,CACED,OAAQ,WACRC,OAAQ,YAEV,CACED,OAAQ,WACRC,OAAQ,YAEV,CACED,OAAQ,WACRC,OAAQ,YAEV,CACED,OAAQ,WACRC,OAAQ,YAEV,CACED,OAAQ,WACRC,OAAQ,YAEV,CACED,OAAQ,WACRC,OAAQ,YAEV,CACED,OAAQ,WACRC,OAAQ,YAEV,CACED,OAAQ,WACRC,OAAQ,YAEV,CACED,OAAQ,WACRC,OAAQ,YAEV,CACED,OAAQ,WACRC,OAAQ,YAEV,CACED,OAAQ,WACRC,OAAQ,YAEV,CACED,OAAQ,WACRC,OAAQ,YAEV,CACED,OAAQ,WACRC,OAAQ,YAEV,CACED,OAAQ,WAC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","file":"static/js/main.86bda349.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/brodyquest.6259cc84.mp3\";","module.exports = __webpack_public_path__ + \"static/media/easter-egg.e702bd5f.png\";","export const TOGGLE_NODE_CLICKED = 'TOGGLE_NODE_CLICKED';\n\n/**\n * Update the value of the currently-active clicked node\n * @param {string|null} nodeClicked The node's unique identifier\n */\nexport function toggleNodeClicked(nodeClicked) {\n  return {\n    type: TOGGLE_NODE_CLICKED,\n    nodeClicked\n  };\n}\n\nexport const TOGGLE_NODES_DISABLED = 'TOGGLE_NODES_DISABLED';\n\n/**\n * Toggle a selected group of nodes' visibility on/off\n * @param {Array} nodeIDs The nodes' unique identifiers\n * @param {Boolean} isDisabled Whether the node should be visible\n */\nexport function toggleNodesDisabled(nodeIDs, isDisabled) {\n  return {\n    type: TOGGLE_NODES_DISABLED,\n    nodeIDs,\n    isDisabled\n  };\n}\n\nexport const TOGGLE_NODE_HOVERED = 'TOGGLE_NODE_HOVERED';\n\n/**\n * Update the value of the currently-active hovered node\n * @param {string|null} nodeHovered The node's unique identifier\n */\nexport function toggleNodeHovered(nodeHovered) {\n  return {\n    type: TOGGLE_NODE_HOVERED,\n    nodeHovered\n  };\n}\n","import {\n  TOGGLE_NODE_CLICKED,\n  TOGGLE_NODES_DISABLED,\n  TOGGLE_NODE_HOVERED\n} from '../actions/nodes';\n\nfunction nodeReducer(nodeState = {}, action) {\n  const updateState = newState => Object.assign({}, nodeState, newState);\n\n  switch (action.type) {\n    case TOGGLE_NODE_CLICKED: {\n      return updateState({\n        clicked: action.nodeClicked\n      });\n    }\n\n    case TOGGLE_NODES_DISABLED: {\n      return updateState({\n        clicked: action.nodeIDs.includes(nodeState.clicked)\n          ? null\n          : nodeState.clicked,\n        disabled: action.nodeIDs.reduce(\n          (disabled, id) =>\n            Object.assign({}, disabled, {\n              [id]: action.isDisabled\n            }),\n          nodeState.disabled\n        )\n      });\n    }\n\n    case TOGGLE_NODE_HOVERED: {\n      return updateState({\n        hovered: action.nodeHovered\n      });\n    }\n\n    default:\n      return nodeState;\n  }\n}\n\nexport default nodeReducer;\n","export const TOGGLE_TAG_ACTIVE = 'TOGGLE_TAG_ACTIVE';\n\n/**\n * Toggle a tag's highlighting on/off\n * @param {string} tagID Tag id\n * @param {Boolean} active True if tag is active\n */\nexport function toggleTagActive(tagID, active) {\n  return {\n    type: TOGGLE_TAG_ACTIVE,\n    tagID,\n    active\n  };\n}\n\nexport const TOGGLE_TAG_FILTER = 'TOGGLE_TAG_FILTER';\n\n/**\n * Toggle a tag on/off\n * @param {string} tagID Tag id\n * @param {Boolean} enabled True if tag is enabled\n */\nexport function toggleTagFilter(tagID, enabled) {\n  return {\n    type: TOGGLE_TAG_FILTER,\n    tagID,\n    enabled\n  };\n}\n","import { TOGGLE_TAG_ACTIVE, TOGGLE_TAG_FILTER } from '../actions/tags';\n\nfunction tagReducer(tagState = {}, action) {\n  const updateState = newState => Object.assign({}, tagState, newState);\n\n  switch (action.type) {\n    case TOGGLE_TAG_ACTIVE: {\n      return updateState({\n        active: Object.assign({}, tagState.active, {\n          [action.tagID]: action.active\n        })\n      });\n    }\n\n    case TOGGLE_TAG_FILTER: {\n      return updateState({\n        enabled: Object.assign({}, tagState.enabled, {\n          [action.tagID]: action.enabled\n        })\n      });\n    }\n\n    default:\n      return tagState;\n  }\n}\n\nexport default tagReducer;\n","export const TOGGLE_TYPE_DISABLED = 'TOGGLE_TYPE_DISABLED';\n\n/**\n * Toggle a node-type's visibility on/off\n * @param {string} typeID Type id\n * @param {Boolean} disabled True if type is disabled\n */\nexport function toggleTypeDisabled(typeID, disabled) {\n  return {\n    type: TOGGLE_TYPE_DISABLED,\n    typeID,\n    disabled\n  };\n}\n","import { TOGGLE_TYPE_DISABLED } from '../actions/node-type';\n\nfunction nodeTypeReducer(nodeTypeState = {}, action) {\n  switch (action.type) {\n    case TOGGLE_TYPE_DISABLED: {\n      return Object.assign({}, nodeTypeState, {\n        disabled: Object.assign({}, nodeTypeState.disabled, {\n          [action.typeID]: action.disabled\n        })\n      });\n    }\n    default:\n      return nodeTypeState;\n  }\n}\n\nexport default nodeTypeReducer;\n","export const RESET_DATA = 'RESET_DATA';\n\n/**\n * Overwrite the existing data store when receiving new data from upstream\n * @param {Object} data New pipeline state data\n */\nexport function resetData(data) {\n  return {\n    type: RESET_DATA,\n    data\n  };\n}\n\nexport const TOGGLE_LAYERS = 'TOGGLE_LAYERS';\n\n/**\n * Toggle whether to show layers on/off\n * @param {Boolean} visible True if layers are to be shown\n */\nexport function toggleLayers(visible) {\n  return {\n    type: TOGGLE_LAYERS,\n    visible\n  };\n}\n\nexport const TOGGLE_EXPORT_MODAL = 'TOGGLE_EXPORT_MODAL';\n\n/**\n * Toggle whether to show the export modal\n * @param {Boolean} visible True if the modal is to be shown\n */\nexport function toggleExportModal(visible) {\n  return {\n    type: TOGGLE_EXPORT_MODAL,\n    visible\n  };\n}\n\nexport const TOGGLE_TEXT_LABELS = 'TOGGLE_TEXT_LABELS';\n\n/**\n * Toggle whether to show text labels on/off\n * @param {Boolean} textLabels True if text labels are to be shown\n */\nexport function toggleTextLabels(textLabels) {\n  return {\n    type: TOGGLE_TEXT_LABELS,\n    textLabels\n  };\n}\n\nexport const TOGGLE_TAG_FILTER = 'TOGGLE_TAG_FILTER';\n\n/**\n * Toggle a tag on/off\n * @param {string} tagID Tag id\n * @param {Boolean} enabled True if tag is enabled\n */\nexport function toggleTagFilter(tagID, enabled) {\n  return {\n    type: TOGGLE_TAG_FILTER,\n    tagID,\n    enabled\n  };\n}\n\nexport const TOGGLE_SIDEBAR = 'TOGGLE_SIDEBAR';\n\n/**\n * Toggle sidebar visible/hidden\n * @param {boolean} visible Whether sidebar nav is shown\n */\nexport function toggleSidebar(visible) {\n  return {\n    type: TOGGLE_SIDEBAR,\n    visible\n  };\n}\n\nexport const TOGGLE_THEME = 'TOGGLE_THEME';\n\n/**\n * Switch between light/dark theme\n * @param {string} theme Theme name\n */\nexport function toggleTheme(theme) {\n  return {\n    type: TOGGLE_THEME,\n    theme\n  };\n}\n\nexport const UPDATE_CHART_SIZE = 'UPDATE_CHART_SIZE';\n\n/**\n * Store the chart size, based on the window\n * @param {Object} chartSize getBoundingClientRect value\n */\nexport function updateChartSize(chartSize) {\n  return {\n    type: UPDATE_CHART_SIZE,\n    chartSize\n  };\n}\n\nexport const UPDATE_FONT_LOADED = 'UPDATE_FONT_LOADED';\n\n/**\n * Update whether the webfont has loaded, which should block the chart render\n * @param {Boolean} fontLoaded Whether the font has loaded\n */\nexport function updateFontLoaded(fontLoaded) {\n  return {\n    type: UPDATE_FONT_LOADED,\n    fontLoaded\n  };\n}\n\nexport const CHANGE_FLAG = 'CHANGE_FLAG';\n\n/**\n * Change the given feature flag\n * @param {string} name The flag name\n * @param {value} value The value to set\n */\nexport function changeFlag(name, value) {\n  return {\n    type: CHANGE_FLAG,\n    name,\n    value\n  };\n}\n","import { TOGGLE_EXPORT_MODAL, TOGGLE_LAYERS, TOGGLE_SIDEBAR } from '../actions';\n\nfunction visibleReducer(visibleState = {}, action) {\n  switch (action.type) {\n    case TOGGLE_EXPORT_MODAL: {\n      return Object.assign({}, visibleState, {\n        exportModal: action.visible\n      });\n    }\n\n    case TOGGLE_LAYERS: {\n      return Object.assign({}, visibleState, {\n        layers: action.visible\n      });\n    }\n\n    case TOGGLE_SIDEBAR: {\n      return Object.assign({}, visibleState, {\n        sidebar: action.visible\n      });\n    }\n\n    default:\n      return visibleState;\n  }\n}\n\nexport default visibleReducer;\n","import { CHANGE_FLAG } from '../actions';\n\nfunction flagsReducer(flagsState = {}, action) {\n  switch (action.type) {\n    case CHANGE_FLAG: {\n      return Object.assign({}, flagsState, {\n        [action.name]: action.value\n      });\n    }\n\n    default:\n      return flagsState;\n  }\n}\n\nexport default flagsReducer;\n","import { combineReducers } from 'redux';\nimport node from './nodes';\nimport tag from './tags';\nimport nodeType from './node-type';\nimport visible from './visible';\nimport flags from './flags';\nimport {\n  RESET_DATA,\n  TOGGLE_TEXT_LABELS,\n  TOGGLE_THEME,\n  UPDATE_CHART_SIZE,\n  UPDATE_FONT_LOADED\n} from '../actions';\n\n/**\n * Create a generic reducer\n * @param {string} type Action type\n * @param {string} key Action payload key\n * @param {*} initialState Default state\n * @return {*} Updated state\n */\nconst createReducer = (type, key, initialState) => (\n  state = initialState,\n  action\n) => {\n  if (action.type === type) {\n    return action[key];\n  }\n  return state;\n};\n\n/**\n * Reset/update application-wide data\n * @param {Object} state Complete app state\n * @param {Object} action Redux action\n * @return {Object} Updated(?) state\n */\nfunction resetDataReducer(state = {}, action) {\n  if (action.type === RESET_DATA) {\n    return Object.assign({}, state, action.data);\n  }\n  return state;\n}\n\nconst combinedReducer = combineReducers({\n  node,\n  nodeType,\n  tag,\n  visible,\n  flags,\n  edge: (state = {}) => state,\n  id: (state = null) => state,\n  layer: (state = {}) => state,\n  chartSize: createReducer(UPDATE_CHART_SIZE, 'chartSize', {}),\n  fontLoaded: createReducer(UPDATE_FONT_LOADED, 'fontLoaded', false),\n  textLabels: createReducer(TOGGLE_TEXT_LABELS, 'textLabels', true),\n  theme: createReducer(TOGGLE_THEME, 'theme', 'dark')\n});\n\nconst rootReducer = (state, action) =>\n  resetDataReducer(combinedReducer(state, action), action);\n\nexport default rootReducer;\n","export const dataPath = './api/nodes.json';\n\nexport const localStorageName = 'KedroViz';\n\n// Also set in src/styles/_variables.scss:\nexport const sidebarBreakpoint = 700;\nexport const sidebarWidth = {\n  open: 400,\n  closed: 60\n};\n\nexport const flags = {\n  newgraph: {\n    description: 'Improved graphing algorithm',\n    default: false,\n    icon: '📈'\n  }\n};\n","import { localStorageName } from '../config';\n\nconst noWindow = typeof window === 'undefined';\n\n/**\n * Retrieve state data from localStorage\n * @return {Object} State\n */\nexport const loadState = () => {\n  if (noWindow) {\n    return {};\n  }\n  try {\n    const serializedState = window.localStorage.getItem(localStorageName);\n    if (serializedState === null) {\n      return {};\n    }\n    return JSON.parse(serializedState);\n  } catch (err) {\n    console.error(err);\n    return {};\n  }\n};\n\n/**\n * Save updated state to localStorage\n * @param {Object} state New state object\n */\nexport const saveState = state => {\n  if (noWindow) {\n    return;\n  }\n  try {\n    const newState = Object.assign(loadState(), state);\n    const serializedState = JSON.stringify(newState);\n    window.localStorage.setItem(localStorageName, serializedState);\n  } catch (err) {\n    console.error(err);\n  }\n};\n","/**\n * Prevent chart from displaying until the webfont has loaded,\n * to ensure that text label SVGRect BBox measurements are accurate\n * @return {Promise} Resolves when font is detected as having loaded, or after 8 seconds\n */\nconst checkFontLoaded = () =>\n  new Promise(resolve => {\n    const { fonts } = document;\n    const fontName = '10px Titillium Web';\n\n    // If FontFaceSet is not supported then default to true immediately\n    if (!Boolean(fonts && fonts.check)) {\n      resolve();\n      return;\n    }\n\n    /**\n     * Check whether the webfont is ready, and show the chart if so\n     */\n    const checkIfLoaded = () => {\n      if (fonts.check(fontName)) {\n        // Add 0.1s delay because fonts.check often returns true too early\n        setTimeout(resolve, 100);\n      }\n    };\n\n    /**\n     * Recursive requestAnimationFrame step function, which acts as a backup\n     * to the native FontFaceSet event handlers.\n     */\n    const step = () => {\n      // If it's been 8 seconds since page load then just set loaded=true\n      if (performance.now() > 8000) {\n        resolve();\n      } else if (fonts.check(fontName)) {\n        // Add 0.1s delay because fonts.check often returns true too early\n        setTimeout(resolve, 100);\n      } else {\n        requestAnimationFrame(step);\n      }\n    };\n\n    if (fonts.check(fontName)) {\n      // If the font is already loaded then dispatch immediately\n      resolve();\n    } else {\n      // Add event listenerss to detect when font has loaded, and display the chart.\n      // This uses both FontFaceSet.ready and FontFaceSet.onloadingdone, as the former\n      // often returns too early, and the latter often doesn't return at all.\n      if (fonts.ready) {\n        fonts.ready.then(checkIfLoaded);\n      }\n      fonts.onloadingdone = checkIfLoaded;\n      // Use requestAnimationFrame as a fallback for older browsers\n      requestAnimationFrame(step);\n    }\n  });\n\nexport default checkFontLoaded;\n","//--- Useful JS utility functions ---//\n\n/**\n * Loop through an array and output to an object\n * @param {Array} array\n * @param {Function} callback\n */\nexport const arrayToObject = (array, callback) => {\n  const newObject = {};\n  array.forEach(key => {\n    newObject[key] = callback(key);\n  });\n  return newObject;\n};\n\n/**\n * Filter duplicate values from an array\n * @param {any} d Datum\n * @param {number} i Index\n * @param {Array} arr The array to remove duplicate values from\n */\nexport const unique = (d, i, arr) => arr.indexOf(d) === i;\n","import { createSelector } from 'reselect';\n\nconst getTagIDs = state => state.tag.ids;\nconst getTagName = state => state.tag.name;\nconst getTagActive = state => state.tag.active;\nconst getTagEnabled = state => state.tag.enabled;\n\n/**\n * Retrieve the formatted list of tag filters\n */\nexport const getTagData = createSelector(\n  [getTagIDs, getTagName, getTagActive, getTagEnabled],\n  (tagIDs, tagName, tagActive, tagEnabled) =>\n    tagIDs.sort().map(id => ({\n      id,\n      name: tagName[id],\n      active: Boolean(tagActive[id]),\n      enabled: Boolean(tagEnabled[id])\n    }))\n);\n\n/**\n * Get the total and enabled number of tags\n */\nexport const getTagCount = createSelector(\n  [getTagIDs, getTagEnabled],\n  (tagIDs, tagEnabled) => ({\n    total: tagIDs.length,\n    enabled: tagIDs.filter(id => tagEnabled[id]).length\n  })\n);\n","import { createSelector } from 'reselect';\nimport { arrayToObject } from '../utils';\nimport { getTagCount } from './tags';\n\nconst getNodeIDs = state => state.node.ids;\nconst getNodeDisabledNode = state => state.node.disabled;\nconst getNodeTags = state => state.node.tags;\nconst getNodeType = state => state.node.type;\nconst getTagEnabled = state => state.tag.enabled;\nconst getNodeTypeDisabled = state => state.nodeType.disabled;\nconst getEdgeIDs = state => state.edge.ids;\nconst getEdgeSources = state => state.edge.sources;\nconst getEdgeTargets = state => state.edge.targets;\nconst getLayerIDs = state => state.layer.ids;\nconst getNodeLayer = state => state.node.layer;\n\n/**\n * Calculate whether nodes should be disabled based on their tags\n */\nexport const getNodeDisabledTag = createSelector(\n  [getNodeIDs, getTagEnabled, getTagCount, getNodeTags],\n  (nodeIDs, tagEnabled, tagCount, nodeTags) =>\n    arrayToObject(nodeIDs, nodeID => {\n      if (tagCount.enabled === 0) {\n        return false;\n      }\n      if (nodeTags[nodeID].length) {\n        // Hide task nodes that don't have at least one tag filter enabled\n        return !nodeTags[nodeID].some(tag => tagEnabled[tag]);\n      }\n      return true;\n    })\n);\n\n/**\n * Set disabled status if the node is specifically hidden, and/or via a tag/view/type\n */\nexport const getNodeDisabled = createSelector(\n  [\n    getNodeIDs,\n    getNodeDisabledNode,\n    getNodeDisabledTag,\n    getNodeType,\n    getNodeTypeDisabled\n  ],\n  (nodeIDs, nodeDisabledNode, nodeDisabledTag, nodeType, typeDisabled) =>\n    arrayToObject(nodeIDs, id =>\n      Boolean(\n        nodeDisabledNode[id] ||\n          nodeDisabledTag[id] ||\n          typeDisabled[nodeType[id]]\n      )\n    )\n);\n\n/**\n * Get a list of just the IDs for the remaining visible nodes\n */\nexport const getVisibleNodeIDs = createSelector(\n  [getNodeIDs, getNodeDisabled],\n  (nodeIDs, nodeDisabled) => nodeIDs.filter(id => !nodeDisabled[id])\n);\n\n/**\n * Get a list of just the IDs for the remaining visible layers\n */\nexport const getVisibleLayerIDs = createSelector(\n  [getVisibleNodeIDs, getNodeLayer, getLayerIDs],\n  (nodeIDs, nodeLayer, layerIDs) => {\n    const visibleLayerIDs = {};\n    for (const nodeID of nodeIDs) {\n      visibleLayerIDs[nodeLayer[nodeID]] = true;\n    }\n    return layerIDs.filter(layerID => visibleLayerIDs[layerID]);\n  }\n);\n\n/**\n * Determine whether an edge should be disabled based on their source/target nodes\n */\nexport const getEdgeDisabled = createSelector(\n  [getEdgeIDs, getNodeDisabled, getEdgeSources, getEdgeTargets],\n  (edgeIDs, nodeDisabled, edgeSources, edgeTargets) =>\n    arrayToObject(edgeIDs, edgeID => {\n      const source = edgeSources[edgeID];\n      const target = edgeTargets[edgeID];\n      return Boolean(nodeDisabled[source] || nodeDisabled[target]);\n    })\n);\n","import { createSelector } from 'reselect';\nimport { getNodeDisabled, getEdgeDisabled } from './disabled';\n\nconst getNodeIDs = state => state.node.ids;\nconst getEdgeIDs = state => state.edge.ids;\nconst getEdgeSources = state => state.edge.sources;\nconst getEdgeTargets = state => state.edge.targets;\n\n/**\n * Create a new transitive edge from the first and last edge in the path\n * @param {string} target Node ID for the new edge\n * @param {string} source Node ID for the new edge\n * @param {object} transitiveEdges Store of existing edges\n */\nexport const addNewEdge = (source, target, { edgeIDs, sources, targets }) => {\n  const id = [source, target].join('|');\n  if (!edgeIDs.includes(id)) {\n    edgeIDs.push(id);\n    sources[id] = source;\n    targets[id] = target;\n  }\n};\n\n/**\n * Create new edges to connect nodes which have a disabled node (or nodes)\n * in between them\n */\nexport const getTransitiveEdges = createSelector(\n  [getNodeIDs, getEdgeIDs, getNodeDisabled, getEdgeSources, getEdgeTargets],\n  (nodeIDs, edgeIDs, nodeDisabled, edgeSources, edgeTargets) => {\n    const transitiveEdges = {\n      edgeIDs: [],\n      sources: {},\n      targets: {}\n    };\n\n    /**\n     * Recursively walk through the graph, stepping over disabled nodes,\n     * generating a list of nodes visited so far, and create transitive edges\n     * for each path that visits disabled nodes between enabled nodes.\n     * @param {Array} path The route that has been explored so far\n     */\n    const walkGraphEdges = path => {\n      edgeIDs.forEach(edgeID => {\n        const source = path[path.length - 1];\n        // Filter to only edges where the source node is the previous target\n        if (edgeSources[edgeID] !== source) {\n          return;\n        }\n        const target = edgeTargets[edgeID];\n        if (nodeDisabled[target]) {\n          // If target node is disabled then keep walking the graph\n          walkGraphEdges(path.concat(target));\n        } else if (path.length > 1) {\n          // Else only create a new edge if there would be 3 or more nodes in the path\n          addNewEdge(path[0], target, transitiveEdges);\n        }\n      });\n    };\n\n    // Only run walk if some nodes are disabled\n    if (nodeIDs.some(nodeID => nodeDisabled[nodeID])) {\n      // Examine the children of every enabled node. The walk only needs\n      // to be run in a single direction (i.e. top down), because links\n      // that end in a terminus can never be transitive.\n      nodeIDs.forEach(nodeID => {\n        if (!nodeDisabled[nodeID]) {\n          walkGraphEdges([nodeID]);\n        }\n      });\n    }\n\n    return transitiveEdges;\n  }\n);\n\n/**\n * Get only the visible edges (plus transitive edges),\n * and return them formatted as an array of objects\n */\nexport const getVisibleEdges = createSelector(\n  [\n    getEdgeIDs,\n    getEdgeDisabled,\n    getEdgeSources,\n    getEdgeTargets,\n    getTransitiveEdges\n  ],\n  (edgeIDs, edgeDisabled, edgeSources, edgeTargets, transitiveEdges) =>\n    edgeIDs\n      .filter(id => !edgeDisabled[id])\n      .concat(transitiveEdges.edgeIDs)\n      .map(id => ({\n        id,\n        source: edgeSources[id] || transitiveEdges.sources[id],\n        target: edgeTargets[id] || transitiveEdges.targets[id]\n      }))\n);\n","import { createSelector } from 'reselect';\nimport batchingToposort from 'batching-toposort';\nimport { getVisibleNodeIDs, getVisibleLayerIDs } from './disabled';\nimport { getVisibleEdges } from './edges';\n\nconst getNodeLayer = state => state.node.layer;\nconst getLayersVisible = state => state.visible.layers;\n\n/**\n * Get list of visible nodes for each visible layer\n */\nexport const getLayerNodes = createSelector(\n  [getVisibleNodeIDs, getVisibleLayerIDs, getNodeLayer],\n  (nodeIDs, layerIDs, nodeLayer) => {\n    // Create object containing a list of every node for each layer\n    const layerNodes = {};\n    for (const nodeID of nodeIDs) {\n      const layer = nodeLayer[nodeID];\n      if (!layerNodes[layer]) {\n        layerNodes[layer] = [];\n      }\n      layerNodes[layer].push(nodeID);\n    }\n\n    // Convert to a nested array of layers of nodes\n    return layerIDs.map(layerID => layerNodes[layerID]);\n  }\n);\n\n/**\n * Calculate ranks (vertical placement) for each node,\n * by toposorting while taking layers into account\n */\nexport const getNodeRank = createSelector(\n  [getVisibleNodeIDs, getVisibleEdges, getLayerNodes, getLayersVisible],\n  (nodeIDs, edges, layerNodes, layersVisible) => {\n    if (!layersVisible) {\n      return {};\n    }\n\n    // For each node, create a list of nodes that depend on that node\n    const nodeDeps = {};\n\n    // Initialise empty dependency arrays for each node\n    for (const nodeID of nodeIDs) {\n      nodeDeps[nodeID] = [];\n    }\n\n    // Add dependencies for visible edges\n    for (const edge of edges) {\n      nodeDeps[edge.source].push(edge.target);\n    }\n\n    // Add \"false edge\" dependencies for layered nodes to prevent layer overlaps\n    for (let i = 1; i < layerNodes.length; i++) {\n      for (const sourceID of layerNodes[i - 1]) {\n        for (const targetID of layerNodes[i]) {\n          nodeDeps[sourceID].push(targetID);\n        }\n      }\n    }\n\n    // Run toposort algorithm to rank nodes by dependency\n    const toposortedNodes = batchingToposort(nodeDeps);\n\n    // Convert toposort order into rank numbering\n    const nodeRanks = {};\n    for (let rank = 0; rank < toposortedNodes.length; rank++) {\n      for (const nodeID of toposortedNodes[rank]) {\n        nodeRanks[nodeID] = rank;\n      }\n    }\n\n    return nodeRanks;\n  }\n);\n","import { createSelector } from 'reselect';\nimport { select } from 'd3-selection';\nimport { arrayToObject } from '../utils';\nimport {\n  getNodeDisabled,\n  getNodeDisabledTag,\n  getVisibleNodeIDs\n} from './disabled';\nimport { getNodeRank } from './ranks';\n\nconst getNodeIDs = state => state.node.ids;\nconst getNodeName = state => state.node.name;\nconst getNodeFullName = state => state.node.fullName;\nconst getNodeDisabledNode = state => state.node.disabled;\nconst getNodeTags = state => state.node.tags;\nconst getNodeType = state => state.node.type;\nconst getNodeLayer = state => state.node.layer;\nconst getHoveredNode = state => state.node.hovered;\nconst getClickedNode = state => state.node.clicked;\nconst getTagActive = state => state.tag.active;\nconst getTextLabels = state => state.textLabels;\nconst getFontLoaded = state => state.fontLoaded;\nconst getNodeTypeDisabled = state => state.nodeType.disabled;\n\n/**\n * Set active status if the node is specifically highlighted, and/or via an associated tag\n */\nexport const getNodeActive = createSelector(\n  [getNodeIDs, getHoveredNode, getNodeTags, getTagActive],\n  (nodeIDs, hoveredNode, nodeTags, tagActive) =>\n    arrayToObject(nodeIDs, nodeID => {\n      if (nodeID === hoveredNode) {\n        return true;\n      }\n      const activeViaTag = nodeTags[nodeID].some(tag => tagActive[tag]);\n      return Boolean(activeViaTag);\n    })\n);\n\n/**\n * Set selected status if the node is clicked\n */\nexport const getNodeSelected = createSelector(\n  [getNodeIDs, getClickedNode, getNodeDisabled],\n  (nodeIDs, clickedNode, nodeDisabled) =>\n    arrayToObject(\n      nodeIDs,\n      nodeID => nodeID === clickedNode && !nodeDisabled[nodeID]\n    )\n);\n\n/**\n * Returns formatted nodes as an array, with all relevant properties\n */\nexport const getNodeData = createSelector(\n  [\n    getNodeIDs,\n    getNodeName,\n    getNodeType,\n    getNodeDisabled,\n    getNodeDisabledNode,\n    getNodeDisabledTag,\n    getNodeTypeDisabled\n  ],\n  (\n    nodeIDs,\n    nodeName,\n    nodeType,\n    nodeDisabled,\n    nodeDisabledNode,\n    nodeDisabledTag,\n    typeDisabled\n  ) =>\n    nodeIDs\n      .sort((a, b) => {\n        if (nodeName[a] < nodeName[b]) return -1;\n        if (nodeName[a] > nodeName[b]) return 1;\n        return 0;\n      })\n      .map(id => ({\n        id,\n        name: nodeName[id],\n        type: nodeType[id],\n        disabled: nodeDisabled[id],\n        disabled_node: Boolean(nodeDisabledNode[id]),\n        disabled_tag: nodeDisabledTag[id],\n        disabled_type: Boolean(typeDisabled[nodeType[id]])\n      }))\n);\n\n/**\n * Returns formatted nodes grouped by type\n */\nexport const getGroupedNodes = createSelector(\n  [getNodeData],\n  nodes =>\n    nodes.reduce(function(obj, item) {\n      const key = item.type;\n      if (!obj.hasOwnProperty(key)) {\n        obj[key] = [];\n      }\n      obj[key].push(item);\n      return obj;\n    }, {})\n);\n\n/**\n * Temporarily create a new SVG container in the DOM, write a node to it,\n * measure its width with getBBox, then delete the container and store the value\n */\nexport const getNodeTextWidth = createSelector(\n  [getNodeIDs, getNodeName, getFontLoaded],\n  (nodeIDs, nodeName, fontLoaded) => {\n    if (!fontLoaded) {\n      return {};\n    }\n    const nodeTextWidth = {};\n    const svg = select(document.body)\n      .append('svg')\n      .attr('class', 'kedro pipeline-node');\n    svg\n      .selectAll('text')\n      .data(nodeIDs)\n      .enter()\n      .append('text')\n      .text(nodeID => nodeName[nodeID])\n      .each(function(nodeID) {\n        const width = this.getBBox ? this.getBBox().width : 0;\n        nodeTextWidth[nodeID] = width;\n      });\n    svg.remove();\n    return nodeTextWidth;\n  }\n);\n\n/**\n * Get the top/bottom and left/right padding for a node\n * @param {Boolean} showLabels Whether labels are visible\n * @param {Boolean} isTask Whether the node is a task type (vs data/params)\n */\nexport const getPadding = (showLabels, isTask) => {\n  if (showLabels) {\n    if (isTask) {\n      return { x: 16, y: 10 };\n    }\n    return { x: 20, y: 10 };\n  }\n  if (isTask) {\n    return { x: 14, y: 14 };\n  }\n  return { x: 16, y: 16 };\n};\n\n/**\n * Calculate node width/height and icon/text positioning\n */\nexport const getNodeSize = createSelector(\n  [getNodeIDs, getNodeTextWidth, getTextLabels, getNodeType, getFontLoaded],\n  (nodeIDs, nodeTextWidth, textLabels, nodeType, fontLoaded) => {\n    if (!fontLoaded) {\n      return {};\n    }\n    return arrayToObject(nodeIDs, nodeID => {\n      const iconSize = textLabels ? 24 : 28;\n      const padding = getPadding(textLabels, nodeType[nodeID] === 'task');\n      const textWidth = textLabels ? nodeTextWidth[nodeID] : 0;\n      const textGap = textLabels ? 6 : 0;\n      const innerWidth = iconSize + textWidth + textGap;\n      return {\n        width: innerWidth + padding.x * 2,\n        height: iconSize + padding.y * 2,\n        textOffset: (innerWidth - textWidth) / 2,\n        iconOffset: -innerWidth / 2,\n        iconSize\n      };\n    });\n  }\n);\n\n/**\n * Returns only visible nodes as an array, but without any extra properties\n * that are unnecessary for the chart layout calculation\n */\nexport const getVisibleNodes = createSelector(\n  [\n    getVisibleNodeIDs,\n    getNodeName,\n    getNodeType,\n    getNodeFullName,\n    getNodeSize,\n    getNodeLayer,\n    getNodeRank,\n    getFontLoaded\n  ],\n  (\n    nodeIDs,\n    nodeName,\n    nodeType,\n    nodeFullName,\n    nodeSize,\n    nodeLayer,\n    nodeRank,\n    fontLoaded\n  ) =>\n    fontLoaded\n      ? nodeIDs.map(id => ({\n          id,\n          name: nodeName[id],\n          label: nodeName[id],\n          fullName: nodeFullName[id],\n          type: nodeType[id],\n          layer: nodeLayer[id],\n          rank: nodeRank[id],\n          ...nodeSize[id]\n        }))\n      : []\n);\n","/**\n * PI / 2 constant\n */\nexport const halfPI = Math.PI * 0.5;\n\n/**\n * Clamps the value between min and max\n * @param {number} value The number to clamp\n * @param {number} min The minimum value\n * @param {number} max The maximum value\n * @returns {number} The value clamped\n */\nexport const clamp = (value, min, max) =>\n  value < min ? min : value > max ? max : value;\n\n/**\n * Rounds the value to the nearest unit value\n * @param {number} value The value to snap\n * @param {number} unit The unit\n * @returns {number} The value snapped\n */\nexport const snap = (value, unit) => Math.round(value / unit) * unit;\n\n/**\n * Returns the distance between two values\n * @param {number} a The first value\n * @param {number} b The second value\n * @returns {number} The distance\n */\nexport const distance1d = (a, b) => Math.abs(a - b);\n\n/**\n * Returns the angle in radians between the points a and b relative to the X-axis about the origin\n * @param {object} a The first point\n * @param {object} b The second point\n * @returns {number} The angle\n */\nexport const angle = (a, b) => Math.atan2(a.y - b.y, a.x - b.x);\n\n/**\n * Returns the left edge x-position of the node\n * @param {object} node The node\n * @returns {number} The left edge position\n */\nexport const nodeLeft = node => node.x - node.width * 0.5;\n\n/**\n * Returns the right edge x-position of the node\n * @param {object} node The node\n * @returns {number} The right edge position\n */\nexport const nodeRight = node => node.x + node.width * 0.5;\n\n/**\n * Returns the top edge y-position of the node\n * @param {object} node The node\n * @returns {number} The top edge position\n */\nexport const nodeTop = node => node.y - node.height * 0.5;\n\n/**\n * Returns the bottom edge y-position of the node\n * @param {object} node The node\n * @returns {number} The bottom edge position\n */\nexport const nodeBottom = node => node.y + node.height * 0.5;\n\n/**\n * Finds the rows formed by nodes given the their positions in Y.\n * The result is sorted in X and Y.\n * Adds a `row` property to each node in-place\n * @param {array} nodes The input nodes\n * @returns {array} The sorted rows of nodes\n */\nexport const groupByRow = nodes => {\n  const rows = {};\n\n  // Create rows using node Y values\n  for (const node of nodes) {\n    rows[node.y] = rows[node.y] || [];\n    rows[node.y].push(node);\n  }\n\n  // Sort the set of rows accounting for keys being strings\n  const rowNumbers = Object.keys(rows).map(row => parseFloat(row));\n  rowNumbers.sort((a, b) => a - b);\n\n  // Sort rows in order of X position if set. Break ties with ids for stability\n  const sortedRows = rowNumbers.map(row => rows[row]);\n  for (let i = 0; i < sortedRows.length; i += 1) {\n    sortedRows[i].sort((a, b) => compare(a.x, b.x, a.id, b.id));\n\n    for (const node of sortedRows[i]) {\n      node.row = i;\n    }\n  }\n\n  return sortedRows;\n};\n\n/**\n * Generalised comparator function for sorting\n * If values are strings then `localeCompare` is used, otherwise values are subtracted\n * Compares the first pair of values and returns the difference if non equal,\n * otherwise ties are broken by comparing the subsequent pairs of values\n * @param {number|string} a Value to compare with `b`\n * @param {number|string} b Value to compare with `a`\n * @param {...number|string} values Any number of further pairs of values to compare as tie-breakers\n * @returns {number} A standard signed comparator result\n */\nexport const compare = (a, b, ...values) => {\n  const delta = typeof a === 'string' ? a.localeCompare(b) : a - b;\n  return delta !== 0 || values.length === 0 ? delta : compare(...values);\n};\n\n/**\n * Returns the node with the position translated in-place\n * @param {object} node The node\n * @param {object} offset The translation vector\n * @returns {object} The node\n */\nexport const offsetNode = (node, offset) => {\n  node.x = node.x - offset.x;\n  node.y = node.y - offset.y;\n  return node;\n};\n\n/**\n * Returns the edge with each point translated in-place\n * @param {object} edge The edge\n * @param {object} offset The translation vector\n * @returns {object} The edge\n */\nexport const offsetEdge = (edge, offset) => {\n  edge.points.forEach(point => {\n    point.x = point.x - offset.x;\n    point.y = point.y - offset.y;\n  });\n  return edge;\n};\n\n/**\n * Returns the point on the line segment `ax, ay, bx, by` closest to point `x, y`\n * @param {number} x The test point x\n * @param {number} y The test point y\n * @param {number} ax The start of the line segement x point\n * @param {number} ay The start of the line segement y point\n * @param {number} bx The end of the line segement x point\n * @param {number} by The end of the line segement y point\n * @returns {object} An object with the closest point and both line segment points\n */\nexport const nearestOnLine = (x, y, ax, ay, bx, by) => {\n  const dx = bx - ax;\n  const dy = by - ay;\n  const position = ((x - ax) * dx + (y - ay) * dy) / (dx * dx + dy * dy || 1);\n  const positionClamped = clamp(position, 0, 1);\n\n  return {\n    x: ax + dx * positionClamped,\n    y: ay + dy * positionClamped,\n    ax,\n    ay,\n    bx,\n    by\n  };\n};\n","/** @license kiwi.js v1.1.2\n * #------------------------------------------------------------------------------\n * # Copyright (c) 2013, Nucleic Development Team & H. Rutjes.\n * #\n * # Distributed under the terms of the Modified BSD License.\n * #\n * # The full license is in the file COPYING.txt, distributed with this software.\n * #------------------------------------------------------------------------------\n **/\nimport * as kiwi from 'kiwi.js';\n\nimport { distance1d } from './common';\n\n/**\n * Combines the given object's id and key to create a new key\n * @param {number} obj An object with `id` property\n * @param {number} key An identifier string\n * @returns {string} The combined key\n */\nconst key = (obj, key) => {\n  if (typeof obj.id === 'undefined')\n    throw new Error(`Object is missing property 'id' required for key.`);\n  return obj.id + '_' + key;\n};\n\n/**\n * Returns the value `a - b`\n * @param {number} a The first number\n * @param {number} b The second number\n * @returns {number} The result\n */\nexport const subtract = (a, b) => a - b;\n\n/**\n * Given a `solver` operator function, returns the equivalent kiwi.js operator if defined\n * @param {function} operator The operator function\n * @returns {object|undefined} The kiwi.js operator\n */\nconst toStrictOperator = operator => {\n  if (operator === equalTo) return kiwi.Operator.Eq;\n  if (operator === greaterOrEqual) return kiwi.Operator.Ge;\n};\n\n/**\n * Returns `true` if `a === b` otherwise `false`\n * @param {number} a The first value\n * @param {number} b The second value\n * @returns {boolean} The result\n */\nexport const equalTo = (a, b) => a === b;\n\n/**\n * Returns `true` if `a >= b` otherwise `false`\n * @param {number} a The first number\n * @param {number} b The second number\n * @returns {boolean} The result\n */\nexport const greaterOrEqual = (a, b) => a >= b;\n\n/**\n * Applies the given constraints to the objects in-place.\n * If `strict` is set, limitations apply but an exact solution is attempted,\n * otherwise a solution is approximated iteratively\n * @param {array} constraints The constraints to apply\n * @param {object} constraint.a The first object to constrain\n * @param {object} constraint.b The second object to constrain\n * @param {string} constraint.key The property name on `a` and `b` to constrain\n * @param {boolean=true} constraint.required Whether the constraint must be satisfied during strict solving\n * @param {function=} constraint.delta A signed difference function given `a` and `b`. Default `subtract`\n * @param {function=} constraint.distance An absolute distance function given `a` and `b`. Default `distance1d`\n * @param {function=} constraint.target A target difference for `a` and `b`. Default `() => 0`\n * @param {function=} constraint.weightA The amount to adjust `a[key]`. Default `() => 1`\n * @param {function=} constraint.weightB The amount to adjust `b[key]`. Default `() => 1`\n * @param {number=1} iterations The number of iterations\n * @param {boolean=false} strict\n */\nexport const solve = (constraints, iterations = 1, strict = false) => {\n  if (strict) return solveStrict(constraints);\n  return solveLoose(constraints, iterations);\n};\n\n/**\n * Applies the given constraints to the objects in-place.\n * Constraint targets and operators can be static or dynamic.\n * A solution is approximated iteratively\n * @param {array} constraints The constraints. See docs for `solve`\n * @param {number} iterations The number of iterations\n */\nconst solveLoose = (constraints, iterations) => {\n  for (let i = 0; i < iterations; i += 1) {\n    for (const co of constraints) {\n      const delta = (co.delta || subtract)(co.a[co.key], co.b[co.key], co);\n      const distance = (co.distance || distance1d)(\n        co.a[co.key],\n        co.b[co.key],\n        co\n      );\n      const target = co.target(co.a[co.key], co.b[co.key], co, delta, distance);\n\n      if (!(co.operator || equalTo)(distance, target, delta)) {\n        const resolve = (co.strength ? co.strength(co) : 1) * (delta - target);\n\n        let weightA = co.weightA ? co.weightA(co) : 1;\n        let weightB = co.weightB ? co.weightB(co) : 1;\n\n        weightA = weightA / (weightA + weightB);\n        weightB = 1 - weightA;\n\n        co.a[co.key] -= weightA * resolve;\n        co.b[co.key] += weightB * resolve;\n      }\n    }\n  }\n};\n\n/**\n * Applies the given constraints to the objects in-place.\n * Limitations:\n *  - Constraint targets and operators must be static\n *  - `delta` is always subtract\n *  - `distance` is always subtract (i.e. signed)\n * A solution is found exactly if possible, otherwise throws an error\n * @param {array} constraints The constraints. See docs for `solve`\n */\nconst solveStrict = constraints => {\n  const solver = new kiwi.Solver();\n  const variables = {};\n\n  for (const co of constraints) {\n    variables[key(co.a, co.key)] = new kiwi.Variable();\n    variables[key(co.b, co.key)] = new kiwi.Variable();\n  }\n\n  for (const co of constraints) {\n    const expression = variables[key(co.a, co.key)].minus(\n      variables[key(co.b, co.key)]\n    );\n\n    co.constraint = new kiwi.Constraint(\n      expression,\n      toStrictOperator(co.operator || equalTo),\n      co.target(),\n      co.required === true ? kiwi.Strength.required : kiwi.Strength.strong\n    );\n\n    solver.addConstraint(co.constraint);\n  }\n\n  solver.updateVariables();\n\n  for (const co of constraints) {\n    co.a[co.key] = variables[key(co.a, co.key)].value();\n    co.b[co.key] = variables[key(co.b, co.key)].value();\n  }\n};\n","import { halfPI, snap, angle, compare, groupByRow } from './common';\nimport { solve, greaterOrEqual, equalTo } from './solver';\n\n/**\n * Finds positions for the given nodes relative to their edges.\n * Input nodes and edges are updated in-place.\n * Results are stored in the `x, y` properties on nodes.\n * @param {object} params The layout parameters\n * @param {array} params.nodes The input nodes\n * @param {array} params.edges The input edges\n * @param {object=} params.layers The node layers if specified\n * @param {number} params.basisX The basis relating diagram width in X\n * @param {number} params.spaceX The minimum gap between nodes in X\n * @param {number} params.spaceY The minimum gap between nodes in Y\n * @param {number} params.layerSpaceY The additional gap between nodes in Y between layers\n * @param {number} params.iterations The number of solver iterations to perform\n * @returns {void}\n */\nexport const layout = ({\n  nodes,\n  edges,\n  layers,\n  basisX,\n  spaceX,\n  spaceY,\n  layerSpaceY,\n  iterations\n}) => {\n  const layerConstraints = [];\n  const crossingConstraints = [];\n  const parallelConstraints = [];\n  const parallelSingleConstraints = [];\n  const parallelDoubleConstraints = [];\n  const separationConstraints = [];\n  const snapConstraints = [];\n\n  for (const node of nodes) {\n    node.x = 0;\n    node.y = 0;\n  }\n\n  // Constraints in Y formed by the edges of the graph\n  const rowConstraints = edges.map(edge => ({\n    a: edge.targetNode,\n    b: edge.sourceNode,\n    key: 'y',\n    operator: greaterOrEqual,\n    target: () => spaceY,\n    weightA: () => 0,\n    weightB: () => 1,\n    required: true\n  }));\n\n  // Constraints in Y separating nodes into layers if specified\n  if (layers) {\n    const layerNames = Object.values(layers);\n    const layerSpace = (spaceY + layerSpaceY) * 0.5;\n    let layerNodes = nodes.filter(node => node.nearestLayer === layerNames[0]);\n\n    // For each defined layer\n    for (let i = 0; i < layerNames.length - 1; i += 1) {\n      const layer = layerNames[i];\n      const nextLayer = layerNames[i + 1];\n      const nextLayerNodes = nodes.filter(\n        node => node.nearestLayer === nextLayer\n      );\n\n      // Create a temporary intermediary 'node'\n      const layerNode = { id: layer, x: 0, y: 0 };\n\n      // Constraints in Y for each node such that node.y <= layerNode.y - spaceY\n      for (const node of layerNodes) {\n        layerConstraints.push({\n          a: layerNode,\n          b: node,\n          key: 'y',\n          operator: greaterOrEqual,\n          target: () => layerSpace,\n          weightA: () => 0,\n          weightB: () => 1\n        });\n      }\n\n      // Constraints in Y for each node on the next layer such that node.y >= layerNode.y\n      for (const node of nextLayerNodes) {\n        layerConstraints.push({\n          a: node,\n          b: layerNode,\n          key: 'y',\n          operator: greaterOrEqual,\n          target: () => layerSpace,\n          weightA: () => 0,\n          weightB: () => 1\n        });\n      }\n\n      layerNodes = nextLayerNodes;\n    }\n  }\n\n  // Find the positions of each node in Y given the constraints exactly\n  solve([...rowConstraints, ...layerConstraints], 1, true);\n\n  // Find the rows formed by the nodes\n  const rows = groupByRow(nodes);\n\n  // Constraints in X to prevent a pair of edges crossing\n  const crossingConstraint = {\n    basisX,\n    key: 'x',\n    operator: (distance, target, delta) =>\n      target >= 0 ? delta >= target : delta <= target,\n    target: (a, b, co) => {\n      // Find the minimal target position that separates both nodes\n      const sourceDelta = co.edgeA.sourceNode.x - co.edgeB.sourceNode.x;\n      const targetDelta = co.edgeA.targetNode.x - co.edgeB.targetNode.x;\n      return sourceDelta + targetDelta < 0 ? -co.basisX : co.basisX;\n    },\n    strength: co => 1 / co.basisX,\n    weightA: () => 0.5,\n    weightB: () => 0.5\n  };\n\n  // For every pair of edges\n  for (let i = 0; i < edges.length; i += 1) {\n    const edgeA = edges[i];\n\n    for (let j = i + 1; j < edges.length; j += 1) {\n      const edgeB = edges[j];\n\n      // Add crossing constraint between edge source nodes, where different\n      if (edgeA.source !== edgeB.source) {\n        crossingConstraints.push({\n          ...crossingConstraint,\n          a: edgeA.sourceNode,\n          b: edgeB.sourceNode,\n          edgeA,\n          edgeB\n        });\n      }\n\n      // Add crossing constraint between edge target nodes, where different\n      if (edgeA.target !== edgeB.target) {\n        crossingConstraints.push({\n          ...crossingConstraint,\n          a: edgeA.targetNode,\n          b: edgeB.targetNode,\n          edgeA,\n          edgeB\n        });\n      }\n    }\n  }\n\n  // Constraints in X to minimise edge length thereby prioritising straight parallel edges in Y\n  for (const edge of edges) {\n    const parallelConstraint = {\n      a: edge.sourceNode,\n      b: edge.targetNode,\n      key: 'x',\n      operator: equalTo,\n      target: () => 0,\n      // Lower degree nodes can be moved more freely than higher\n      strength: co =>\n        1 / Math.max(1, 0.5 * (co.a.targets.length + co.b.sources.length)),\n      weightA: () => 0.5,\n      weightB: () => 0.5\n    };\n\n    parallelConstraints.push(parallelConstraint);\n\n    const sourceHasOneTarget = edge.sourceNode.targets.length === 1;\n    const targetHasOneSource = edge.targetNode.sources.length === 1;\n\n    // Collect edges connected to single-degree nodes at either end\n    if (sourceHasOneTarget || targetHasOneSource) {\n      parallelSingleConstraints.push(parallelConstraint);\n    }\n\n    // Collect edges connected to single-degree at both ends\n    if (sourceHasOneTarget && targetHasOneSource) {\n      parallelDoubleConstraints.push(parallelConstraint);\n    }\n  }\n\n  // Solving loop for constraints in X\n  const halfIterations = Math.ceil(iterations * 0.5);\n\n  for (let i = 0; i < iterations; i += 1) {\n    // Minimise crossing\n    solve(crossingConstraints, 1);\n\n    // Minimise edge length\n    solve(parallelConstraints, 1);\n\n    // Minimise edge length specifically for low-degree edges more strongly\n    solve(parallelSingleConstraints, halfIterations);\n    solve(parallelDoubleConstraints, halfIterations);\n\n    // Clear separation constraints from previous iteration\n    separationConstraints.length = 0;\n\n    // For each row\n    for (let l = 0; l < rows.length; l += 1) {\n      const rowNodes = rows[l];\n\n      // Sort rows in order of X position. Break ties with ids for stability\n      rowNodes.sort((a, b) => compare(a.x, b.x, a.id, b.id));\n\n      // Constraints in X to maintain minimum node separation\n      for (let j = 0; j < rowNodes.length - 1; j += 1) {\n        separationConstraints.push({\n          a: rowNodes[j],\n          b: rowNodes[j + 1],\n          key: 'x',\n          operator: (distance, target, delta) => delta <= target,\n          target: (ax, bx, co) => -spaceX - co.a.width * 0.5 - co.b.width * 0.5,\n          strength: () => 1,\n          weightA: () => 0.5,\n          weightB: () => 0.5\n        });\n      }\n    }\n\n    // Minimise node separation overlap\n    solve(separationConstraints, halfIterations);\n  }\n\n  // For each row already sorted in X\n  for (let l = 0; l < rows.length; l += 1) {\n    const rowNodes = rows[l];\n\n    // For each node on the row\n    for (let i = 0; i < rowNodes.length - 1; i += 1) {\n      // Find the current node separation\n      const separation = (rowNodes[i + 1].x - rowNodes[i].x) * 0.8;\n\n      // Find the minimal required separation\n      const minSeparation =\n        rowNodes[i].width * 0.5 + spaceX + rowNodes[i + 1].width * 0.5;\n\n      // Snap the separation to a unit amount\n      const targetSeparation = Math.max(\n        snap(separation, spaceX),\n        minSeparation\n      );\n\n      // Constraints in X to maintain target separation\n      snapConstraints.push({\n        a: rowNodes[i + 1],\n        b: rowNodes[i],\n        key: 'x',\n        operator: greaterOrEqual,\n        target: () => targetSeparation,\n        weightA: () => 0,\n        weightB: () => 1,\n        required: true\n      });\n    }\n  }\n\n  // Find final positions of each node in X under given constraints exactly\n  solve([...snapConstraints, ...parallelConstraints], 1, true);\n\n  // Add additional spacing in Y for rows with many crossing edges\n  expandDenseRows(edges, rows, spaceY);\n};\n\n/**\n * Adds additional spacing in Y for rows containing many crossing edges.\n * Node positions are updated in-place\n * @param {array} edges The input edges\n * @param {array} rows The input rows of nodes\n * @param {number} spaceY The minimum spacing between nodes in Y\n */\nconst expandDenseRows = (edges, rows, spaceY) => {\n  const densities = rowDensity(edges);\n  let currentOffsetY = 0;\n\n  // Add spacing based on density, snapped to a grid to improve vertical rhythm\n  for (let i = 0; i < densities.length; i += 1) {\n    const density = densities[i];\n    const offsetY = snap(density * spaceY, Math.round(spaceY * 0.25));\n    currentOffsetY += offsetY;\n\n    for (const node of rows[i + 1]) {\n      node.y += currentOffsetY;\n    }\n  }\n};\n\n/**\n * Estimates an average 'density' for each row based on average edge angle at that row.\n * Rows are decided by each edge's source and target node Y positions.\n * Intermediate rows are assumed always vertical as a simplification.\n * Returns a list of values in `(0, 1)` where `0` means all edges on that row are vertical and `1` means all horizontal\n * @param {array} edges The input edges\n * @returns {array} The density of each row\n */\nconst rowDensity = edges => {\n  const rows = {};\n\n  for (const edge of edges) {\n    // Find the normalised angle of the edge source and target nodes, relative to the X axis\n    const edgeAngle =\n      Math.abs(angle(edge.targetNode, edge.sourceNode) - halfPI) / halfPI;\n\n    const sourceRow = edge.sourceNode.row;\n    const targetRow = edge.targetNode.row - 1;\n\n    // Add angle to the source row total\n    rows[sourceRow] = rows[sourceRow] || [0, 0];\n    rows[sourceRow][0] += edgeAngle;\n    rows[sourceRow][1] += 1;\n\n    if (targetRow !== sourceRow) {\n      // Add angle to the target row total\n      rows[targetRow] = rows[targetRow] || [0, 0];\n      rows[targetRow][0] += edgeAngle;\n      rows[targetRow][1] += 1;\n    }\n  }\n\n  // Find the average angle for each row\n  for (const row in rows) {\n    rows[row] = rows[row][0] / (rows[row][1] || 1);\n  }\n\n  return Object.values(rows);\n};\n","import {\n  compare,\n  distance1d,\n  angle,\n  nearestOnLine,\n  groupByRow,\n  nodeLeft,\n  nodeRight,\n  nodeTop,\n  nodeBottom\n} from './common';\n\n/**\n * Finds positions for the given edges relative to their nodes.\n * Input nodes and edges are updated in-place.\n * Results are stored in the `points` property on edges.\n * @param {object} params The layout parameters\n * @param {array} params.nodes The input nodes\n * @param {array} params.edges The input edges\n * @param {number} params.spaceX The minimum gap between a node and passing edges in X\n * @param {number} params.spaceY The minimum gap between a node and passing edges in Y\n * @param {number} params.minPassageGap The minimum gap between two nodes in which an edge can pass in X\n * @param {number} params.stemUnit The unit length for edge stems at anchors\n * @param {number} params.stemMax The maximum length of edge stems at anchors\n * @param {number} params.stemMinSource The minimum length for edge stems at source anchors\n * @param {number} params.stemMinTarget The minimum length for edge stems at target anchors\n * @param {number} params.stemSpaceSource The ideal spacing between edge stems at source anchors\n * @param {number} params.stemSpaceTarget The ideal spacing between edge stems at target anchors\n * @returns {void}\n */\nexport const routing = ({\n  nodes,\n  edges,\n  spaceX,\n  spaceY,\n  minPassageGap,\n  stemUnit,\n  stemMinSource,\n  stemMinTarget,\n  stemMax,\n  stemSpaceSource,\n  stemSpaceTarget\n}) => {\n  // Find the rows formed by nodes\n  const rows = groupByRow(nodes);\n\n  // For each node\n  for (const node of nodes) {\n    // Sort the node's target edges by the angle between source and target nodes\n    node.targets.sort((a, b) =>\n      compare(\n        angle(b.sourceNode, b.targetNode),\n        angle(a.sourceNode, a.targetNode)\n      )\n    );\n  }\n\n  // For each edge\n  for (const edge of edges) {\n    const source = edge.sourceNode;\n    const target = edge.targetNode;\n\n    // Initialise result container\n    edge.points = [];\n\n    // Find the ideal gap between edge source anchors\n    const sourceSeparation = Math.min(\n      (source.width - stemSpaceSource) / source.targets.length,\n      stemSpaceSource\n    );\n\n    const sourceEdgeDistance =\n      source.targets.indexOf(edge) - (source.targets.length - 1) * 0.5;\n\n    const sourceOffsetX = sourceSeparation * sourceEdgeDistance;\n\n    // Start at source node offset\n    const startPoint = { x: source.x + sourceOffsetX, y: source.y };\n    let currentPoint = startPoint;\n\n    // For each row between the source and target rows exclusive\n    for (let l = source.row + 1; l < target.row; l += 1) {\n      const firstNode = rows[l][0];\n\n      // Initialise search for next point\n      let nearestPoint = { x: nodeLeft(firstNode) - spaceX, y: firstNode.y };\n      let nearestDistance = Infinity;\n\n      // Extend the row 'to infinity' on each side in X\n      const rowExtended = [\n        { ...firstNode, x: Number.MIN_SAFE_INTEGER },\n        ...rows[l],\n        { ...firstNode, x: Number.MAX_SAFE_INTEGER }\n      ];\n\n      // For each gap between each nodes on the row\n      for (let i = 0; i < rowExtended.length - 1; i += 1) {\n        const node = rowExtended[i];\n        const nextNode = rowExtended[i + 1];\n        const nodeGap = nodeLeft(nextNode) - nodeRight(node);\n\n        // Avoid routing through small gaps, increase bundling\n        if (nodeGap < minPassageGap) continue;\n\n        const offsetX = Math.min(spaceX, nodeGap * 0.5);\n\n        // Find the next potential point. Include offset to reduce overlapping edges\n        const candidatePoint = nearestOnLine(\n          currentPoint.x,\n          currentPoint.y,\n          nodeRight(node) + offsetX,\n          nodeTop(node) - spaceY,\n          nodeLeft(nextNode) - offsetX,\n          nodeTop(nextNode) - spaceY\n        );\n\n        const distance = distance1d(currentPoint.x, candidatePoint.x);\n\n        // Early out if diverging\n        if (distance > nearestDistance) {\n          break;\n        }\n\n        // Keep the nearest point\n        if (distance < nearestDistance) {\n          nearestDistance = distance;\n          nearestPoint = candidatePoint;\n        }\n      }\n\n      // Pass the node at nearest point\n      const offsetY = firstNode.height + spaceY;\n      edge.points.push({\n        x: nearestPoint.x + sourceOffsetX,\n        y: nearestPoint.y\n      });\n      edge.points.push({\n        x: nearestPoint.x + sourceOffsetX,\n        y: nearestPoint.y + offsetY\n      });\n\n      currentPoint = {\n        x: nearestPoint.x,\n        y: nearestPoint.y + offsetY\n      };\n    }\n  }\n\n  // For each node\n  for (const node of nodes) {\n    // Sort the node's outgoing edges by the starting angle of the edge path\n    node.targets.sort((a, b) =>\n      compare(\n        angle(b.sourceNode, b.points[0] || b.targetNode),\n        angle(a.sourceNode, a.points[0] || a.targetNode)\n      )\n    );\n    // Sort the node's incoming edges by the ending angle of the edge path\n    node.sources.sort((a, b) =>\n      compare(\n        angle(a.points[a.points.length - 1] || a.sourceNode, a.targetNode),\n        angle(b.points[b.points.length - 1] || b.sourceNode, b.targetNode)\n      )\n    );\n  }\n\n  // For each edge\n  for (const edge of edges) {\n    const source = edge.sourceNode;\n    const target = edge.targetNode;\n\n    // Find the ideal gap between edge source and target anchors\n    const sourceSeparation = Math.min(\n      (source.width - stemSpaceSource) / source.targets.length,\n      stemSpaceSource\n    );\n\n    const targetSeparation = Math.min(\n      (target.width - stemSpaceTarget) / target.sources.length,\n      stemSpaceTarget\n    );\n\n    const sourceEdgeDistance =\n      source.targets.indexOf(edge) - (source.targets.length - 1) * 0.5;\n    const targetEdgeDistance =\n      target.sources.indexOf(edge) - (target.sources.length - 1) * 0.5;\n\n    const sourceOffsetX = sourceSeparation * sourceEdgeDistance;\n    const targetOffsetX = targetSeparation * targetEdgeDistance;\n\n    // Decrease stem length outwards from the middle stem\n    const sourceOffsetY =\n      stemUnit *\n      source.targets.length *\n      (1 - Math.abs(sourceEdgeDistance) / source.targets.length);\n\n    const targetOffsetY =\n      stemUnit *\n      target.sources.length *\n      (1 - Math.abs(targetEdgeDistance) / target.sources.length);\n\n    // Build the source stem for the edge\n    const sourceStem = [\n      {\n        x: source.x + sourceOffsetX,\n        y: nodeBottom(source)\n      },\n      {\n        x: source.x + sourceOffsetX,\n        y: nodeBottom(source) + stemMinSource\n      },\n      {\n        x: source.x + sourceOffsetX,\n        y: nodeBottom(source) + stemMinSource + Math.min(sourceOffsetY, stemMax)\n      }\n    ];\n\n    // Build the target stem for the edge\n    const targetStem = [\n      {\n        x: target.x + targetOffsetX,\n        y: nodeTop(target) - stemMinTarget - Math.min(targetOffsetY, stemMax)\n      },\n      {\n        x: target.x + targetOffsetX,\n        y: nodeTop(target) - stemMinTarget\n      },\n      {\n        x: target.x + targetOffsetX,\n        y: nodeTop(target)\n      }\n    ];\n\n    // Combine all points\n    const points = [...sourceStem, ...edge.points, ...targetStem];\n\n    // Fix any invalid points caused by invalid layouts\n    let pointYMax = points[0].y;\n\n    for (const point of points) {\n      // Ensure increasing Y values for each point\n      if (point.y < pointYMax) {\n        point.y = pointYMax;\n      } else {\n        pointYMax = point.y;\n      }\n    }\n\n    // Assign finished points to edge\n    edge.points = points;\n  }\n};\n","import { offsetNode, offsetEdge } from './common';\nimport { layout } from './layout';\nimport { routing } from './routing';\n\nconst defaultOptions = {\n  layout: {\n    spaceX: 16,\n    spaceY: 110,\n    layerSpaceY: 55,\n    basisX: 1500,\n    padding: 100,\n    iterations: 20\n  },\n  routing: {\n    spaceX: 26,\n    spaceY: 28,\n    minPassageGap: 40,\n    stemUnit: 8,\n    stemMinSource: 5,\n    stemMinTarget: 5,\n    stemMax: 20,\n    stemSpaceSource: 6,\n    stemSpaceTarget: 10\n  }\n};\n\n/**\n * Generates a diagram of the given DAG.\n * Input nodes and edges are updated in-place.\n * Results are stored as `x, y` properties on nodes\n * and `points` properties on edges.\n * @param {array} nodes The input nodes\n * @param {array} edges The input edges\n * @param {object=} layers The node layers if specified\n * @param {object=} options The graph options\n * @returns {object} The generated graph\n */\nexport const graph = (nodes, edges, layers, options = defaultOptions) => {\n  addEdgeLinks(nodes, edges);\n  addNearestLayers(nodes, layers);\n\n  layout({ nodes, edges, layers, ...options.layout });\n  routing({ nodes, edges, layers, ...options.routing });\n\n  const size = bounds(nodes, options.layout.padding);\n  nodes.forEach(node => offsetNode(node, size.min));\n  edges.forEach(edge => offsetEdge(edge, size.min));\n\n  return {\n    nodes,\n    edges,\n    layers,\n    size\n  };\n};\n\n/**\n * Adds lists of source edges and target edges to each node in-place\n * @param {array} nodes The input nodes\n * @param {array} edges The input edges\n */\nconst addEdgeLinks = (nodes, edges) => {\n  const nodeById = {};\n\n  for (const node of nodes) {\n    nodeById[node.id] = node;\n    node.targets = [];\n    node.sources = [];\n  }\n\n  for (const edge of edges) {\n    edge.sourceNode = nodeById[edge.source];\n    edge.targetNode = nodeById[edge.target];\n    edge.sourceNode.targets.push(edge);\n    edge.targetNode.sources.push(edge);\n  }\n};\n\n/**\n * Adds the nearest layer to each node based on the layers of its connected nodes in-place\n * @param {array} nodes The input nodes\n * @param {?array} layers The input layers\n */\nconst addNearestLayers = (nodes, layers) => {\n  if (layers && layers.length > 0) {\n    // Only accept layers specififed in the layers list.\n    const layersMap = layers.reduce(\n      (res, layer) => ({ ...res, [layer]: true }),\n      {}\n    );\n    const hasValidLayer = node => Boolean(layersMap[node.layer]);\n\n    for (const node of nodes) {\n      const layerNode = findNodeBy(\n        node,\n        targetThenSourceNodes,\n        nodeDistance,\n        hasValidLayer\n      );\n      node.nearestLayer = layerNode && layerNode.layer;\n    }\n  }\n};\n\n/**\n * Returns the list of the node's connected target nodes followed by its connected source nodes\n * @param {object} node The input node\n * @returns {array} The connected nodes\n */\nconst targetThenSourceNodes = node =>\n  targetNodes(node).concat(sourceNodes(node));\n\n/**\n * Returns the list of target nodes directly connected to the given node\n * @param {object} node The input node\n * @returns {array} The target nodes\n */\nconst targetNodes = node => node.targets.map(edge => edge.targetNode);\n\n/**\n * Returns the list of source nodes directly connected to the given node\n * @param {object} node The input node\n * @returns {array} The source nodes\n */\nconst sourceNodes = node => node.sources.map(edge => edge.sourceNode);\n\n/**\n * Returns the distance between the two nodes using their assigned rank\n * @param {object} nodeA The first input node\n * @param {object} nodeB The second input node\n * @returns {number} The distance\n */\nconst nodeDistance = (nodeA, nodeB) => Math.abs(nodeA.rank - nodeB.rank);\n\n/**\n * Starting at the given node and expanding successors, returns the first node accepted relative to the metric\n * @param {object} node The starting node\n * @param {function} successors A function returning the next nodes to expand\n * @param {function} metric A function that measures the difference between two nodes\n * @param {function} accept A function that returns true if the current node fits the criteria\n * @param {object=} visited An object keeping track of nodes already searched\n * @returns {?object} The first node accepted, if found\n */\nconst findNodeBy = (node, successors, metric, accept, visited) => {\n  if (accept(node)) return node;\n\n  visited = visited || {};\n  visited[node.id] = true;\n\n  const next = successors(node).filter(node => !visited[node.id]);\n  const nearest = next.sort(\n    (nodeA, nodeB) => metric(node, nodeA) - metric(node, nodeB)\n  );\n  const accepted = nearest.filter(accept);\n\n  return (\n    accepted[0] ||\n    nearest.map(node =>\n      findNodeBy(node, successors, metric, accept, visited)\n    )[0]\n  );\n};\n\n/**\n * Finds the region bounding the given nodes\n * @param {array} nodes The input nodes\n * @param {number} padding Additional padding around the bounds\n * @returns {object} The bounds\n */\nconst bounds = (nodes, padding) => {\n  const size = {\n    min: { x: Infinity, y: Infinity },\n    max: { x: -Infinity, y: -Infinity }\n  };\n\n  for (const node of nodes) {\n    const x = node.x;\n    const y = node.y;\n\n    if (x < size.min.x) size.min.x = x;\n    if (x > size.max.x) size.max.x = x;\n    if (y < size.min.y) size.min.y = y;\n    if (y > size.max.y) size.max.y = y;\n  }\n\n  size.width = size.max.x - size.min.x + 2 * padding;\n  size.height = size.max.y - size.min.y + 2 * padding;\n  size.min.x -= padding;\n  size.min.y -= padding;\n\n  return size;\n};\n","import { createSelector } from 'reselect';\n\nconst getFlagsState = state => state.flags;\n\n/**\n * Get current flag status from state\n */\nexport const getCurrentFlags = createSelector(\n  [getFlagsState],\n  flags => ({ ...flags })\n);\n","import { createSelector } from 'reselect';\nimport dagre from 'dagre';\nimport { graph } from '../utils/graph/';\nimport { getCurrentFlags } from './flags';\nimport { getVisibleNodes } from './nodes';\nimport { getVisibleEdges } from './edges';\nimport { getVisibleLayerIDs } from './disabled';\nimport { sidebarBreakpoint, sidebarWidth } from '../config';\n\nconst getHasVisibleLayers = state =>\n  state.visible.layers && Boolean(state.layer.ids.length);\nconst getNodeType = state => state.node.type;\nconst getNodeLayer = state => state.node.layer;\nconst getVisibleSidebar = state => state.visible.sidebar;\nconst getFontLoaded = state => state.fontLoaded;\n\n/**\n * Calculate chart layout. Algorithm used is dependent on flags\n */\nexport const getGraph = createSelector(\n  [\n    getVisibleNodes,\n    getVisibleEdges,\n    getVisibleLayerIDs,\n    getHasVisibleLayers,\n    getCurrentFlags,\n    getFontLoaded\n  ],\n  (nodes, edges, layers, showLayers, flags, fontLoaded) => {\n    if (!fontLoaded || !nodes.length || !edges.length) {\n      return;\n    }\n\n    // Use experimental graph rendering if flag enabled\n    if (flags.newgraph) {\n      const result = graph(nodes, edges, showLayers && layers);\n\n      return {\n        graph: () => ({ ...result.size, marginx: 100, marginy: 100 }),\n        nodes: () => result.nodes.map(node => node.id),\n        edges: () => result.edges.map(edge => edge.id),\n        node: id => result.nodes.find(node => node.id === id),\n        edge: id => result.edges.find(edge => edge.id === id),\n        newgraph: true\n      };\n    }\n\n    // Otherwise use dagre to render\n    return graphDagre(nodes, edges, showLayers);\n  }\n);\n\n/**\n * Calculate chart layout with Dagre.js.\n * This is an extremely expensive operation so we want it to run as infrequently\n * as possible, and keep it separate from other properties (like node.active)\n * which don't affect layout.\n */\nexport const graphDagre = (nodes, edges, hasVisibleLayers) => {\n  const ranker = hasVisibleLayers ? 'none' : null;\n  const graph = new dagre.graphlib.Graph().setGraph({\n    ranker: hasVisibleLayers ? ranker : null,\n    ranksep: hasVisibleLayers ? 200 : 70,\n    marginx: 40,\n    marginy: 40\n  });\n\n  nodes.forEach(node => {\n    graph.setNode(node.id, node);\n  });\n\n  edges.forEach(edge => {\n    graph.setEdge(edge.source, edge.target, edge);\n  });\n\n  // Run Dagre layout to calculate X/Y positioning\n  dagre.layout(graph);\n\n  return graph;\n};\n\n/**\n * Reformat node data for use on the chart,\n * and recombine with other data that doesn't affect layout\n */\nexport const getLayoutNodes = createSelector(\n  [getGraph, getNodeType, getNodeLayer],\n  (graph, nodeType, nodeLayer) =>\n    graph\n      ? graph.nodes().map(nodeID => {\n          const node = graph.node(nodeID);\n          return Object.assign({}, node, {\n            layer: nodeLayer[nodeID],\n            type: nodeType[nodeID],\n            order: node.x + node.y * 9999\n          });\n        })\n      : []\n);\n\n/**\n * Reformat edge data for use on the chart\n */\nexport const getLayoutEdges = createSelector(\n  [getGraph],\n  graph =>\n    graph ? graph.edges().map(edge => Object.assign({}, graph.edge(edge))) : []\n);\n\n/**\n * Get width, height and margin of graph\n */\nexport const getGraphSize = createSelector(\n  [getGraph],\n  graph => (graph ? graph.graph() : {})\n);\n\n/**\n * Return the displayed width of the sidebar\n */\nexport const getSidebarWidth = (visibleSidebar, outerChartWidth) => {\n  if (visibleSidebar && outerChartWidth > sidebarBreakpoint) {\n    return sidebarWidth.open;\n  }\n  return sidebarWidth.closed;\n};\n\n/**\n * Convert the DOMRect into an Object, mutate some of the properties,\n * and add some useful new ones\n */\nexport const getChartSize = createSelector(\n  [getVisibleSidebar, state => state.chartSize],\n  (visibleSidebar, chartSize) => {\n    const { left, top, width, height } = chartSize;\n    if (!width || !height) {\n      return {};\n    }\n    const sidebarWidth = getSidebarWidth(visibleSidebar, width);\n    return {\n      left,\n      top,\n      outerWidth: width,\n      outerHeight: height,\n      width: width - sidebarWidth,\n      height,\n      sidebarWidth\n    };\n  }\n);\n\n/**\n * Get chart zoom translation/scale,\n * by comparing native graph width/height to container width/height\n */\nexport const getZoomPosition = createSelector(\n  [getGraphSize, getChartSize],\n  (graph, chart) => {\n    if (!chart.width || !graph.width) {\n      return {\n        scale: 1,\n        translateX: 0,\n        translateY: 0\n      };\n    }\n\n    const scale = Math.min(\n      chart.width / graph.width,\n      chart.height / graph.height\n    );\n    const translateX = chart.width / 2 - (graph.width * scale) / 2;\n    const translateY = chart.height / 2 - (graph.height * scale) / 2;\n\n    return {\n      scale,\n      translateX: translateX + chart.sidebarWidth,\n      translateY\n    };\n  }\n);\n","import { createSelector } from 'reselect';\nimport { getLayoutNodes, getGraphSize } from './layout';\nimport { getVisibleLayerIDs } from './disabled';\n\nconst getLayerName = state => state.layer.name;\n\n/**\n * Get layer positions\n */\nexport const getLayers = createSelector(\n  [getLayoutNodes, getVisibleLayerIDs, getLayerName, getGraphSize],\n  (nodes, layerIDs, layerName, { width }) => {\n    if (!nodes.length) {\n      return [];\n    }\n\n    const bounds = {};\n\n    for (const node of nodes) {\n      const layer = node.nearestLayer || node.layer;\n\n      if (layer) {\n        const bound = bounds[layer] || (bounds[layer] = [Infinity, -Infinity]);\n\n        if (node.y - node.height < bound[0]) {\n          bound[0] = node.y - node.height;\n        }\n\n        if (node.y + node.height > bound[1]) {\n          bound[1] = node.y + node.height;\n        }\n      }\n    }\n\n    return layerIDs.map((id, i) => {\n      const currentBound = bounds[id] || [0, 0];\n      const prevBound = bounds[layerIDs[i - 1]] || [\n        currentBound[0],\n        currentBound[0]\n      ];\n      const nextBound = bounds[layerIDs[i + 1]] || [\n        currentBound[1],\n        currentBound[1]\n      ];\n      const start = (prevBound[1] + currentBound[0]) / 2;\n      const end = (currentBound[1] + nextBound[0]) / 2;\n\n      return {\n        id,\n        name: layerName[id],\n        x: -width / 2,\n        y: start,\n        width: width * 2,\n        height: Math.max(end - start, 0)\n      };\n    });\n  }\n);\n","import { createSelector } from 'reselect';\n\nconst getEdgeIDs = state => state.edge.ids;\nconst getEdgeSources = state => state.edge.sources;\nconst getEdgeTargets = state => state.edge.targets;\nconst getClickedNode = state => state.node.clicked;\nconst getHoveredNode = state => state.node.hovered;\n\n/**\n * Get the node that should be used as the center of the set of linked nodes\n * @param {Array} edges\n * @param {string} nodeID\n */\nexport const getCentralNode = createSelector(\n  [getClickedNode, getHoveredNode],\n  (clickedNode, hoveredNode) => clickedNode || hoveredNode\n);\n\n/**\n * Recursively search through the edges data for ancestor and descendant nodes\n * @param {Array} edges\n * @param {string} nodeID\n */\nexport const getLinkedNodes = createSelector(\n  [getEdgeIDs, getEdgeSources, getEdgeTargets, getCentralNode],\n  (edges, edgeSources, edgeTargets, nodeID) => {\n    if (!nodeID) {\n      return {};\n    }\n\n    const linkedNodes = {\n      [nodeID]: true\n    };\n\n    const traverseGraph = (prev, next) => {\n      (function walk(id) {\n        edges.forEach(edge => {\n          if (prev[edge] === id) {\n            linkedNodes[next[edge]] = true;\n            walk(next[edge]);\n          }\n        });\n      })(nodeID);\n    };\n\n    const direction = [edgeSources, edgeTargets];\n    traverseGraph.apply(null, direction);\n    traverseGraph.apply(null, direction.reverse());\n\n    return linkedNodes;\n  }\n);\n","import React from 'react';\n\nexport const paths = {\n  // database icon\n  data: [\n    'M6 7.5C6 5.5 8.7 4 12 4c3.2 0 5.9 1.5 6 3.3V17c0 .2 0 .4-.2.6-1.1 1.6-3 2.3-5.8 2.3s-4.7-.7-5.8-2.3A1 1 0 016 17V7.5zm6 8c-1.6 0-3-.4-4-1v2.2c.7.8 2 1.2 4 1.2s3.3-.4 4-1.2v-2.2c-1 .6-2.4 1-4 1zm0-4.5c-1.5 0-3-.3-4-.9v1.6c.8 1.2 2 1.7 4 1.7s3.3-.5 4-1.7v-1.6c-1 .6-2.5.9-4 .9zm0-5c-1.3 0-2.4.3-3.2.8-.6.3-.8.6-.8.7s.2.4.8.7c.8.5 2 .8 3.2.8s2.4-.3 3.2-.8c.6-.3.8-.6.8-.7s-.2-.4-.8-.7c-.8-.5-2-.8-3.2-.8z'\n  ],\n  // function icon\n  task: [\n    'M19.46 4.3l.18.14-1.28 1.54c-2.06-1.71-3.52-1.1-4.55 2.52H16v2h-2.66c-.09.43-.17.89-.25 1.37l-.1.68c-1.2 8.23-4.11 11.46-8.41 8.34l-.19-.14 1.22-1.59c2.58 1.97 4.25.32 5.3-6.22l.1-.68.3-1.76H8v-2h3.78c1.48-5.36 4.12-7.04 7.68-4.2z'\n  ],\n  // sliders icon\n  parameters: [\n    'M8 14v1.5h13v2H8V19H6v-1.5H4v-2h2V14z',\n    'M18.5 5v1.5H21v2h-2.5V10h-2V8.5H4v-2h12.5V5z'\n  ]\n};\n\nexport default ({ className, type }) => (\n  <svg className={className} viewBox=\"0 0 24 24\">\n    {paths[type].map(d => (\n      <path key={d} d={d} />\n    ))}\n  </svg>\n);\n","import { select } from 'd3-selection';\nimport { paths } from '../icons/node-icon';\n\n/**\n * Generate cog/database icon.\n * Inline SVG is required to support image exports\n */\nexport default node => {\n  const svgNode = document.createElementNS('http://www.w3.org/2000/svg', 'svg');\n\n  const svg = select(svgNode)\n    .attr('class', 'pipeline-node__icon')\n    .attr('viewBox', '0 0 24 24');\n\n  paths[node.type].forEach(path => {\n    svg.append('path').attr('d', path);\n  });\n\n  return svgNode;\n};\n","import 'd3-transition';\nimport { interpolatePath } from 'd3-interpolate-path';\nimport { select } from 'd3-selection';\nimport { curveBasis, line } from 'd3-shape';\nimport icon from './icon';\n\n/**\n * Render layer bands\n */\nconst drawLayers = function() {\n  const { layers, visibleLayers } = this.props;\n\n  this.el.layers = this.el.layerGroup\n    .selectAll('.pipeline-layer')\n    .data(visibleLayers ? layers : [], layer => layer.id);\n\n  const enterLayers = this.el.layers\n    .enter()\n    .append('rect')\n    .attr('class', 'pipeline-layer');\n\n  this.el.layers.exit().remove();\n\n  this.el.layers = this.el.layers.merge(enterLayers);\n\n  this.el.layers\n    .attr('x', d => d.x)\n    .attr('y', d => d.y)\n    .attr('height', d => d.height)\n    .attr('width', d => d.width);\n};\n\n/**\n * Render layer name labels\n */\nconst drawLayerNames = function() {\n  const {\n    chartSize: { sidebarWidth = 0 },\n    layers,\n    visibleLayers\n  } = this.props;\n\n  this.el.layerNameGroup\n    .transition('layer-names-sidebar-width')\n    .duration(this.DURATION)\n    .style('transform', `translateX(${sidebarWidth}px)`);\n\n  this.el.layerNames = this.el.layerNameGroup\n    .selectAll('.pipeline-layer-name')\n    .data(visibleLayers ? layers : [], layer => layer.id);\n\n  const enterLayerNames = this.el.layerNames\n    .enter()\n    .append('li')\n    .attr('class', 'pipeline-layer-name')\n    .style('opacity', 0)\n    .transition('enter-layer-names')\n    .duration(this.DURATION)\n    .style('opacity', 1);\n\n  this.el.layerNames\n    .exit()\n    .style('opacity', 1)\n    .transition('exit-layer-names')\n    .duration(this.DURATION)\n    .style('opacity', 0)\n    .remove();\n\n  this.el.layerNames = this.el.layerNames.merge(enterLayerNames);\n\n  this.el.layerNames.text(d => d.name).attr('dy', 5);\n};\n\n/**\n * Render node icons and name labels\n */\nconst drawNodes = function() {\n  const {\n    centralNode,\n    linkedNodes,\n    nodeActive,\n    nodeSelected,\n    nodes,\n    textLabels\n  } = this.props;\n\n  this.el.nodes = this.el.nodeGroup\n    .selectAll('.pipeline-node')\n    .data(nodes, node => node.id);\n\n  const enterNodes = this.el.nodes\n    .enter()\n    .append('g')\n    .attr('tabindex', '0')\n    .attr('class', 'pipeline-node');\n\n  enterNodes\n    .attr('transform', node => `translate(${node.x}, ${node.y})`)\n    .attr('opacity', 0);\n\n  enterNodes.append('rect');\n\n  enterNodes.append(icon);\n\n  enterNodes\n    .append('text')\n    .text(node => node.name)\n    .attr('text-anchor', 'middle')\n    .attr('dy', 5)\n    .attr('dx', node => node.textOffset);\n\n  this.el.nodes\n    .exit()\n    .transition('exit-nodes')\n    .duration(this.DURATION)\n    .attr('opacity', 0)\n    .remove();\n\n  this.el.nodes = this.el.nodes\n    .merge(enterNodes)\n    .attr('data-id', node => node.id)\n    .classed('pipeline-node--parameters', node => node.type === 'parameters')\n    .classed('pipeline-node--data', node => node.type === 'data')\n    .classed('pipeline-node--task', node => node.type === 'task')\n    .classed('pipeline-node--icon', !textLabels)\n    .classed('pipeline-node--text', textLabels)\n    .classed('pipeline-node--active', node => nodeActive[node.id])\n    .classed('pipeline-node--selected', node => nodeSelected[node.id])\n    .classed(\n      'pipeline-node--faded',\n      node => centralNode && !linkedNodes[node.id]\n    )\n    .on('click', this.handleNodeClick)\n    .on('mouseover', this.handleNodeMouseOver)\n    .on('mouseout', this.handleNodeMouseOut)\n    .on('focus', this.handleNodeMouseOver)\n    .on('blur', this.handleNodeMouseOut)\n    .on('keydown', this.handleNodeKeyDown);\n\n  this.el.nodes\n    .transition('update-nodes')\n    .duration(this.DURATION)\n    .attr('opacity', 1)\n    .attr('transform', node => `translate(${node.x}, ${node.y})`)\n    .end()\n    .catch(() => {})\n    .finally(() => {\n      // Sort nodes so tab focus order follows X/Y position\n      this.el.nodes.sort((a, b) => a.order - b.order);\n    });\n\n  this.el.nodes\n    .select('rect')\n    .attr('width', node => node.width - 5)\n    .attr('height', node => node.height - 5)\n    .attr('x', node => (node.width - 5) / -2)\n    .attr('y', node => (node.height - 5) / -2)\n    .attr('rx', node => (node.type === 'task' ? 0 : node.height / 2));\n\n  this.el.nodes\n    .select('.pipeline-node__icon')\n    .transition('node-icon-offset')\n    .duration(150)\n    .attr('width', node => node.iconSize)\n    .attr('height', node => node.iconSize)\n    .attr('x', node => node.iconOffset)\n    .attr('y', node => node.iconSize / -2);\n};\n\n/**\n * Render edge lines\n */\nconst drawEdges = function() {\n  const { edges, centralNode, linkedNodes } = this.props;\n\n  this.el.edges = this.el.edgeGroup\n    .selectAll('.pipeline-edge')\n    .data(edges, edge => edge.id);\n\n  // Set up line shape function\n  const lineShape = line()\n    .x(d => d.x)\n    .y(d => d.y)\n    .curve(curveBasis);\n\n  // Create edges\n  const enterEdges = this.el.edges\n    .enter()\n    .append('g')\n    .attr('class', 'pipeline-edge')\n    .attr('opacity', 0);\n\n  enterEdges.append('path').attr('marker-end', d => `url(#pipeline-arrowhead)`);\n\n  this.el.edges\n    .exit()\n    .transition('exit-edges')\n    .duration(this.DURATION)\n    .attr('opacity', 0)\n    .remove();\n\n  this.el.edges = this.el.edges.merge(enterEdges);\n\n  this.el.edges\n    .attr('data-id', edge => edge.id)\n    .classed(\n      'pipeline-edge--faded',\n      ({ source, target }) =>\n        centralNode && (!linkedNodes[source] || !linkedNodes[target])\n    )\n    .transition('show-edges')\n    .duration(this.DURATION)\n    .attr('opacity', 1);\n\n  this.el.edges\n    .select('path')\n    .transition('update-edges')\n    .duration(this.DURATION)\n    .attrTween('d', function(edge) {\n      const current = edge.points && lineShape(edge.points);\n      const previous = select(this).attr('d') || current;\n      return interpolatePath(previous, current);\n    });\n};\n\n/**\n * Render chart to the DOM with D3\n */\nconst draw = function() {\n  drawLayers.call(this);\n  drawLayerNames.call(this);\n  drawEdges.call(this);\n  drawNodes.call(this);\n};\n\nexport default draw;\n","import React from 'react';\nimport classnames from 'classnames';\nimport './tooltip.css';\n\nconst zeroWidthSpace = String.fromCharCode(0x200b);\n\n/**\n * Force tooltip text to break on special characters\n * @param {string} text Any text with special characters\n * @return {string} text\n */\nexport const insertZeroWidthSpace = text =>\n  text.replace(/([^\\w\\s]|[_])/g, `${zeroWidthSpace}$1${zeroWidthSpace}`);\n\n/**\n * Display flowchart node tooltip\n * @param {object} chartSize Chart dimensions in pixels\n * @param {object} targetRect event.target.getBoundingClientRect()\n * @param {boolean} visible Whether to show the tooltip\n * @param {string} text Tooltip display label\n */\nconst Tooltip = ({ chartSize, targetRect, visible, text }) => {\n  const { left, top, width, height, outerWidth, sidebarWidth } = chartSize;\n  const isRight = targetRect.left - sidebarWidth > width / 2;\n  const isTop = targetRect.top < height / 2;\n  const xOffset = isRight ? targetRect.left - outerWidth : targetRect.left;\n  const yOffset = isTop ? targetRect.top + targetRect.height : targetRect.top;\n  const x = xOffset - left + targetRect.width / 2;\n  const y = yOffset - top;\n\n  return (\n    <div\n      className={classnames('pipeline-tooltip', {\n        'pipeline-tooltip--visible': visible,\n        'pipeline-tooltip--right': isRight,\n        'pipeline-tooltip--top': isTop\n      })}\n      style={{ transform: `translate(${x}px, ${y}px)` }}>\n      <div className=\"pipeline-tooltip__text\">{insertZeroWidthSpace(text)}</div>\n    </div>\n  );\n};\n\nTooltip.defaultProps = {\n  chartSize: {},\n  targetRect: {},\n  visible: false,\n  text: ''\n};\n\nexport default Tooltip;\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport classnames from 'classnames';\nimport 'd3-transition';\nimport { select, event } from 'd3-selection';\nimport { zoom, zoomIdentity } from 'd3-zoom';\nimport { updateChartSize } from '../../actions';\nimport { toggleNodeClicked, toggleNodeHovered } from '../../actions/nodes';\nimport { getNodeActive, getNodeSelected } from '../../selectors/nodes';\nimport {\n  getChartSize,\n  getGraphSize,\n  getLayoutNodes,\n  getLayoutEdges,\n  getZoomPosition\n} from '../../selectors/layout';\nimport { getLayers } from '../../selectors/layers';\nimport { getCentralNode, getLinkedNodes } from '../../selectors/linked-nodes';\nimport draw from './draw';\nimport Tooltip from '../tooltip';\nimport './styles/flowchart.css';\n\n/**\n * Display a pipeline flowchart, mostly rendered with D3\n */\nexport class FlowChart extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      tooltip: {}\n    };\n\n    this.DURATION = 700;\n\n    this.containerRef = React.createRef();\n    this.svgRef = React.createRef();\n    this.wrapperRef = React.createRef();\n    this.edgesRef = React.createRef();\n    this.nodesRef = React.createRef();\n    this.layersRef = React.createRef();\n    this.layerNamesRef = React.createRef();\n  }\n\n  componentDidMount() {\n    this.selectD3Elements();\n    this.updateChartSize();\n    this.initZoomBehaviour();\n    this.drawChart();\n    this.zoomChart();\n    this.addGlobalEventListeners();\n  }\n\n  componentWillUnmount() {\n    this.removeGlobalEventListeners();\n  }\n\n  componentDidUpdate(prevProps) {\n    if (prevProps.visibleSidebar !== this.props.visibleSidebar) {\n      this.updateChartSize();\n    }\n    if (prevProps.zoom !== this.props.zoom) {\n      this.zoomChart();\n    }\n    this.drawChart();\n  }\n\n  /**\n   * Create D3 element selectors\n   */\n  selectD3Elements() {\n    this.el = {\n      svg: select(this.svgRef.current),\n      wrapper: select(this.wrapperRef.current),\n      edgeGroup: select(this.edgesRef.current),\n      nodeGroup: select(this.nodesRef.current),\n      layerGroup: select(this.layersRef.current),\n      layerNameGroup: select(this.layerNamesRef.current)\n    };\n  }\n\n  /**\n   * Configure globals for the container dimensions,\n   * and apply them to the chart SVG\n   */\n  updateChartSize() {\n    this.props.onUpdateChartSize(\n      this.containerRef.current.getBoundingClientRect()\n    );\n  }\n\n  /**\n   * Add window event listeners on mount\n   */\n  addGlobalEventListeners() {\n    // Add ResizeObserver to listen for any changes in the container's width/height\n    // (with event listener fallback)\n    if (window.ResizeObserver) {\n      this.resizeObserver =\n        this.resizeObserver ||\n        new window.ResizeObserver(this.handleWindowResize);\n      this.resizeObserver.observe(this.containerRef.current);\n    } else {\n      window.addEventListener('resize', this.handleWindowResize);\n    }\n    // Print event listeners\n    window.addEventListener('beforeprint', this.handleBeforePrint);\n    window.addEventListener('afterprint', this.handleAfterPrint);\n  }\n\n  /**\n   * Remove window event listeners on unmount\n   */\n  removeGlobalEventListeners() {\n    // ResizeObserver\n    if (window.ResizeObserver) {\n      this.resizeObserver.unobserve(this.containerRef.current);\n    } else {\n      window.removeEventListener('resize', this.handleWindowResize);\n    }\n    // Print event listeners\n    window.removeEventListener('beforeprint', this.handleBeforePrint);\n    window.removeEventListener('afterprint', this.handleAfterPrint);\n  }\n\n  /**\n   * Handle window resize\n   */\n  handleWindowResize = () => {\n    this.updateChartSize();\n  };\n\n  /**\n   * Add viewBox on window print so that the SVG can be scaled to fit\n   */\n  handleBeforePrint = () => {\n    const gs = this.props.graphSize;\n    const width = gs.width + gs.marginx * 2;\n    const height = gs.height + gs.marginy * 2;\n    this.el.svg.attr('viewBox', `0 0 ${width} ${height}`);\n  };\n\n  /**\n   * Remove viewBox once printing is done\n   */\n  handleAfterPrint = () => {\n    this.el.svg.attr('viewBox', null);\n  };\n\n  /**\n   * Setup D3 zoom behaviour on component mount\n   */\n  initZoomBehaviour() {\n    this.zoomBehaviour = zoom().on('zoom', () => {\n      const { k: scale, y } = event.transform;\n      const { sidebarWidth } = this.props.chartSize;\n      const { width, height } = this.props.graphSize;\n\n      // Limit zoom translate extent: This needs to be recalculated on zoom\n      // as it needs access to the current scale to correctly multiply the\n      // sidebarWidth by the scale to offset it properly\n      const margin = 500;\n      this.zoomBehaviour.translateExtent([\n        [-sidebarWidth / scale - margin, -margin],\n        [width + margin, height + margin]\n      ]);\n\n      // Transform the <g> that wraps the chart\n      this.el.wrapper.attr('transform', event.transform);\n\n      // Update layer label y positions\n      if (this.el.layerNames) {\n        this.el.layerNames.style('transform', d => {\n          const ty = y + (d.y + d.height / 2) * scale;\n          return `translateY(${ty}px)`;\n        });\n      }\n\n      // Hide the tooltip so it doesn't get misaligned to its node\n      this.hideTooltip();\n    });\n    this.el.svg.call(this.zoomBehaviour);\n  }\n\n  /**\n   * Zoom and scale to fit\n   */\n  zoomChart() {\n    const { scale = 1, translateX = 0, translateY = 0 } = this.props.zoom;\n\n    // Limit zoom scale extent\n    this.zoomBehaviour.scaleExtent([scale * 0.8, 2]);\n\n    // Auto zoom to fit the chart nicely on the page\n    this.el.svg\n      .transition()\n      .duration(this.DURATION)\n      .call(\n        this.zoomBehaviour.transform,\n        zoomIdentity.translate(translateX, translateY).scale(scale)\n      );\n  }\n\n  /**\n   * Render chart to the DOM with D3\n   */\n  drawChart() {\n    draw.call(this);\n  }\n\n  /**\n   * Enable a node's focus state and highlight linked nodes\n   * @param {Object} node Datum for a single node\n   */\n  handleNodeClick = node => {\n    this.props.onToggleNodeClicked(node.id);\n    event.stopPropagation();\n  };\n\n  /**\n   * Remove a node's focus state and dim linked nodes\n   */\n  handleChartClick = () => {\n    this.props.onToggleNodeClicked(null);\n  };\n\n  /**\n   * Enable a node's active state, show tooltip, and highlight linked nodes\n   * @param {Object} node Datum for a single node\n   */\n  handleNodeMouseOver = node => {\n    this.props.onToggleNodeHovered(node.id);\n    this.showTooltip(node);\n  };\n\n  /**\n   * Remove a node's active state, hide tooltip, and dim linked nodes\n   * @param {Object} node Datum for a single node\n   */\n  handleNodeMouseOut = () => {\n    this.props.onToggleNodeHovered(null);\n    this.hideTooltip();\n  };\n\n  /**\n   * Handle keydown event when a node is focused\n   * @param {Object} node Datum for a single node\n   */\n  handleNodeKeyDown = node => {\n    const ENTER = 13;\n    const ESCAPE = 27;\n    if (event.keyCode === ENTER) {\n      this.handleNodeClick(node);\n    }\n    if (event.keyCode === ESCAPE) {\n      this.handleChartClick();\n      this.handleNodeMouseOut(node);\n    }\n  };\n\n  /**\n   * Show, fill and and position the tooltip\n   * @param {Object} node A node datum\n   */\n  showTooltip(node) {\n    this.setState({\n      tooltip: {\n        targetRect: event.target.getBoundingClientRect(),\n        text: node.fullName,\n        visible: true\n      }\n    });\n  }\n\n  /**\n   * Hide the tooltip\n   */\n  hideTooltip() {\n    if (this.state.tooltip.visible) {\n      this.setState({\n        tooltip: {\n          ...this.state.tooltip,\n          visible: false\n        }\n      });\n    }\n  }\n\n  /**\n   * Render React elements\n   */\n  render() {\n    const { chartSize, visibleLayers } = this.props;\n    const { outerWidth = 0, outerHeight = 0 } = chartSize;\n\n    return (\n      <div\n        className=\"pipeline-flowchart kedro\"\n        ref={this.containerRef}\n        onClick={this.handleChartClick}>\n        <svg\n          id=\"pipeline-graph\"\n          className=\"pipeline-flowchart__graph\"\n          width={outerWidth}\n          height={outerHeight}\n          ref={this.svgRef}>\n          <defs>\n            <marker\n              id=\"pipeline-arrowhead\"\n              className=\"pipeline-flowchart__arrowhead\"\n              viewBox=\"0 0 10 10\"\n              refX=\"7\"\n              refY=\"5\"\n              markerUnits=\"strokeWidth\"\n              markerWidth=\"8\"\n              markerHeight=\"6\"\n              orient=\"auto\">\n              <path d=\"M 0 0 L 10 5 L 0 10 L 4 5 z\" />\n            </marker>\n          </defs>\n          <g id=\"zoom-wrapper\" ref={this.wrapperRef}>\n            <g className=\"pipeline-flowchart__layers\" ref={this.layersRef} />\n            <g className=\"pipeline-flowchart__edges\" ref={this.edgesRef} />\n            <g\n              id=\"nodes\"\n              className=\"pipeline-flowchart__nodes\"\n              ref={this.nodesRef}\n            />\n          </g>\n        </svg>\n        <ul\n          className={classnames('pipeline-flowchart__layer-names', {\n            'pipeline-flowchart__layer-names--visible': visibleLayers\n          })}\n          ref={this.layerNamesRef}\n        />\n        <Tooltip chartSize={chartSize} {...this.state.tooltip} />\n      </div>\n    );\n  }\n}\n\nexport const mapStateToProps = state => ({\n  centralNode: getCentralNode(state),\n  chartSize: getChartSize(state),\n  edges: getLayoutEdges(state),\n  graphSize: getGraphSize(state),\n  layers: getLayers(state),\n  linkedNodes: getLinkedNodes(state),\n  nodes: getLayoutNodes(state),\n  nodeActive: getNodeActive(state),\n  nodeSelected: getNodeSelected(state),\n  textLabels: state.textLabels,\n  visibleLayers: state.visible.layers,\n  visibleSidebar: state.visible.sidebar,\n  zoom: getZoomPosition(state)\n});\n\nexport const mapDispatchToProps = dispatch => ({\n  onToggleNodeClicked: nodeClicked => {\n    dispatch(toggleNodeClicked(nodeClicked));\n  },\n  onToggleNodeHovered: nodeHovered => {\n    dispatch(toggleNodeHovered(nodeHovered));\n  },\n  onUpdateChartSize: chartSize => {\n    dispatch(updateChartSize(chartSize));\n  }\n});\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(FlowChart);\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport Checkbox from '@quantumblack/kedro-ui/lib/components/checkbox';\nimport Dropdown from '@quantumblack/kedro-ui/lib/components/dropdown';\nimport '@quantumblack/kedro-ui/lib/components/menu-option/menu-option.css';\nimport { toggleTagActive, toggleTagFilter } from '../../actions/tags';\nimport { getTagData, getTagCount } from '../../selectors/tags';\nimport './tag-list.css';\n\n/**\n * A Dropdown displaying a list of tags with checkboxes to toggle them on/off\n * @param {Object} tagCount Number of enabled and active tags\n * @param {Function} onToggleTagActive Handle toggling a tag's active state\n * @param {Function} onToggleTagFilter Handle toggling a tag's enabled state\n * @param {Array} tags List of tags for given pipline\n * @param {string} theme Kedro UI light/dark theme\n */\nexport const TagList = ({\n  tagCount,\n  onToggleTagActive,\n  onToggleTagFilter,\n  tags,\n  theme\n}) => (\n  <div className=\"pipeline-tags\">\n    <Dropdown\n      theme={theme}\n      width={null}\n      defaultText={`Tag filters (${tagCount.enabled}/${tagCount.total})`}>\n      <React.Fragment>\n        {tagCount.total > 0 ? (\n          <ul className=\"pipeline-tags__tag-list\">\n            {tags.map(tag => (\n              <li\n                key={`tag-${tag.id}`}\n                title={tag.name}\n                className=\"pipeline-tags__tag-list-item kui-menu-option\"\n                onMouseEnter={() => onToggleTagActive(tag.id, true)}\n                onMouseLeave={() => onToggleTagActive(tag.id, false)}>\n                <Checkbox\n                  checked={tag.enabled}\n                  label={<span>{tag.name}</span>}\n                  name={tag.id}\n                  onChange={(e, { checked }) =>\n                    onToggleTagFilter(tag.id, checked)\n                  }\n                  theme={theme}\n                />\n              </li>\n            ))}\n          </ul>\n        ) : (\n          <div className=\"pipeline-tags__empty kui-menu-option\">\n            There are no tags used in this pipeline.\n          </div>\n        )}\n      </React.Fragment>\n    </Dropdown>\n  </div>\n);\n\nexport const mapStateToProps = state => {\n  const tags = getTagData(state);\n  const tagCount = getTagCount(state);\n  return {\n    tagCount,\n    tags,\n    theme: state.theme\n  };\n};\n\nexport const mapDispatchToProps = dispatch => ({\n  onToggleTagActive: (tagID, active) => {\n    dispatch(toggleTagActive(tagID, active));\n  },\n  onToggleTagFilter: (tagID, enabled) => {\n    dispatch(toggleTagFilter(tagID, enabled));\n  }\n});\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(TagList);\n","import { createSelector } from 'reselect';\nimport utils from '@quantumblack/kedro-ui/lib/utils';\nconst { escapeRegExp, getHighlightedText } = utils;\n\n/**\n * Get a list of IDs of the visible nodes\n * @param {object} nodes Grouped nodes\n * @return {array} List of node IDs\n */\nexport const getNodeIDs = nodes => {\n  const getNodeIDs = type => nodes[type].map(node => node.id);\n  const concatNodeIDs = (nodeIDs, type) => nodeIDs.concat(getNodeIDs(type));\n\n  return Object.keys(nodes).reduce(concatNodeIDs, []);\n};\n\n/**\n * Add a new highlightedLabel field to each of the node objects\n * @param {object} nodes Grouped lists of nodes\n * @param {string} searchValue Search term\n * @return {object} The grouped nodes with highlightedLabel fields added\n */\nexport const highlightMatch = (nodes, searchValue) => {\n  const addHighlightedLabel = node => ({\n    highlightedLabel: getHighlightedText(node.name, searchValue),\n    ...node\n  });\n  const addLabelsToNodes = (newNodes, type) => ({\n    ...newNodes,\n    [type]: nodes[type].map(addHighlightedLabel)\n  });\n\n  return Object.keys(nodes).reduce(addLabelsToNodes, {});\n};\n\n/**\n * Check whether a name matches the search text\n * @param {string} name\n * @param {string} searchValue\n * @return {boolean} True if match\n */\nexport const nodeMatchesSearch = (node, searchValue) => {\n  const valueRegex = searchValue\n    ? new RegExp(escapeRegExp(searchValue), 'gi')\n    : '';\n  return Boolean(node.name.match(valueRegex));\n};\n\n/**\n * Return only the results that match the search text\n * @param {object} nodes Grouped lists of nodes\n * @param {string} searchValue Search term\n * @return {object} Grouped nodes\n */\nexport const filterNodes = (nodes, searchValue) => {\n  const filterNodesByType = type =>\n    nodes[type].filter(node => nodeMatchesSearch(node, searchValue));\n  const filterNodeLists = (newNodes, type) => ({\n    ...newNodes,\n    [type]: filterNodesByType(type)\n  });\n\n  return Object.keys(nodes).reduce(filterNodeLists, {});\n};\n\n/**\n * Return filtered/highlighted nodes, and filtered node IDs\n * @param {object} nodes Grouped lists of nodes\n * @param {string} searchValue Search term\n * @return {object} Grouped nodes, and node IDs\n */\nconst getFilteredNodes = createSelector(\n  [state => state.nodes, state => state.searchValue],\n  (nodes, searchValue) => {\n    const filteredNodes = filterNodes(nodes, searchValue);\n\n    return {\n      filteredNodes: highlightMatch(filteredNodes, searchValue),\n      nodeIDs: getNodeIDs(filteredNodes)\n    };\n  }\n);\n\nexport default getFilteredNodes;\n","import React from 'react';\nimport SearchBar from '@quantumblack/kedro-ui/lib/components/search-bar';\nimport utils from '@quantumblack/kedro-ui/lib/utils';\nimport { connect } from 'react-redux';\n\n/**\n * Handle Node List Search\n * @param {function} onUpdateSearchValue Event handler\n * @param {string} searchValue Search text\n * @param {string} theme Light/dark theme for Kedro-UI component\n */\nexport const NodeListSearch = ({ onUpdateSearchValue, searchValue, theme }) => {\n  /**\n   * Listen for keyboard events, and trigger relevant actions\n   * @param {number} keyCode The key event keycode\n   */\n  const handleKeyDown = event => {\n    utils.handleKeyEvent(event.keyCode, {\n      escape: onUpdateSearchValue.bind(this, '')\n    });\n  };\n\n  return (\n    <div className=\"pipeline-nodelist-search\" onKeyDown={handleKeyDown}>\n      <SearchBar\n        onChange={onUpdateSearchValue}\n        value={searchValue}\n        theme={theme}\n      />\n    </div>\n  );\n};\n\nexport const mapStateToProps = state => ({\n  theme: state.theme\n});\n\nexport default connect(mapStateToProps)(NodeListSearch);\n","import React from 'react';\n\nexport default ({ className }) => (\n  <svg className={className} viewBox=\"0 0 24 24\">\n    <path d=\"M12 5.7c4.4 0 8 5 8 6s-3.6 6-8 6-8-5-8-6 3.6-6 8-6zm0 2a4 4 0 100 8 4 4 0 000-8zm0 2a2 2 0 110 4 2 2 0 010-4z\" />\n  </svg>\n);\n","import React from 'react';\n\nexport default ({ className }) => (\n  <svg className={className} viewBox=\"0 0 24 24\">\n    <path d=\"M18.6 5.17l1.4 1.4-2.2 2.19C19.18 10.09 20 11.5 20 12c0 1.03-3.58 6-8 6a6.8 6.8 0 01-2.8-.64L6.56 20l-1.4-1.4L18.6 5.17zm-2.8 5.59l-1.92 1.93a2 2 0 01-1.2 1.19l-1.92 1.92a4 4 0 005.04-5.04zM12 6c.85 0 1.68.19 2.45.5l-1.6 1.59a4 4 0 00-4.76 4.76L5.94 15C4.74 13.75 4 12.48 4 12c0-1.06 3.58-6 8-6z\" />\n  </svg>\n);\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { toggleNodesDisabled } from '../../actions/nodes';\nimport VisibleIcon from '../icons/visible';\nimport InvisibleIcon from '../icons/invisible';\n\nexport const NodeListToggleAll = ({ onToggleNodesDisabled, nodeIDs }) => (\n  <div className=\"kedro pipeline-nodelist__toggle\">\n    <h2 className=\"pipeline-nodelist__toggle__title\">All Elements</h2>\n    <div className=\"pipeline-nodelist__toggle__row\">\n      <button\n        onClick={() => onToggleNodesDisabled(nodeIDs, false)}\n        className=\"pipeline-nodelist__toggle__button\">\n        <VisibleIcon className=\"pipeline-nodelist__toggle__icon\" />\n        Show all\n      </button>\n      <button\n        onClick={() => onToggleNodesDisabled(nodeIDs, true)}\n        className=\"pipeline-nodelist__toggle__button\">\n        <InvisibleIcon className=\"pipeline-nodelist__toggle__icon\" />\n        Hide all\n      </button>\n    </div>\n  </div>\n);\n\nexport const mapDispatchToProps = dispatch => ({\n  onToggleNodesDisabled: (nodeIDs, disabled) => {\n    dispatch(toggleNodesDisabled(nodeIDs, disabled));\n  }\n});\n\nexport default connect(\n  null,\n  mapDispatchToProps\n)(NodeListToggleAll);\n","import { createSelector } from 'reselect';\nimport { getNodeDisabled } from './disabled';\nimport { arrayToObject } from '../utils';\n\nconst getNodeIDs = state => state.node.ids;\nconst getNodeType = state => state.node.type;\nconst getNodeTypeIDs = state => state.nodeType.ids;\nconst getNodeTypeName = state => state.nodeType.name;\nconst getNodeTypeDisabled = state => state.nodeType.disabled;\n\n/**\n * Calculate the total number of nodes (and the number of visible nodes)\n * for each node-type\n */\nexport const getTypeNodeCount = createSelector(\n  [getNodeTypeIDs, getNodeIDs, getNodeType, getNodeDisabled],\n  (types, nodeIDs, nodeType, nodeDisabled) =>\n    arrayToObject(types, type => {\n      const typeNodeIDs = nodeIDs.filter(nodeID => nodeType[nodeID] === type);\n      const visibleTypeNodeIDs = typeNodeIDs.filter(\n        nodeID => !nodeDisabled[nodeID]\n      );\n      return {\n        total: typeNodeIDs.length,\n        visible: visibleTypeNodeIDs.length\n      };\n    })\n);\n\n/**\n * Get formatted list of node type objects\n */\nexport const getNodeTypes = createSelector(\n  [getNodeTypeIDs, getNodeTypeName, getNodeTypeDisabled, getTypeNodeCount],\n  (types, typeName, typeDisabled, typeNodeCount) =>\n    types.map(id => ({\n      id,\n      name: typeName[id],\n      disabled: Boolean(typeDisabled[id]),\n      nodeCount: typeNodeCount[id]\n    }))\n);\n","import React from 'react';\nimport classnames from 'classnames';\nimport NodeIcon from '../icons/node-icon';\nimport VisibleIcon from '../icons/visible';\nimport InvisibleIcon from '../icons/invisible';\n\nconst NodeListRow = ({\n  active,\n  checked,\n  children,\n  disabled,\n  id,\n  label,\n  name,\n  onMouseEnter,\n  onMouseLeave,\n  onChange,\n  onClick,\n  selected,\n  type\n}) => {\n  const VisibilityIcon = checked ? VisibleIcon : InvisibleIcon;\n  const visible = Boolean(onClick && !disabled && checked);\n  const faded = disabled || !checked;\n\n  return (\n    <div\n      className={classnames('pipeline-nodelist__row kedro', {\n        'pipeline-nodelist__row--visible': visible,\n        'pipeline-nodelist__row--active': active,\n        'pipeline-nodelist__row--selected': selected,\n        'pipeline-nodelist__row--disabled': disabled\n      })}\n      onMouseEnter={visible ? onMouseEnter : null}\n      onMouseLeave={visible ? onMouseLeave : null}>\n      <button\n        className=\"pipeline-nodelist__row__text\"\n        onClick={onClick}\n        onFocus={onMouseEnter}\n        onBlur={onMouseLeave}\n        disabled={!visible}\n        title={children ? null : name}>\n        <NodeIcon\n          className={classnames(\n            'pipeline-nodelist__row__type-icon pipeline-nodelist__row__icon',\n            {\n              'pipeline-nodelist__row__type-icon--faded': faded,\n              'pipeline-nodelist__row__type-icon--nested': !children\n            }\n          )}\n          type={type}\n        />\n        <span\n          className={classnames('pipeline-nodelist__row__label', {\n            'pipeline-nodelist__row__label--faded': faded\n          })}\n          dangerouslySetInnerHTML={{ __html: label }}\n        />\n      </button>\n      {children}\n      <label htmlFor={id} className=\"pipeline-nodelist__row__visibility\">\n        <input\n          id={id}\n          className=\"pipeline-nodelist__row__checkbox\"\n          type=\"checkbox\"\n          checked={checked}\n          disabled={disabled}\n          name={name}\n          onChange={onChange}\n        />\n        <VisibilityIcon\n          aria-label={name}\n          className={classnames(\n            'pipeline-nodelist__row__icon pipeline-nodelist__row__visibility-icon',\n            {\n              'pipeline-nodelist__row__visibility-icon--unchecked': !checked\n            }\n          )}\n        />\n      </label>\n    </div>\n  );\n};\n\nexport default NodeListRow;\n","import React from 'react';\nimport classnames from 'classnames';\nimport { connect } from 'react-redux';\nimport { Flipped } from 'react-flip-toolkit';\nimport NodeListRow from './node-list-row';\nimport { toggleTypeDisabled } from '../../actions/node-type';\n\nexport const NodeListGroup = ({\n  children,\n  collapsed,\n  onToggleTypeDisabled,\n  onToggleCollapsed,\n  type\n}) => (\n  <Flipped flipId={type.id}>\n    <li>\n      <Flipped inverseFlipId={type.id} scale>\n        <div>\n          <h3 className=\"pipeline-nodelist__heading\">\n            <NodeListRow\n              checked={!type.disabled}\n              id={type.id}\n              label={`${type.name} <i>(${type.nodeCount.visible}/${\n                type.nodeCount.total\n              })</i>`}\n              name={type.name}\n              onChange={e => {\n                onToggleTypeDisabled(type.id, !e.target.checked);\n              }}\n              type={type.id}>\n              <button\n                aria-label={`${\n                  collapsed ? 'Show' : 'Hide'\n                } ${type.name.toLowerCase()}`}\n                onClick={() => onToggleCollapsed(type.id)}\n                className={classnames('pipeline-type-group-toggle', {\n                  'pipeline-type-group-toggle--alt': collapsed\n                })}\n              />\n            </NodeListRow>\n          </h3>\n          <Flipped\n            flipId={`${type.id}-children`}\n            onAppear={el => {\n              el.classList.add('pipeline-nodelist--fade-in');\n              el.onanimationend = () => {\n                el.style.opacity = 1;\n                el.classList.remove('pipeline-nodelist--fade-in');\n              };\n            }}\n            onExit={(el, i, removeElement) => {\n              el.style.opacity = 0;\n              el.classList.add('pipeline-nodelist--fade-out');\n              el.onanimationend = removeElement;\n            }}\n            opacity>\n            {collapsed ? null : children}\n          </Flipped>\n        </div>\n      </Flipped>\n    </li>\n  </Flipped>\n);\n\nexport const mapDispatchToProps = dispatch => ({\n  onToggleTypeDisabled: (typeID, disabled) => {\n    dispatch(toggleTypeDisabled(typeID, disabled));\n  }\n});\n\nexport default connect(\n  null,\n  mapDispatchToProps\n)(NodeListGroup);\n","import React, { useEffect, useState } from 'react';\nimport { connect } from 'react-redux';\nimport { Flipper } from 'react-flip-toolkit';\nimport utils from '@quantumblack/kedro-ui/lib/utils';\nimport { loadState, saveState } from '../../store/helpers';\nimport { getNodeActive, getNodeSelected } from '../../selectors/nodes';\nimport { getNodeTypes } from '../../selectors/node-types';\nimport NodeListGroup from './node-list-group';\nimport NodeListRow from './node-list-row';\nimport {\n  toggleNodeClicked,\n  toggleNodeHovered,\n  toggleNodesDisabled\n} from '../../actions/nodes';\n\nconst storedState = loadState();\n\nconst NodeListGroups = ({\n  onToggleNodeClicked,\n  onToggleNodesDisabled,\n  onToggleNodeHovered,\n  nodes,\n  nodeActive,\n  nodeSelected,\n  types\n}) => {\n  // Deselect node on Escape key\n  const handleKeyDown = event => {\n    utils.handleKeyEvent(event.keyCode, {\n      escape: () => onToggleNodeClicked(null)\n    });\n  };\n  useEffect(() => {\n    window.addEventListener('keydown', handleKeyDown);\n    return () => window.removeEventListener('keydown', handleKeyDown);\n  });\n\n  const [collapsed, setCollapsed] = useState(storedState.groupsCollapsed || {});\n\n  // Collapse/expand node group\n  const onToggleCollapsed = typeID => {\n    const groupsCollapsed = Object.assign({}, collapsed, {\n      [typeID]: !collapsed[typeID]\n    });\n    setCollapsed(groupsCollapsed);\n    saveState({ groupsCollapsed });\n  };\n\n  // Toggle node selection depending on whether it's already selected\n  const handleNodeSelection = nodeID => {\n    if (nodeSelected[nodeID]) {\n      onToggleNodeClicked(null);\n    } else {\n      onToggleNodeClicked(nodeID);\n    }\n  };\n\n  const renderTypeGroup = type => {\n    if (!nodes[type.id]) {\n      return null;\n    }\n    return (\n      <NodeListGroup\n        key={type.id}\n        onToggleCollapsed={onToggleCollapsed}\n        type={type}\n        collapsed={collapsed[type.id]}>\n        <ul className=\"pipeline-nodelist pipeline-nodelist--nested\">\n          {nodes[type.id].map(node => (\n            <li key={node.id}>\n              <NodeListRow\n                active={nodeActive[node.id]}\n                checked={!node.disabled_node}\n                disabled={node.disabled_tag || node.disabled_type}\n                id={node.id}\n                label={node.highlightedLabel}\n                name={node.name}\n                onClick={() => handleNodeSelection(node.id)}\n                onMouseEnter={() => onToggleNodeHovered(node.id)}\n                onMouseLeave={() => onToggleNodeHovered(null)}\n                onChange={e => {\n                  onToggleNodesDisabled([node.id], !e.target.checked);\n                }}\n                selected={nodeSelected[node.id]}\n                type={node.type}\n              />\n            </li>\n          ))}\n        </ul>\n      </NodeListGroup>\n    );\n  };\n\n  return (\n    <Flipper flipKey={collapsed}>\n      <ul className=\"pipeline-nodelist\">{types.map(renderTypeGroup)}</ul>\n    </Flipper>\n  );\n};\n\nexport const mapStateToProps = state => ({\n  nodeActive: getNodeActive(state),\n  nodeSelected: getNodeSelected(state),\n  types: getNodeTypes(state)\n});\n\nexport const mapDispatchToProps = dispatch => ({\n  onToggleNodeClicked: nodeID => {\n    dispatch(toggleNodeClicked(nodeID));\n  },\n  onToggleNodeHovered: nodeID => {\n    dispatch(toggleNodeHovered(nodeID));\n  },\n  onToggleNodesDisabled: (nodeIDs, disabled) => {\n    dispatch(toggleNodesDisabled(nodeIDs, disabled));\n  }\n});\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(NodeListGroups);\n","import React, { useState } from 'react';\nimport { connect } from 'react-redux';\nimport { Scrollbars } from 'react-custom-scrollbars';\nimport { getGroupedNodes } from '../../selectors/nodes';\nimport getFilteredNodes from './filter-nodes';\nimport NodeListSearch from './node-list-search';\nimport NodeListToggleAll from './node-list-toggle';\nimport NodeListGroups from './node-list-groups';\nimport './styles/node-list.css';\n\n/**\n * Scrollable list of toggleable nodes, with search & filter functionality\n */\nconst NodeList = ({ nodes }) => {\n  const [searchValue, updateSearchValue] = useState('');\n  const { filteredNodes, nodeIDs } = getFilteredNodes({ nodes, searchValue });\n\n  return (\n    <React.Fragment>\n      <NodeListSearch\n        onUpdateSearchValue={updateSearchValue}\n        searchValue={searchValue}\n      />\n      <Scrollbars\n        className=\"pipeline-nodelist-scrollbars\"\n        style={{ width: 'auto' }}\n        autoHide\n        hideTracksWhenNotNeeded>\n        <NodeListToggleAll nodeIDs={nodeIDs} />\n        <NodeListGroups nodes={filteredNodes} />\n      </Scrollbars>\n    </React.Fragment>\n  );\n};\n\nexport const mapStateToProps = state => ({\n  nodes: getGroupedNodes(state)\n});\n\nexport default connect(mapStateToProps)(NodeList);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport classnames from 'classnames';\nimport LabelIcon from '../icons/label';\nimport LayersIcon from '../icons/layers';\nimport MenuIcon from '../icons/menu';\nimport ThemeIcon from '../icons/theme';\nimport ExportIcon from '../icons/export';\n\nconst icons = {\n  label: LabelIcon,\n  layers: LayersIcon,\n  menu: MenuIcon,\n  theme: ThemeIcon,\n  export: ExportIcon\n};\n\n/**\n * Icon button component\n * @param {Function} onToggle Handle toggling theme between light/dark\n * @param {string} theme Kedro UI light/dark theme\n */\nconst IconButton = ({\n  ariaLabel,\n  ariaLive,\n  className,\n  disabled,\n  icon,\n  labelText,\n  onClick,\n  visible\n}) => {\n  const Icon = icons[icon];\n\n  return visible ? (\n    <li>\n      <button\n        aria-label={ariaLabel}\n        aria-live={ariaLive}\n        className={classnames('pipeline-icon-toolbar__button', className)}\n        disabled={disabled}\n        onClick={onClick}>\n        <span className=\"pipeline-icon-toolbar__label\">{labelText}</span>\n        <Icon className=\"pipeline-icon\" />\n      </button>\n    </li>\n  ) : null;\n};\n\nIconButton.propTypes = {\n  ariaLabel: PropTypes.string,\n  ariaLive: PropTypes.string,\n  disabled: PropTypes.bool,\n  icon: PropTypes.string,\n  labelText: PropTypes.string,\n  onClick: PropTypes.func,\n  visible: PropTypes.bool\n};\n\nIconButton.defaultProps = {\n  ariaLabel: null,\n  ariaLive: null,\n  disabled: false,\n  icon: 'label',\n  labelText: null,\n  onClick: null,\n  visible: true\n};\n\nexport default IconButton;\n","import React from 'react';\n\nexport default ({ className }) => (\n  <svg className={className} viewBox=\"0 0 22 20\">\n    <path d=\"M22 0v20H7.3L0 10 7.3 0H22zm-6.2 5h-3.6L10 15h2l.3-1.8h3.4L16 15H18L15.8 5zm-1.5 1.7l1 4.7h-2.6l1-4.7h.6z\" />\n  </svg>\n);\n","import React from 'react';\n\nexport default ({ className }) => (\n  <svg\n    className={className}\n    xmlns=\"http://www.w3.org/2000/svg\"\n    viewBox=\"0 0 20 20\">\n    <path d=\"M9.97 0l10.09 5-5.04 2.5 5.04 2.5-5.04 2.5 5.04 2.5L10 20 0 15l5-2.5L0 10l5.02-2.5L0 5zM7.23 13.61L4.47 15 10 17.77 15.56 15l-2.79-1.38L10 15zm5.56-4.98L9.99 10 7.26 8.63l-2.77 1.38 3.56 1.77 1.96.95 2.1-1L15.57 10zm-2.82-6.4L4.47 5 10 7.77 15.56 5z\" />\n  </svg>\n);\n","import React from 'react';\n\nexport default ({ className }) => (\n  <svg className={className} viewBox=\"0 0 24 24\">\n    <path d=\"M15.3 3.3l1.4 1.4L9.4 12l7.3 7.3-1.4 1.4L6.6 12z\" />\n  </svg>\n);\n","import React from 'react';\n\nexport default ({ className }) => (\n  <svg className={className} viewBox=\"0 0 20 20\">\n    <path d=\"M10 0a10 10 0 1 1 0 20 10 10 0 0 1 0-20zm0 2v16a8 8 0 1 0 0-16z\" />\n  </svg>\n);\n","import React from 'react';\n\nexport default ({ className }) => (\n  <svg className={className} viewBox=\"0 0 24 24\">\n    <path d=\"M5 16v4h14v-4h2v4c0 1-.8 2-1.9 2H5a2 2 0 01-2-2v-4h2zm8-14v11l3.5-3.5L18 11l-6 6-6-6 1.5-1.5L11 13V2h2z\" />\n  </svg>\n);\n","import React from 'react';\nimport classnames from 'classnames';\nimport { connect } from 'react-redux';\nimport {\n  toggleExportModal,\n  toggleLayers,\n  toggleSidebar,\n  toggleTextLabels,\n  toggleTheme\n} from '../../actions';\nimport IconButton from './icon-button';\nimport './icon-toolbar.css';\n\n/**\n * Main contols for filtering the chart data\n * @param {Function} onToggleTheme Handle toggling theme between light/dark\n * @param {Function} onToggleTextLabels Handle toggling text labels on/off\n * @param {Boolean} textLabels Whether text labels are displayed\n * @param {string} theme Kedro UI light/dark theme\n */\nexport const IconToolbar = ({\n  disableLayerBtn,\n  onToggleExportModal,\n  onToggleLayers,\n  onToggleSidebar,\n  onToggleTextLabels,\n  onToggleTheme,\n  textLabels,\n  theme,\n  visible\n}) => (\n  <>\n    <ul className=\"pipeline-icon-toolbar kedro\">\n      <IconButton\n        ariaLabel={`${visible.sidebar ? 'Hide' : 'Show'} menu`}\n        className={classnames('pipeline-menu-button', {\n          'pipeline-menu-button--inverse': !visible.sidebar\n        })}\n        onClick={() => onToggleSidebar(!visible.sidebar)}\n        icon=\"menu\"\n        labelText={`${visible.sidebar ? 'Hide' : 'Show'} menu`}\n      />\n      <IconButton\n        ariaLive=\"polite\"\n        ariaLabel={`Change to ${theme === 'light' ? 'dark' : 'light'} theme`}\n        onClick={() => onToggleTheme(theme === 'light' ? 'dark' : 'light')}\n        icon=\"theme\"\n        labelText=\"Toggle theme\"\n        visible={visible.themeBtn}\n      />\n      <IconButton\n        ariaLive=\"polite\"\n        onClick={() => onToggleTextLabels(!textLabels)}\n        icon=\"label\"\n        labelText={`${textLabels ? 'Hide' : 'Show'} text labels`}\n        visible={visible.labelBtn}\n      />\n      <IconButton\n        ariaLabel=\"Export graph as SVG or PNG\"\n        onClick={() => onToggleExportModal(true)}\n        icon=\"export\"\n        labelText=\"Export visualisation\"\n        visible={visible.exportBtn}\n      />\n      <IconButton\n        ariaLabel={`Turn data layers ${visible.layers ? 'off' : 'on'}`}\n        onClick={() => onToggleLayers(!visible.layers)}\n        icon=\"layers\"\n        labelText={`${visible.layers ? 'Hide' : 'Show'} layers`}\n        disabled={disableLayerBtn}\n        visible={visible.layerBtn}\n      />\n    </ul>\n  </>\n);\n\nexport const mapStateToProps = state => ({\n  disableLayerBtn: !state.layer.ids.length,\n  textLabels: state.textLabels,\n  theme: state.theme,\n  visible: state.visible\n});\n\nexport const mapDispatchToProps = dispatch => ({\n  onToggleExportModal: value => {\n    dispatch(toggleExportModal(value));\n  },\n  onToggleLayers: value => {\n    dispatch(toggleLayers(Boolean(value)));\n  },\n  onToggleSidebar: visible => {\n    dispatch(toggleSidebar(visible));\n  },\n  onToggleTextLabels: value => {\n    dispatch(toggleTextLabels(Boolean(value)));\n  },\n  onToggleTheme: value => {\n    dispatch(toggleTheme(value));\n  }\n});\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(IconToolbar);\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport classnames from 'classnames';\nimport TagList from '../tag-list';\nimport NodeList from '../node-list';\nimport IconToolbar from '../icon-toolbar';\nimport './sidebar.css';\n\n/**\n * Main app container. Handles showing/hiding the sidebar nav, and theme classes.\n * @param {Object} props visible\n */\nexport const Sidebar = ({ visible }) => (\n  <>\n    <div\n      className={classnames('pipeline-sidebar', {\n        'pipeline-sidebar--visible': visible\n      })}>\n      <div className=\"pipeline-ui\">\n        <TagList />\n        <NodeList />\n      </div>\n      <IconToolbar />\n    </div>\n  </>\n);\n\nconst mapStateToProps = state => ({\n  visible: state.visible.sidebar\n});\n\nexport default connect(mapStateToProps)(Sidebar);\n","const { default: downloadSvg, downloadPng } =\n  typeof window !== 'undefined' && require('svg-crowbar');\n\n/**\n * Handle onClick for the SVG/PNG download button\n * @param {string} format Must be 'svg' or 'png'\n * @param {string} theme light/dark theme\n * @param {Object} graphSize Graph width/height/margin\n * @param {function} mockFn Mock testing function stand-in for svg-crowbar\n * @return {Function} onClick handler\n */\nconst exportGraph = ({ format, theme, graphSize, mockFn }) => {\n  const downloadFormats = {\n    png: downloadPng,\n    svg: downloadSvg\n  };\n  const download = mockFn || downloadFormats[format];\n\n  // Create clone of graph SVG to avoid breaking the original\n  const svg = document.querySelector('#pipeline-graph');\n  const clone = svg.parentNode.appendChild(svg.cloneNode(true));\n  clone.classList.add('kedro', `kui-theme--${theme}`, 'pipeline-graph--export');\n\n  // Reset zoom/translate\n  let width = graphSize.width + graphSize.marginx * 2;\n  let height = graphSize.height + graphSize.marginy * 2;\n  clone.setAttribute('viewBox', `0 0 ${width} ${height}`);\n  clone.querySelector('#zoom-wrapper').removeAttribute('transform');\n\n  // Impose a maximum size on PNGs because otherwise they break when downloading\n  if (format === 'png') {\n    const maxWidth = 5000;\n    width = Math.min(width, maxWidth);\n    height = Math.min(height, maxWidth * (height / width));\n  }\n  clone.setAttribute('width', width);\n  clone.setAttribute('height', height);\n\n  const style = document.createElement('style');\n  if (format === 'svg') {\n    // Add webfont\n    style.innerHTML =\n      '@import url(https://fonts.googleapis.com/css?family=Titillium+Web:400);';\n  } else {\n    // Add websafe fallback font\n    style.innerHTML = `.kedro {\n      font-family: \"Trebuchet MS\", \"Lucida Grande\", \"Lucida Sans Unicode\", \"Lucida Sans\", Tahoma, sans-serif;\n      letter-spacing: -0.4px;\n    }`;\n  }\n  clone.prepend(style);\n\n  // Download SVG/PNG\n  download(clone, 'kedro-pipeline', { css: 'internal' });\n\n  // Delete cloned SVG\n  svg.parentNode.removeChild(clone);\n};\n\nexport default exportGraph;\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport Modal from '@quantumblack/kedro-ui/lib/components/modal';\nimport Button from '@quantumblack/kedro-ui/lib/components/button';\nimport { toggleExportModal } from '../../actions';\nimport { getGraphSize } from '../../selectors/layout';\nimport exportGraph from './export-graph';\nimport './export-modal.css';\n\n/**\n * Kedro-UI modal to allow users to choose between SVG/PNG export formats\n */\nconst ExportModal = ({ graphSize, theme, onToggle, visible }) => {\n  if (!visible.exportBtn) {\n    return null;\n  }\n  return (\n    <Modal\n      title=\"Export pipeline visualisation\"\n      onClose={() => onToggle(false)}\n      theme={theme}\n      visible={visible.exportModal}>\n      <div className=\"pipeline-icon-modal\">\n        <Button\n          theme={theme}\n          onClick={() => {\n            exportGraph({ format: 'png', theme, graphSize });\n            onToggle(false);\n          }}>\n          Download PNG\n        </Button>\n        <Button\n          theme={theme}\n          onClick={() => {\n            exportGraph({ format: 'svg', theme, graphSize });\n            onToggle(false);\n          }}>\n          Download SVG\n        </Button>\n      </div>\n    </Modal>\n  );\n};\n\nexport const mapStateToProps = state => ({\n  graphSize: getGraphSize(state),\n  visible: state.visible,\n  theme: state.theme\n});\n\nexport const mapDispatchToProps = dispatch => ({\n  onToggle: value => {\n    dispatch(toggleExportModal(value));\n  }\n});\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(ExportModal);\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport classnames from 'classnames';\nimport FlowChart from '../flowchart';\nimport Sidebar from '../sidebar';\nimport ExportModal from '../export-modal';\nimport './wrapper.css';\n\n/**\n * Main app container. Handles showing/hiding the sidebar nav, and theme classes.\n */\nexport const Wrapper = ({ theme }) => (\n  <div\n    className={classnames('kedro-pipeline', {\n      'kui-theme--dark': theme === 'dark',\n      'kui-theme--light': theme === 'light'\n    })}>\n    <Sidebar />\n    <div className=\"pipeline-wrapper\">\n      <FlowChart />\n    </div>\n    <ExportModal />\n  </div>\n);\n\nexport const mapStateToProps = state => ({\n  theme: state.theme\n});\n\nexport default connect(mapStateToProps)(Wrapper);\n","import { getInitialPipelineState } from '../store/initial-state';\n/**\n * Check whether data is in expected format\n * @param {Object} data - The parsed data input\n * @return {Boolean} True if valid for formatting\n */\nconst validateInput = data => {\n  const { isArray } = Array;\n  return (\n    data && isArray(data.edges) && isArray(data.nodes) && isArray(data.tags)\n  );\n};\n\n/**\n * Get unique, reproducible ID for each edge, based on its nodes\n * @param {Object} source - Name and type of the source node\n * @param {Object} target - Name and type of the target node\n */\nconst getEdgeID = (source, target) => [source, target].join('|');\n\n/**\n * Add a new node if it doesn't already exist\n * @param {string} name - Default node name\n * @param {string} type - 'data' or 'task'\n * @param {Array} tags - List of associated tags\n */\nconst addNode = state => node => {\n  const { id } = node;\n  if (state.node.name[id]) {\n    return;\n  }\n  state.node.ids.push(id);\n  state.node.name[id] = node.name;\n  state.node.fullName[id] = node.full_name || node.name;\n  state.node.type[id] = node.type;\n  state.node.layer[id] = node.layer;\n  state.node.isParam[id] = node.type === 'parameters';\n  state.node.tags[id] = node.tags || [];\n};\n\n/**\n * Create a new link between two nodes and add it to the edges array\n * @param {Object} source - Parent node\n * @param {Object} target - Child node\n */\nconst addEdge = state => ({ source, target }) => {\n  const id = getEdgeID(source, target);\n  if (state.edge.ids.includes(id)) {\n    return;\n  }\n  state.edge.ids.push(id);\n  state.edge.sources[id] = source;\n  state.edge.targets[id] = target;\n};\n\n/**\n * Add a new Tag if it doesn't already exist\n * @param {Object} tag - Tag object\n */\nconst addTag = state => tag => {\n  const { id } = tag;\n  state.tag.ids.push(id);\n  state.tag.name[id] = tag.name;\n};\n\n/**\n * Add a new Layer if it doesn't already exist\n * @param {Object} layer - Layer object\n */\nconst addLayer = state => layer => {\n  // using layer name as both layerId and name.\n  // It futureproofs it if we need a separate layer ID in the future.\n  state.layer.ids.push(layer);\n  state.layer.name[layer] = layer;\n};\n\n/**\n * Convert the pipeline data into a normalised state object\n * @param {Object} data Raw unformatted data input\n * @return {Object} Formatted, normalized state\n */\nconst formatData = data => {\n  const state = getInitialPipelineState();\n\n  if (validateInput(data)) {\n    if (data.schema_id) {\n      state.id = data.schema_id;\n    }\n    data.nodes.forEach(addNode(state));\n    data.edges.forEach(addEdge(state));\n    if (data.tags) {\n      data.tags.forEach(addTag(state));\n    }\n    if (data.layers) {\n      data.layers.forEach(addLayer(state));\n    }\n  }\n\n  return state;\n};\n\nexport default formatData;\n","export default {\n  schema_id: '09876543210987654321',\n  layers: [\n    'Raw',\n    'Intermediate',\n    'Primary',\n    'Feature',\n    'Model Input',\n    'Model Output'\n  ],\n  tags: [\n    {\n      id: 'small',\n      name: 'small'\n    },\n    {\n      id: 'medium',\n      name: 'medium'\n    },\n    {\n      id: 'huge',\n      name: 'huge'\n    }\n  ],\n  nodes: [\n    {\n      id: 'task/salmon',\n      name: 'salmon',\n      full_name: 'salmon',\n      tags: ['small'],\n      layer: 'Intermediate',\n      type: 'task'\n    },\n    {\n      id: 'task/shark',\n      name: 'shark',\n      full_name: 'shark',\n      tags: ['medium', 'huge'],\n      layer: 'Intermediate',\n      type: 'task'\n    },\n    {\n      id: 'task/trout',\n      name: 'trout',\n      full_name: 'trout',\n      tags: ['small'],\n      layer: 'Model Input',\n      type: 'task'\n    },\n    {\n      id: 'data/whale',\n      name: 'whale',\n      full_name: 'whale',\n      tags: ['huge'],\n      layer: 'Model Output',\n      type: 'data'\n    },\n    {\n      id: 'data/dog',\n      name: 'dog',\n      full_name: 'dog',\n      tags: ['small', 'medium'],\n      layer: 'Raw',\n      type: 'data'\n    },\n    {\n      id: 'data/cat',\n      name: 'cat',\n      full_name: 'cat',\n      tags: ['small', 'medium', 'huge'],\n      layer: 'Raw',\n      type: 'data'\n    },\n    {\n      id: 'data/parameters_rabbit',\n      name: 'parameters_rabbit',\n      full_name: 'parameters_rabbit',\n      tags: ['small'],\n      layer: 'Intermediate',\n      type: 'parameters'\n    },\n    {\n      id: 'data/parameters',\n      name: 'parameters',\n      full_name: 'parameters',\n      tags: [],\n      layer: 'Intermediate',\n      type: 'parameters'\n    },\n    {\n      id: 'data/sheep',\n      name: 'sheep',\n      full_name: 'sheep',\n      tags: ['medium'],\n      layer: 'Primary',\n      type: 'data'\n    },\n    {\n      id: 'data/horse',\n      name: 'horse',\n      full_name: 'horse',\n      tags: ['huge'],\n      layer: 'Model Output',\n      type: 'data'\n    },\n    {\n      id: 'data/weasel',\n      name: 'weasel',\n      full_name: 'weasel',\n      tags: ['small'],\n      layer: 'Raw',\n      type: 'data'\n    },\n    {\n      id: 'data/elephant',\n      name: 'elephant',\n      full_name: 'elephant',\n      tags: ['huge'],\n      layer: 'Raw',\n      type: 'data'\n    },\n    {\n      id: 'data/bear',\n      name: 'bear',\n      full_name: 'bear',\n      tags: ['huge'],\n      layer: 'Raw',\n      type: 'data'\n    },\n    {\n      id: 'data/giraffe',\n      name: 'giraffe',\n      full_name: 'giraffe',\n      tags: ['huge'],\n      layer: 'Model Output',\n      type: 'data'\n    },\n    {\n      id: 'data/pig',\n      name: 'pig',\n      full_name: 'pig',\n      tags: ['medium'],\n      layer: 'Feature',\n      type: 'data'\n    }\n  ],\n  edges: [\n    {\n      target: 'task/salmon',\n      source: 'data/cat'\n    },\n    {\n      target: 'task/salmon',\n      source: 'data/dog'\n    },\n    {\n      target: 'task/salmon',\n      source: 'data/parameters'\n    },\n    {\n      target: 'task/salmon',\n      source: 'data/parameters_rabbit'\n    },\n    {\n      target: 'data/pig',\n      source: 'task/salmon'\n    },\n    {\n      target: 'data/horse',\n      source: 'task/salmon'\n    },\n    {\n      target: 'data/sheep',\n      source: 'task/salmon'\n    },\n    {\n      target: 'task/shark',\n      source: 'data/cat'\n    },\n    {\n      target: 'task/shark',\n      source: 'data/weasel'\n    },\n    {\n      target: 'task/shark',\n      source: 'data/elephant'\n    },\n    {\n      target: 'task/shark',\n      source: 'data/bear'\n    },\n    {\n      target: 'data/sheep',\n      source: 'task/shark'\n    },\n    {\n      target: 'data/pig',\n      source: 'task/shark'\n    },\n    {\n      target: 'data/giraffe',\n      source: 'task/shark'\n    },\n    {\n      target: 'task/trout',\n      source: 'data/pig'\n    },\n    {\n      target: 'data/whale',\n      source: 'task/trout'\n    }\n  ]\n};\n","export default {\n  schema_id: '12345678901234567890',\n  layers: [\n    'Raw',\n    'Intermediate',\n    'Primary',\n    'Feature',\n    'Model Input',\n    'Models',\n    'Model Output',\n    'Reporting'\n  ],\n  edges: [\n    {\n      source: '33920f3a',\n      target: '06c33e94'\n    },\n    {\n      source: '06c33e94',\n      target: '105160a0'\n    },\n    {\n      source: '814ef273',\n      target: '0b7e1ac6'\n    },\n    {\n      source: '0b7e1ac6',\n      target: '389b5286'\n    },\n    {\n      source: '58450007',\n      target: '22ea294c'\n    },\n    {\n      source: '22ea294c',\n      target: 'bcb40508'\n    },\n    {\n      source: '105160a0',\n      target: 'f1a163c4'\n    },\n    {\n      source: 'f1a163c4',\n      target: 'e44a096d'\n    },\n    {\n      source: '389b5286',\n      target: 'b2f97396'\n    },\n    {\n      source: 'b2f97396',\n      target: '8c1dcc36'\n    },\n    {\n      source: 'bcb40508',\n      target: '27bb9dc7'\n    },\n    {\n      source: '27bb9dc7',\n      target: '13a964bf'\n    },\n    {\n      source: '842a3580',\n      target: 'fb5bd01d'\n    },\n    {\n      source: 'e44a096d',\n      target: 'fb5bd01d'\n    },\n    {\n      source: '8c1dcc36',\n      target: 'fb5bd01d'\n    },\n    {\n      source: '13a964bf',\n      target: 'fb5bd01d'\n    },\n    {\n      source: 'fb5bd01d',\n      target: '55bd1af4'\n    },\n    {\n      source: '842a3580',\n      target: 'd52422da'\n    },\n    {\n      source: 'e44a096d',\n      target: 'd52422da'\n    },\n    {\n      source: '8c1dcc36',\n      target: 'd52422da'\n    },\n    {\n      source: '13a964bf',\n      target: 'd52422da'\n    },\n    {\n      source: 'd52422da',\n      target: '442c2c34'\n    },\n    {\n      source: '181c2b7c',\n      target: 'dcbb9652'\n    },\n    {\n      source: '057ade39',\n      target: 'dcbb9652'\n    },\n    {\n      source: 'dcbb9652',\n      target: '7eb64be0'\n    },\n    {\n      source: '181c2b7c',\n      target: 'c4cff5d0'\n    },\n    {\n      source: '42e79d42',\n      target: 'c4cff5d0'\n    },\n    {\n      source: 'c4cff5d0',\n      target: '842a3580'\n    },\n    {\n      source: '7eb64be0',\n      target: '95cfc42d'\n    },\n    {\n      source: '1b3afcba',\n      target: '95cfc42d'\n    },\n    {\n      source: '55bd1af4',\n      target: '95cfc42d'\n    },\n    {\n      source: '95cfc42d',\n      target: '8770a38e'\n    },\n    {\n      source: '95cfc42d',\n      target: '1dafa5fb'\n    },\n    {\n      source: '442c2c34',\n      target: 'ccbee9c5'\n    },\n    {\n      source: '3a60b3a4',\n      target: 'ccbee9c5'\n    },\n    {\n      source: 'ccbee9c5',\n      target: 'fb4f64bd'\n    },\n    {\n      source: 'ccbee9c5',\n      target: 'f4f3a276'\n    },\n    {\n      source: '1dafa5fb',\n      target: '394244dd'\n    },\n    {\n      source: '55bd1af4',\n      target: '394244dd'\n    },\n    {\n      source: '394244dd',\n      target: '792a14f6'\n    },\n    {\n      source: 'f4f3a276',\n      target: '67257e84'\n    },\n    {\n      source: '442c2c34',\n      target: '67257e84'\n    },\n    {\n      source: '67257e84',\n      target: '9bd2dc3d'\n    },\n    {\n      source: '1dafa5fb',\n      target: 'f6f50e64'\n    },\n    {\n      source: 'dff067eb',\n      target: 'f6f50e64'\n    },\n    {\n      source: '55bd1af4',\n      target: 'f6f50e64'\n    },\n    {\n      source: 'f6f50e64',\n      target: '92f58611'\n    },\n    {\n      source: 'dff067eb',\n      target: 'e061482b'\n    },\n    {\n      source: 'f4f3a276',\n      target: 'e061482b'\n    },\n    {\n      source: '442c2c34',\n      target: 'e061482b'\n    },\n    {\n      source: 'e061482b',\n      target: 'b2a3a8e5'\n    },\n    {\n      source: '792a14f6',\n      target: '53b05b01'\n    },\n    {\n      source: '8770a38e',\n      target: '53b05b01'\n    },\n    {\n      source: 'fb4f64bd',\n      target: '6d8d326d'\n    },\n    {\n      source: '9bd2dc3d',\n      target: '6d8d326d'\n    },\n    {\n      source: 'dff067eb',\n      target: '45bda5fd'\n    },\n    {\n      source: '9aeb6881',\n      target: '45bda5fd'\n    },\n    {\n      source: '92f58611',\n      target: '45bda5fd'\n    },\n    {\n      source: '45bda5fd',\n      target: '90713d4f'\n    },\n    {\n      source: 'dff067eb',\n      target: '211c92c3'\n    },\n    {\n      source: '92f58611',\n      target: '211c92c3'\n    },\n    {\n      source: '211c92c3',\n      target: '4704ff18'\n    },\n    {\n      source: 'dff067eb',\n      target: 'c17b9614'\n    },\n    {\n      source: '4704ff18',\n      target: 'c17b9614'\n    },\n    {\n      source: 'c17b9614',\n      target: 'ccd3d45b'\n    },\n    {\n      source: '90713d4f',\n      target: '90461ea7'\n    },\n    {\n      source: 'ccd3d45b',\n      target: '90461ea7'\n    },\n    {\n      source: '9bd2dc3d',\n      target: '90461ea7'\n    },\n    {\n      source: '792a14f6',\n      target: '90461ea7'\n    },\n    {\n      source: '4704ff18',\n      target: '90461ea7'\n    },\n    {\n      source: '90461ea7',\n      target: '3e3b263a'\n    },\n    {\n      source: '90461ea7',\n      target: 'f3e15708'\n    },\n    {\n      source: '90461ea7',\n      target: '83ebce11'\n    },\n    {\n      source: '90461ea7',\n      target: 'a72d7024'\n    },\n    {\n      source: '90461ea7',\n      target: '8dbed427'\n    }\n  ],\n  nodes: [\n    {\n      full_name: 'load_raw_interaction_data',\n      id: '06c33e94',\n      name: 'Load Raw Interaction Data',\n      tags: ['data_engineering', 'preprocessing'],\n      layer: 'Raw',\n      type: 'task'\n    },\n    {\n      full_name: 'load_raw_country_data',\n      id: '0b7e1ac6',\n      name: 'Load Raw Country Data',\n      tags: ['data_engineering', 'preprocessing'],\n      layer: 'Raw',\n      type: 'task'\n    },\n    {\n      full_name: 'load_raw_shopper_spend_data',\n      id: '22ea294c',\n      name: 'Load Raw Shopper Spend Data',\n      tags: ['data_engineering', 'preprocessing'],\n      layer: 'Raw',\n      type: 'task'\n    },\n    {\n      full_name: 'preprocess_intermediate_interaction_data',\n      id: 'f1a163c4',\n      name: 'Preprocess Intermediate Interaction Data',\n      tags: ['data_engineering', 'preprocessing'],\n      layer: 'Intermediate',\n      type: 'task'\n    },\n    {\n      full_name: 'preprocess_intermediate_country_data',\n      id: 'b2f97396',\n      name: 'Preprocess Intermediate Country Data',\n      tags: ['data_engineering', 'preprocessing'],\n      layer: 'Intermediate',\n      type: 'task'\n    },\n    {\n      full_name: 'preprocess_intermediate_shopper_spend_data',\n      id: '27bb9dc7',\n      name: 'Preprocess Intermediate Shopper Spend Data',\n      tags: ['data_engineering', 'preprocessing'],\n      layer: 'Intermediate',\n      type: 'task'\n    },\n    {\n      full_name: 'create_shopper_spend_features',\n      id: 'fb5bd01d',\n      name: 'Create Shopper Spend Features',\n      tags: ['feature_engineering', 'data_engineering'],\n      layer: 'Feature',\n      type: 'task'\n    },\n    {\n      full_name: 'create_shopper_churn_features',\n      id: 'd52422da',\n      name: 'Create Shopper Churn Features',\n      tags: ['feature_engineering', 'data_engineering'],\n      layer: 'Feature',\n      type: 'task'\n    },\n    {\n      full_name: 'prepare_vendor_input',\n      id: 'dcbb9652',\n      name: 'Prepare Vendor Input',\n      tags: ['feature_engineering', 'data_engineering'],\n      layer: 'Intermediate',\n      type: 'task'\n    },\n    {\n      full_name: 'prepare_crm_input',\n      id: 'c4cff5d0',\n      name: 'Prepare CRM Input',\n      tags: ['feature_engineering', 'data_engineering'],\n      layer: 'Intermediate',\n      type: 'task'\n    },\n    {\n      full_name: 'predictive_sales_model',\n      id: '95cfc42d',\n      name: 'Predictive Sales Model',\n      tags: ['model_training', 'data_science'],\n      layer: 'Model Input',\n      type: 'task'\n    },\n    {\n      full_name: 'predictive_engagement_model',\n      id: 'ccbee9c5',\n      name: 'Predictive Engagement Model',\n      tags: ['model_training', 'data_science'],\n      layer: 'Model Input',\n      type: 'task'\n    },\n    {\n      full_name: 'sales_model_explainable_ai',\n      id: '394244dd',\n      name: 'Sales Model Explainable AI',\n      tags: ['model_explaination', 'data_science'],\n      layer: 'Model Input',\n      type: 'task'\n    },\n    {\n      full_name: 'engagement_model_explainable_ai',\n      id: '67257e84',\n      name: 'Engagement Model Explainable AI',\n      tags: ['model_explaination', 'data_science'],\n      layer: 'Models',\n      type: 'task'\n    },\n    {\n      full_name: 'perform_digital_analysis',\n      id: 'f6f50e64',\n      name: 'Perform Digital Analysis',\n      tags: ['model_training', 'data_science'],\n      layer: 'Model Input',\n      type: 'task'\n    },\n    {\n      full_name: 'engagement_recommendation_engine',\n      id: 'e061482b',\n      name: 'Engagement Recommendation Engine',\n      tags: ['model_training', 'data_science'],\n      layer: 'Models',\n      type: 'task'\n    },\n    {\n      full_name: 'sales_model_performance_monitoring',\n      id: '53b05b01',\n      name: 'Sales Model Performance Monitoring',\n      tags: ['model_performance_monitoring', 'data_science'],\n      layer: 'Reporting',\n      type: 'task'\n    },\n    {\n      full_name: 'engagement_model_performance_monitoring',\n      id: '6d8d326d',\n      name: 'Engagement Model Performance Monitoring',\n      tags: ['model_performance_monitoring', 'data_science'],\n      layer: 'Reporting',\n      type: 'task'\n    },\n    {\n      full_name: 'multi-channel_optimisation',\n      id: '45bda5fd',\n      name: 'Multi-Channel Optimisation',\n      tags: ['optimisation', 'data_science'],\n      layer: 'Models',\n      type: 'task'\n    },\n    {\n      full_name: 'content_optimisation',\n      id: '211c92c3',\n      name: 'Content Optimisation',\n      tags: ['optimisation', 'data_science'],\n      layer: 'Models',\n      type: 'task'\n    },\n    {\n      full_name: 'segment_journeys',\n      id: 'c17b9614',\n      name: 'Segment Journeys',\n      tags: ['optimisation', 'data_science'],\n      layer: 'Model Output',\n      type: 'task'\n    },\n    {\n      full_name: 'generate_dashboard_inputs',\n      id: '90461ea7',\n      name: 'Generate Dashboard Inputs',\n      tags: ['reporting', 'data_science'],\n      layer: 'Reporting',\n      type: 'task'\n    },\n    {\n      full_name: 'interaction_raw',\n      id: '33920f3a',\n      name: 'Interaction Raw',\n      tags: ['data_engineering', 'preprocessing'],\n      layer: 'Raw',\n      type: 'data'\n    },\n    {\n      full_name: 'interaction_intermediate',\n      id: '105160a0',\n      name: 'Interaction Intermediate',\n      tags: ['data_engineering', 'preprocessing'],\n      layer: 'Intermediate',\n      type: 'data'\n    },\n    {\n      full_name: 'country_raw',\n      id: '814ef273',\n      name: 'Country Raw',\n      tags: ['data_engineering', 'preprocessing'],\n      layer: 'Raw',\n      type: 'data'\n    },\n    {\n      full_name: 'country_intermediate',\n      id: '389b5286',\n      name: 'Country Intermediate',\n      tags: ['data_engineering', 'preprocessing'],\n      layer: 'Intermediate',\n      type: 'data'\n    },\n    {\n      full_name: 'shopper_spend_raw',\n      id: '58450007',\n      name: 'Shopper Spend Raw',\n      tags: ['data_engineering', 'preprocessing'],\n      layer: 'Raw',\n      type: 'data'\n    },\n    {\n      full_name: 'shopper_spend_intermediate',\n      id: 'bcb40508',\n      name: 'Shopper Spend Intermediate',\n      tags: ['data_engineering', 'preprocessing'],\n      layer: 'Intermediate',\n      type: 'data'\n    },\n    {\n      full_name: 'interaction_primary',\n      id: 'e44a096d',\n      name: 'Interaction Primary',\n      tags: ['feature_engineering', 'data_engineering', 'preprocessing'],\n      layer: 'Primary',\n      type: 'data'\n    },\n    {\n      full_name: 'country_primary',\n      id: '8c1dcc36',\n      name: 'Country Primary',\n      tags: ['feature_engineering', 'data_engineering', 'preprocessing'],\n      layer: 'Primary',\n      type: 'data'\n    },\n    {\n      full_name: 'shopper_spend_primary',\n      id: '13a964bf',\n      name: 'Shopper Spend Primary',\n      tags: ['feature_engineering', 'data_engineering', 'preprocessing'],\n      layer: 'Primary',\n      type: 'data'\n    },\n    {\n      full_name: 'crm_predictions',\n      id: '842a3580',\n      name: 'CRM Predictions',\n      tags: ['feature_engineering', 'data_engineering'],\n      layer: 'Primary',\n      type: 'data'\n    },\n    {\n      full_name: 'shopper_spend_features',\n      id: '55bd1af4',\n      name: 'Shopper Spend Features',\n      tags: [\n        'data_science',\n        'model_training',\n        'model_explaination',\n        'feature_engineering',\n        'data_engineering'\n      ],\n      layer: 'Feature',\n      type: 'data'\n    },\n    {\n      full_name: 'shopper_churn_features',\n      id: '442c2c34',\n      name: 'Shopper Churn Features',\n      tags: [\n        'data_science',\n        'model_training',\n        'model_explaination',\n        'feature_engineering',\n        'data_engineering'\n      ],\n      layer: 'Feature',\n      type: 'data'\n    },\n    {\n      full_name: 'vendor_master',\n      id: '181c2b7c',\n      name: 'Vendor Master',\n      tags: ['feature_engineering', 'data_engineering'],\n      layer: 'Raw',\n      type: 'data'\n    },\n    {\n      full_name: 'salesforce_crm',\n      id: '057ade39',\n      name: 'Salesforce CRM',\n      tags: ['feature_engineering', 'data_engineering'],\n      layer: 'Raw',\n      type: 'data'\n    },\n    {\n      full_name: 'vendor_predictions',\n      id: '7eb64be0',\n      name: 'Vendor Predictions',\n      tags: [\n        'feature_engineering',\n        'data_engineering',\n        'data_science',\n        'model_training'\n      ],\n      layer: 'Primary',\n      type: 'data'\n    },\n    {\n      full_name: 'salesforce_accounts',\n      id: '42e79d42',\n      name: 'Salesforce Accounts',\n      tags: ['feature_engineering', 'data_engineering'],\n      layer: 'Raw',\n      type: 'data'\n    },\n    {\n      full_name: 'params:_sales_model',\n      id: '1b3afcba',\n      name: 'params: Sales Model',\n      tags: ['data_science', 'model_training'],\n      layer: 'Model Input',\n      type: 'parameters'\n    },\n    {\n      full_name: 'sales_validation_results',\n      id: '8770a38e',\n      name: 'Sales Validation Results',\n      tags: ['model_performance_monitoring', 'data_science', 'model_training'],\n      layer: 'Model Output',\n      type: 'data'\n    },\n    {\n      full_name: 'sales_trained_model',\n      id: '1dafa5fb',\n      name: 'Sales Trained Model',\n      tags: ['model_explaination', 'data_science', 'model_training'],\n      layer: 'Model Input',\n      type: 'data'\n    },\n    {\n      full_name: 'params:_engagement_model',\n      id: '3a60b3a4',\n      name: 'params: Engagement Model',\n      tags: ['data_science', 'model_training'],\n      layer: 'Model Input',\n      type: 'parameters'\n    },\n    {\n      full_name: 'engagement_validation_results',\n      id: 'fb4f64bd',\n      name: 'Engagement Validation Results',\n      tags: ['model_performance_monitoring', 'data_science', 'model_training'],\n      layer: 'Model Output',\n      type: 'data'\n    },\n    {\n      full_name: 'engagement_trained_model',\n      id: 'f4f3a276',\n      name: 'Engagement Trained Model',\n      tags: ['model_explaination', 'data_science', 'model_training'],\n      layer: 'Models',\n      type: 'data'\n    },\n    {\n      full_name: 'sales_model_explanations',\n      id: '792a14f6',\n      name: 'Sales Model Explanations',\n      tags: [\n        'model_explaination',\n        'data_science',\n        'model_performance_monitoring',\n        'reporting'\n      ],\n      layer: 'Model Output',\n      type: 'data'\n    },\n    {\n      full_name: 'engagement_model_explanations',\n      id: '9bd2dc3d',\n      name: 'Engagement Model Explanations',\n      tags: [\n        'model_explaination',\n        'data_science',\n        'model_performance_monitoring',\n        'reporting'\n      ],\n      layer: 'Model Output',\n      type: 'data'\n    },\n    {\n      full_name: 'params:_optimisation',\n      id: 'dff067eb',\n      name: 'params: Optimisation',\n      tags: ['data_science', 'model_training', 'optimisation'],\n      layer: 'Model Input',\n      type: 'parameters'\n    },\n    {\n      full_name: 'digital_analysis',\n      id: '92f58611',\n      name: 'Digital Analysis',\n      tags: ['data_science', 'model_training', 'optimisation'],\n      layer: 'Model Input',\n      type: 'data'\n    },\n    {\n      full_name: 'engagement_recommendations',\n      id: 'b2a3a8e5',\n      name: 'Engagement Recommendations',\n      tags: ['data_science', 'model_training'],\n      layer: 'Model Output',\n      type: 'data'\n    },\n    {\n      full_name: 'action_cost_table',\n      id: '9aeb6881',\n      name: 'Action Cost Table',\n      tags: ['data_science', 'optimisation'],\n      layer: 'Raw',\n      type: 'data'\n    },\n    {\n      full_name: 'multi-channel_resolutions',\n      id: '90713d4f',\n      name: 'Multi-Channel Resolutions',\n      tags: ['reporting', 'data_science', 'optimisation'],\n      layer: 'Model Output',\n      type: 'data'\n    },\n    {\n      full_name: 'content_resolutions',\n      id: '4704ff18',\n      name: 'Content Resolutions',\n      tags: ['reporting', 'data_science', 'optimisation'],\n      layer: 'Model Output',\n      type: 'data'\n    },\n    {\n      full_name: 'segment_journeys_allocations',\n      id: 'ccd3d45b',\n      name: 'Segment Journeys Allocations',\n      tags: ['reporting', 'data_science', 'optimisation'],\n      layer: 'Model Output',\n      type: 'data'\n    },\n    {\n      full_name: 'upselling_readiness_dashboard_input',\n      id: '3e3b263a',\n      name: 'Upselling Readiness Dashboard Input',\n      tags: ['reporting', 'data_science'],\n      layer: 'Reporting',\n      type: 'data'\n    },\n    {\n      full_name: 'lead_scoring_dashboard_input',\n      id: 'f3e15708',\n      name: 'Lead Scoring Dashboard Input',\n      tags: ['reporting', 'data_science'],\n      layer: 'Reporting',\n      type: 'data'\n    },\n    {\n      full_name: 'lifetime_value_prediction_dashboard_input',\n      id: '83ebce11',\n      name: 'Lifetime Value Prediction Dashboard Input',\n      tags: ['reporting', 'data_science'],\n      layer: 'Reporting',\n      type: 'data'\n    },\n    {\n      full_name: 'digital_sales_dashboard_input',\n      id: 'a72d7024',\n      name: 'Digital Sales Dashboard Input',\n      tags: ['reporting', 'data_science'],\n      layer: 'Reporting',\n      type: 'data'\n    },\n    {\n      full_name: 'vendor_sales_dashboard_input',\n      id: '8dbed427',\n      name: 'Vendor Sales Dashboard Input',\n      tags: ['reporting', 'data_science'],\n      layer: 'Reporting',\n      type: 'data'\n    }\n  ],\n  tags: [\n    {\n      id: 'model_performance_monitoring',\n      name: 'Model Performance Monitoring'\n    },\n    {\n      id: 'data_science',\n      name: 'Data Science'\n    },\n    {\n      id: 'reporting',\n      name: 'Reporting'\n    },\n    {\n      id: 'model_training',\n      name: 'Model Training'\n    },\n    {\n      id: 'preprocessing',\n      name: 'Preprocessing'\n    },\n    {\n      id: 'optimisation',\n      name: 'Optimisation'\n    },\n    {\n      id: 'model_explaination',\n      name: 'Model Explaination'\n    },\n    {\n      id: 'feature_engineering',\n      name: 'Feature Engineering'\n    },\n    {\n      id: 'data_engineering',\n      name: 'Data Engineering'\n    }\n  ]\n};\n","import { flags as flagsConfig } from '../config';\n\n/**\n * Flag definitions\n */\nexport const Flags = {\n  /**\n   * Returns `true` if the flag is defined otherwise `false`\n   * @param {string} name The flag name to test\n   * @returns {boolean} The result\n   */\n  isDefined: name => Flags.names().includes(name),\n\n  /**\n   * Returns an array of defined flag names\n   * @returns {array} The defined flag names\n   */\n  names: () => Object.keys(flagsConfig),\n\n  /**\n   * Returns an object mapping flag names to their default values\n   * @returns {object} The defined flag defaults\n   */\n  defaults: () =>\n    Flags.names().reduce(\n      (result, flag) =>\n        Object.assign(result, { [flag]: flagsConfig[flag].default }),\n      {}\n    )\n};\n\n/**\n * Returns an object with flags as set in given or current URL\n * @param {string=} url The URL (optional, default current location)\n * @returns {object} An object with flags and their values\n */\nexport const getFlagsFromUrl = url => {\n  const flags = {};\n\n  let urlParams;\n  try {\n    urlParams = new URL(url || document.location.href).searchParams;\n  } catch (e) {\n    console.warn('Feature flags are not supported in this browser');\n    return flags;\n  }\n\n  [...urlParams].forEach(([name, value]) =>\n    Flags.isDefined(name)\n      ? (flags[name] = value === 'true' || value === '1' || value === '')\n      : null\n  );\n\n  return flags;\n};\n\n/**\n * Returns a user info message describing the status of all defined flags\n * @param {object} flagsEnabled An object mapping of flag status\n * @returns {string} The info message\n */\nexport const getFlagsMessage = flagsEnabled => {\n  const allNames = Flags.names();\n\n  if (allNames.length > 0) {\n    let info = 'Experimental features 🏄‍♂️\\n';\n\n    allNames.forEach(name => {\n      const isEnabled = flagsEnabled[name];\n      const status = isEnabled ? 'Enabled' : 'Disabled';\n      const statusIcon = isEnabled ? '🟢' : '⚪️';\n      const icon = flagsConfig[name].icon;\n      const description = flagsConfig[name].description;\n      info += `\\n${statusIcon} ${icon} \"${name}\" · ${description} · ${status}`;\n    });\n\n    info += `\\n\\nSee docs on flags for more info 📖`;\n    info += `\\nhttps://github.com/quantumblacklabs/kedro-viz#flags`;\n\n    return info;\n  }\n};\n","import { loadState } from './helpers';\nimport normalizeData from './normalize-data';\nimport animals from '../utils/data/animals.mock';\nimport demo from '../utils/data/demo.mock';\nimport { getFlagsFromUrl, Flags } from '../utils/flags';\n\n/**\n * Determine where data should be loaded from (i.e. async from JSON,\n * or randomly-generated, or directly via props), then retrieve & format it.\n * @param {string|Array} data Either raw data itself, or a string\n * @return {Object} Normalized data\n */\nexport const getPipelineData = data => {\n  switch (data) {\n    case 'animals':\n      // Use data from the 'animals' test dataset\n      return animals;\n    case 'demo':\n      // Use data from the 'demo' test dataset\n      return demo;\n    case 'json':\n      // Return empty state, as data will be loaded asynchronously later\n      return null;\n    case 'random':\n      throw new Error(\n        \"The random data should already have replaced the 'random' string in 'data-source.js', so if you see this error then something has gone horribly wrong.\"\n      );\n    case null:\n    case undefined:\n      throw new Error('No data was provided to App component via props');\n    default:\n      // Use data provided via component prop\n      return data;\n  }\n};\n\n/**\n * Generate a new default pipeline state instance\n * @return {Object} Initial state\n */\nexport const getInitialPipelineState = () => ({\n  id: null,\n  node: {\n    ids: [],\n    name: {},\n    fullName: {},\n    type: {},\n    isParam: {},\n    tags: {},\n    layer: {},\n    disabled: {},\n    clicked: null,\n    hovered: null\n  },\n  nodeType: {\n    ids: ['task', 'data', 'parameters'],\n    name: {\n      data: 'Datasets',\n      task: 'Nodes',\n      parameters: 'Parameters'\n    },\n    disabled: {}\n  },\n  edge: {\n    ids: [],\n    sources: {},\n    targets: {}\n  },\n  layer: {\n    ids: [],\n    name: {}\n  },\n  tag: {\n    ids: [],\n    name: {},\n    active: {},\n    enabled: {}\n  }\n});\n\n/**\n * Configure the redux store's initial state\n * @param {Object} props App component props\n * @return {Object} Initial state\n */\nconst getInitialState = (props = {}) => {\n  const pipelineData = normalizeData(getPipelineData(props.data));\n\n  // Load properties from localStorage if defined, else use defaults\n  const localStorageState = loadState();\n  const { textLabels = true, nodeTypeDisabled } = localStorageState;\n  const theme = props.theme || localStorageState.theme || 'dark';\n\n  const visible = Object.assign(\n    {\n      labelBtn: true,\n      layerBtn: true,\n      layers: Boolean(pipelineData.layer.ids.length),\n      exportBtn: true,\n      exportModal: false,\n      sidebar: true,\n      themeBtn: true\n    },\n    localStorageState.visible,\n    props.visible\n  );\n\n  const flags = {\n    ...Flags.defaults(),\n    ...localStorageState.flags,\n    ...getFlagsFromUrl()\n  };\n\n  if (nodeTypeDisabled) {\n    pipelineData.nodeType.disabled = nodeTypeDisabled;\n  }\n\n  return {\n    ...pipelineData,\n    chartSize: {},\n    fontLoaded: false,\n    textLabels,\n    visible,\n    theme,\n    flags\n  };\n};\n\nexport default getInitialState;\n","import { json } from 'd3-fetch';\nimport { dataPath } from '../config';\n\n/**\n * Asynchronously load, parse and format data from json file using D3\n */\nconst loadJsonData = () => {\n  const fullPath = `/public${dataPath.substr(1)}`;\n\n  return json(dataPath).catch(() => {\n    throw new Error(\n      `Unable to load pipeline data from ${dataPath}. If you're running Kedro-Viz as a standalone (e.g. for JavaScript development), please check that you have placed a data file at ${fullPath}.`\n    );\n  });\n};\n\nexport default loadJsonData;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Provider } from 'react-redux';\nimport configureStore from '../../store';\nimport { resetData, updateFontLoaded } from '../../actions';\nimport checkFontLoaded from '../../actions/check-font-loaded';\nimport Wrapper from '../wrapper';\nimport getInitialState from '../../store/initial-state';\nimport loadData from '../../store/load-data';\nimport normalizeData from '../../store/normalize-data';\nimport { getFlagsMessage } from '../../utils/flags';\nimport '@quantumblack/kedro-ui/lib/styles/app.css';\nimport './app.css';\n\n/**\n * Main wrapper component. Intialises the Redux store\n */\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    const initialState = getInitialState(props);\n    this.store = configureStore(initialState);\n    this.announceFlags(initialState.flags);\n  }\n\n  componentDidMount() {\n    this.asyncLoadJsonData();\n    this.checkWebFontLoading();\n  }\n\n  componentDidUpdate(prevProps) {\n    if (prevProps.data.schema_id !== this.props.data.schema_id) {\n      this.updatePipelineData();\n    }\n  }\n\n  /**\n   * Shows a console message regarding the given flags\n   */\n  announceFlags(flags) {\n    const message = getFlagsMessage(flags);\n\n    if (message && typeof jest === 'undefined') {\n      console.info(message);\n    }\n  }\n\n  /**\n   * Load data asynchronously from a JSON file then update the store\n   */\n  asyncLoadJsonData() {\n    if (this.props.data === 'json') {\n      loadData()\n        .then(normalizeData)\n        .then(data => {\n          this.store.dispatch(resetData(data));\n        });\n    }\n  }\n\n  /**\n   * Dispatch an action once the webfont has loaded\n   */\n  checkWebFontLoading() {\n    checkFontLoaded().then(() => {\n      this.store.dispatch(updateFontLoaded(true));\n    });\n  }\n\n  /**\n   * Dispatch an action to update the store with new pipeline data\n   */\n  updatePipelineData() {\n    const normalizedData = normalizeData(this.props.data);\n    this.store.dispatch(resetData(normalizedData));\n  }\n\n  render() {\n    return this.props.data ? (\n      <Provider store={this.store}>\n        <Wrapper />\n      </Provider>\n    ) : null;\n  }\n}\n\nApp.propTypes = {\n  data: PropTypes.oneOfType([\n    PropTypes.oneOf(['random', 'animals', 'demo', 'json']),\n    PropTypes.shape({\n      schema_id: PropTypes.string,\n      edges: PropTypes.array.isRequired,\n      layers: PropTypes.array,\n      nodes: PropTypes.array.isRequired,\n      tags: PropTypes.array\n    })\n  ]),\n  theme: PropTypes.oneOf(['dark', 'light']),\n  visible: PropTypes.shape({\n    labelBtn: PropTypes.bool,\n    layerBtn: PropTypes.bool,\n    layers: PropTypes.bool,\n    exportBtn: PropTypes.bool,\n    sidebar: PropTypes.bool,\n    themeBtn: PropTypes.bool\n  })\n};\n\nApp.defaultProps = {\n  /**\n   * Determines what pipeline data will be displayed on the chart.\n   * You can supply one of the following strings:\n     - 'random': Use randomly-generated data\n     - 'animals': Use data from the 'animals' test dataset\n     - 'demo': Use data from the 'demo' test dataset\n     - 'json': Load data from a local json file (in /public/api/nodes.json)\n   * Alternatively, you can supply an object containing lists of edges, nodes, tags.\n   * See /src/utils/data for examples of the expected data format.\n   */\n  data: null,\n  /**\n   * Specify the theme: Either 'light' or 'dark'.\n   * If set, this will override the localStorage value.\n   */\n  theme: null,\n  /**\n   * Show/hide the icon buttons with { labelBtn:false } and/or { themeBtn:false }\n   */\n  visible: {}\n};\n\nexport default App;\n","import { createStore } from 'redux';\nimport reducer from '../reducers';\nimport { saveState } from './helpers';\n\n/**\n * Configure initial state and create the Redux store\n * @param {Object} initialState Initial Redux state (from initial-state.js)\n * @return {Object} Redux store\n */\nexport default function configureStore(initialState) {\n  const store = createStore(reducer, initialState);\n\n  store.subscribe(() => {\n    const { textLabels, theme, nodeType, visible, flags } = store.getState();\n\n    saveState({\n      textLabels,\n      theme,\n      nodeTypeDisabled: nodeType.disabled,\n      visible,\n      flags\n    });\n  });\n\n  return store;\n}\n","import React from 'react';\nimport KonamiCode from 'konami-code';\nimport './easter-egg.css';\nimport mp3 from './brodyquest.mp3';\nimport img from './easter-egg.png';\n\n/**\n * Konami code Easter Egg component\n */\nclass EasterEgg extends React.Component {\n  /**\n   * Create new APP\n   * @param {object} props\n   */\n  constructor(props) {\n    super(props);\n    this.state = {\n      play: false\n    };\n    if (typeof jest === 'undefined') {\n      console.info('Konami code is supported');\n    }\n\n    this.audio = new Audio(mp3);\n    this.audio.loop = true;\n    this.handleKeyDown = this.handleKeyDown.bind(this);\n  }\n\n  /**\n   * Called when mounted to view\n   */\n  componentDidMount() {\n    const konami = new KonamiCode();\n    konami.listen(this.toggleState.bind(this));\n    document.addEventListener('keydown', this.handleKeyDown);\n  }\n\n  /**\n   * Triggered when component state updates\n   */\n  componentDidUpdate() {\n    this.toggleAudio();\n    this.toggleCSS();\n  }\n\n  /**\n   * Called just before component is removed from the view\n   */\n  componentWillUnmount() {\n    document.removeEventListener('keydown', this.handleKeyDown);\n    document.body.classList.remove('easter-theme');\n  }\n\n  /**\n   * Handle keyboard interaction\n   * @param {Event} e\n   */\n  handleKeyDown(e) {\n    const escape = e.keyCode === 27;\n    if (escape && this.state.play) {\n      this.setState({\n        play: false\n      });\n    }\n  }\n\n  /**\n   * Toggle play state on/off\n   */\n  toggleState() {\n    this.setState({ play: !this.state.play });\n  }\n\n  /**\n   * Play/Pause the mp3\n   */\n  toggleAudio() {\n    if (this.state.play) {\n      this.audio.play();\n    } else {\n      this.audio.pause();\n    }\n  }\n\n  /**\n   * Play/Pause the mp3\n   */\n  toggleCSS() {\n    if (this.state.play) {\n      document.body.classList.add('easter-theme');\n    } else {\n      document.body.classList.remove('easter-theme');\n    }\n  }\n\n  /**\n   * Render the component\n   * @return {ReactElement}\n   */\n  render() {\n    const { play } = this.state;\n    if (!play) {\n      return null;\n    }\n    return (\n      <div className=\"easter-egg\">\n        <img src={img} alt=\"\" width=\"500\" height=\"480\" />\n      </div>\n    );\n  }\n}\n\nexport default EasterEgg;\n","import seedrandom from 'seedrandom';\n\n/**\n * Generate a pseudo-random UUID\n * via https://stackoverflow.com/a/1349426/1651713\n * @param {number} length Hash/ID length\n * @return string\n */\nexport const generateHash = length => {\n  const result = [];\n  const characters =\n    'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';\n  for (let i = 0; i < length; i++) {\n    result.push(\n      characters.charAt(Math.floor(Math.random() * characters.length))\n    );\n  }\n  return result.join('');\n};\n\n/**\n * Seed data with a random hash, allowing it to be reproduced.\n * If the URL searchParams contain a 'seed' key then use its value,\n * else create a new one, and make it available via the console.\n */\nexport const getSeedFromURL = () => {\n  if (typeof window === 'undefined') {\n    return;\n  }\n  let url;\n  let seed;\n  try {\n    url = new URL(window.location.href);\n    seed = url.searchParams.get('seed');\n  } catch (e) {\n    console.warn('Random data seeding is not supported in this browser');\n    return;\n  }\n  if (!seed) {\n    seed = generateHash(30);\n    url.searchParams.set('seed', seed);\n  }\n  if (typeof jest === 'undefined') {\n    console.info(\n      `%cRandom data seed: ${seed}\\nTo reuse this layout, visit ${url.toString()}`,\n      'font-weight: bold'\n    );\n  }\n  return seed;\n};\n\n// Set up seeded random number generator:\nconst seed = getSeedFromURL();\nexport const random = seedrandom(seed);\n\n/**\n * Get an array of numbers\n * @param {number} n Length of the array\n */\nexport const getNumberArray = n => Array.from(Array(n).keys());\n\n/**\n * Get a random number between 0 to n-1, inclusive\n * @param {number} n Max number\n */\nexport const randomIndex = n => Math.floor(random() * n);\n\n/**\n * Get a random number between 1 to n, inclusive\n * @param {number} n Max number\n */\nexport const randomNumber = n => Math.ceil(random() * n);\n\n/**\n * Get a random number between min and max, inclusive\n * @param {number} (min) Min number\n * @param {number} (max) Max number\n */\nexport const randomNumberBetween = (min, max) => randomNumber(max - min) + min;\n\n/**\n * Get a random datum from an array\n * @param {Array} range The array to select a random item from\n */\nexport const getRandom = range => range[randomIndex(range.length)];\n\nexport const LOREM_IPSUM = 'lorem ipsum dolor sit amet consectetur adipiscing elit vestibulum id turpis nunc nulla vitae diam dignissim fermentum elit sit amet viverra libero quisque condimentum pellentesque convallis sed consequat neque ac rhoncus finibus'.split(\n  ' '\n);\n\n/**\n * Generate a random latin name\n * @param {number} n Number of words in the name\n * @param {string} join The character(s) used to join each word\n */\nexport const getRandomName = (n, join = '_') =>\n  getNumberArray(n)\n    .map(() => getRandom(LOREM_IPSUM))\n    .join(join);\n\n/**\n * Randomly select a certain number (n) of items from an array (arr).\n * via https://stackoverflow.com/a/19270021/1651713\n * @param {array} arr List from which to choose\n * @param {number} n Number of items to select\n */\nexport const getRandomSelection = (arr, n) => {\n  const result = new Array(n);\n  let len = arr.length;\n  const taken = new Array(len);\n  if (n > len) {\n    return arr;\n  }\n  while (n--) {\n    var x = Math.floor(random() * len);\n    result[n] = arr[x in taken ? taken[x] : x];\n    taken[x] = --len in taken ? taken[len] : len;\n  }\n  return result;\n};\n","import batchingToposort from 'batching-toposort';\n\nimport { arrayToObject, unique } from './index';\nimport {\n  getNumberArray,\n  random,\n  randomIndex,\n  randomNumber,\n  randomNumberBetween,\n  getRandom,\n  getRandomName,\n  getRandomSelection\n} from './random-utils';\n\n//--- Config variables ---//\n\nconst MAX_EDGE_COUNT = 200;\nconst MIN_EDGE_COUNT = 100;\nconst MAX_RANK_COUNT = 50;\nconst MIN_RANK_COUNT = 10;\nconst MAX_RANK_NODE_COUNT = 10;\nconst MIN_RANK_NODE_COUNT = 1;\nconst MIN_NODE_DEGREE = 2;\nconst MAX_NODE_TAG_COUNT = 5;\nconst MAX_TAG_COUNT = 20;\nconst PARAMETERS_FREQUENCY = 0.2;\nconst LAYERS = [\n  'Raw',\n  'Intermediate',\n  'Primary',\n  'Feature',\n  'Model Input',\n  'Model Output'\n];\n\n/**\n * Generate a random pipeline dataset\n */\nclass Pipeline {\n  constructor() {\n    this.rankCount = this.getRankCount();\n    this.rankLayers = this.getRankLayers();\n    this.tags = this.generateTags();\n    this.nodes = this.generateNodes();\n    this.edges = this.generateEdges();\n\n    this.update();\n    this.finalise();\n  }\n\n  /**\n   * Get the number of ranks (i.e. horizontal bands)\n   * Odd ranks are data, even are task\n   * @returns {number} Rank count total\n   */\n  getRankCount() {\n    let rankCount = randomNumberBetween(MIN_RANK_COUNT, MAX_RANK_COUNT);\n    // Ensure odd numbers only, so that we start and end with a data node\n    if (!rankCount % 2) {\n      rankCount += 1;\n    }\n    return rankCount;\n  }\n\n  /**\n   * Randomly determine the layer for each rank\n   * @returns {object} Layers by rank\n   */\n  getRankLayers() {\n    const layerSize = arrayToObject(LAYERS, () => 0);\n    // Randomly decide the number of ranks in each layer\n    for (let i = 0; i < this.rankCount; i++) {\n      layerSize[getRandom(LAYERS)]++;\n    }\n    // Assign layers to ranks based on layerSize\n    const rankLayers = {};\n    for (let rank = 0, layer = 0; rank < this.rankCount; rank++) {\n      while (layerSize[LAYERS[layer]] < 1) {\n        layer++;\n      }\n      rankLayers[rank] = LAYERS[layer];\n      layerSize[LAYERS[layer]]--;\n    }\n    return rankLayers;\n  }\n\n  /**\n   * Generate a random list of tags\n   * @returns {array} Tag name strings\n   */\n  generateTags() {\n    const tagCount = randomNumber(MAX_TAG_COUNT);\n    return getNumberArray(tagCount)\n      .map(() => getRandomName(randomNumber(MAX_NODE_TAG_COUNT)))\n      .filter(unique);\n  }\n\n  /**\n   * Create list of nodes\n   * @returns {array} List of node objects\n   */\n  generateNodes() {\n    const nodes = [];\n    for (let rank = 0; rank < this.rankCount; rank++) {\n      const rankNodeCount = this.getRankNodeCount(rank);\n      for (let i = 0; i < rankNodeCount; i++) {\n        const node = this.createNode(i, rank);\n        nodes.push(node);\n      }\n    }\n    return nodes;\n  }\n\n  /**\n   * Return a random count of nodes for a rank\n   * @returns {number} rank node count\n   */\n  getRankNodeCount() {\n    return Math.min(MIN_RANK_NODE_COUNT / random(), MAX_RANK_NODE_COUNT);\n  }\n\n  /**\n   * Determine a node's type based on its rank\n   * @param {number} rank Rank number\n   * @returns {string} Node type (task/data/parameters)\n   */\n  getType(node) {\n    if (node.rank % 2) {\n      return 'task';\n    }\n\n    if (node._sources.length === 0 && random() < PARAMETERS_FREQUENCY) {\n      return 'parameters';\n    }\n\n    return 'data';\n  }\n\n  /**\n   * Create a node datum object.\n   * @param {number} i Node index within its rank\n   * @param {number} initialRank Rank index\n   * @returns {object} Node object\n   */\n  createNode(i, initialRank) {\n    const layer = this.rankLayers[initialRank];\n    const node = {\n      id: `${layer}_${initialRank}_${i}`,\n      name: null,\n      full_name: null,\n      type: null,\n      rank: initialRank,\n      layer: layer,\n      tags: this.getRandomTags(),\n      _sources: [],\n      _targets: []\n    };\n    return node;\n  }\n\n  /**\n   * Create a new node name of up to 10 words\n   * @param {string} Node type (task/data/parameters)\n   * @returns {string} Node name\n   */\n  getNodeName(type) {\n    const name = getRandomName(randomNumber(10), ' ');\n    return type === 'parameters' ? `Parameters ${name}` : name;\n  }\n\n  /**\n   * Select a random number of tags from the list of tags\n   * @returns {array} List of tags\n   */\n  getRandomTags() {\n    return getRandomSelection(this.tags, randomNumber(this.tags.length));\n  }\n\n  /**\n   * Gets a map of ranks to lists of nodes at that rank\n   * @returns {array} List of nodes\n   */\n  getNodesByRank() {\n    const nodesByRank = {};\n\n    for (const node of this.nodes) {\n      nodesByRank[node.rank] = nodesByRank[node.rank] || [];\n      nodesByRank[node.rank].push(node);\n    }\n\n    return nodesByRank;\n  }\n\n  /**\n   * Create list of edges\n   * @returns {array} Edge objects\n   */\n  generateEdges() {\n    const edges = [];\n    const edgeCount = randomNumberBetween(MIN_EDGE_COUNT, MAX_EDGE_COUNT);\n    const nodesByRank = this.getNodesByRank();\n\n    // Find the sorted list of node ranks\n    const ranks = Object.keys(nodesByRank)\n      .map(rank => parseFloat(rank))\n      .sort((a, b) => a - b);\n\n    // Gets a random node with the given rank index\n    const getRandomNodeAtRank = rankIndex => {\n      const rankValue = ranks[rankIndex];\n      const rankNodes = nodesByRank[rankValue];\n      const rankNodeIndex = randomIndex(rankNodes.length);\n      return rankNodes[rankNodeIndex];\n    };\n\n    // For the desired amount of edges\n    for (let i = 0; i < edgeCount; i += 1) {\n      // Choose a random source node excluding the last rank\n      const sourceRankIndex = randomIndex(ranks.length - 1);\n      const source = getRandomNodeAtRank(sourceRankIndex);\n\n      // Choose a random target node after the source rank prefering nearby\n      const remainingRankCount = ranks.length - 1 - sourceRankIndex;\n      const biasedRandom = Math.round(0.5 / random());\n      const targetRankIndex =\n        sourceRankIndex + Math.min(biasedRandom, remainingRankCount);\n      const target = getRandomNodeAtRank(targetRankIndex);\n\n      // Build the edge\n      const edge = {\n        source: source.id,\n        target: target.id,\n        _sourceNode: source,\n        _targetNode: target\n      };\n\n      edges.push(edge);\n\n      // Keep track of edges on nodes for later convenience\n      source._targets.push(edge);\n      target._sources.push(edge);\n    }\n\n    return edges;\n  }\n\n  /**\n   * Select only nodes with at least the minimum required connected nodes\n   * @returns {object} Filtered nodes\n   */\n  activeNodes() {\n    const nodes = {};\n\n    // Gets the total number of edges for the given node\n    const degree = node => node._sources.length + node._targets.length;\n\n    for (const edge of this.edges) {\n      // Keep both nodes if they have enough combined connections\n      if (\n        degree(edge._sourceNode) + degree(edge._targetNode) >\n        MIN_NODE_DEGREE\n      ) {\n        nodes[edge._sourceNode.id] = edge._sourceNode;\n        nodes[edge._targetNode.id] = edge._targetNode;\n      }\n    }\n\n    return Object.values(nodes);\n  }\n\n  /**\n   * Select only used tags\n   * @returns {object} Filtered tags\n   */\n  activeTags() {\n    return this.nodes\n      .reduce((tags, node) => (node.tags ? tags.concat(node.tags) : tags), [])\n      .filter(unique)\n      .map(tag => ({ name: tag, id: tag }));\n  }\n\n  /**\n   * Select only used edges\n   * @returns {object} Filtered edges\n   */\n  activeEdges() {\n    const visibleNodes = arrayToObject(\n      this.nodes.map(node => node.id),\n      () => true\n    );\n\n    return this.edges.filter(\n      edge => visibleNodes[edge.target] && visibleNodes[edge.source]\n    );\n  }\n\n  /**\n   * Updates node properties including rank, type and name based on the current graph\n   */\n  update() {\n    const graph = {};\n\n    for (const node of this.nodes) {\n      graph[node.id] = [];\n    }\n\n    for (const edge of this.edges) {\n      graph[edge.source].push(edge.target);\n    }\n\n    // Use toposort to find actual ranks\n    const sortedNodes = batchingToposort(graph);\n\n    for (let rank = 0; rank < sortedNodes.length; rank++) {\n      for (const id of sortedNodes[rank]) {\n        const node = this.nodes.find(node => node.id === id);\n        node.rank = rank;\n        node.type = this.getType(node);\n        node.name = this.getNodeName(node.type);\n        node.full_name = `${node.layer}_${node.type}_${node.rank}_${\n          node.name\n        }`.replace(/\\s/g, '_');\n      }\n    }\n  }\n\n  /**\n   * Removes unused elements and cleans up temporary properties\n   */\n  finalise() {\n    this.nodes = this.activeNodes();\n    this.tags = this.activeTags();\n    this.edges = this.activeEdges();\n\n    for (const node of this.nodes) {\n      delete node._sources;\n      delete node._targets;\n    }\n\n    for (const edge of this.edges) {\n      delete edge._targetNode;\n      delete edge._sourceNode;\n    }\n  }\n\n  /**\n   * Gets the complete pipeline data\n   * @returns {object} The pipeline data\n   */\n  all() {\n    return {\n      edges: this.edges,\n      nodes: this.nodes,\n      tags: this.tags,\n      layers: LAYERS\n    };\n  }\n}\n\nconst generateRandomPipeline = () => new Pipeline().all();\n\nexport default generateRandomPipeline;\n","import getRandomPipeline from './random-data';\n\n// Avoid errors when running in a non-browser environment\nconst hasWindow = typeof window !== 'undefined';\n\n/**\n * Validate against expected results\n * @param {string} source Input type key\n * @return {string} Data source type key\n */\nconst validateDataSource = source => {\n  const expectedInput = ['animals', 'demo', 'json', 'random'];\n  if (expectedInput.includes(source)) {\n    // If random, supply random data instead. We're doing this here to avoid\n    // including this file unnecessarily in the exported npm package\n    if (source === 'random') {\n      return getRandomPipeline();\n    }\n    return source;\n  }\n  if (source) {\n    throw new Error(\n      `Unexpected data source value '${source}'. Your input should be one of the following values: ${expectedInput.join(\n        ', '\n      )}.`\n    );\n  }\n  return 'json';\n};\n\n/**\n * Determine which data source to use\n * @return {string} Data source type key\n */\nconst getDataSource = () => {\n  let source;\n  const qs = hasWindow && window.location.search.match(/data=(\\w+)/);\n  const { REACT_APP_DATA_SOURCE } = process.env;\n  const isDemo =\n    hasWindow && window.location.host === 'quantumblacklabs.github.io';\n\n  if (qs) {\n    source = encodeURIComponent(qs[1]);\n  } else if (REACT_APP_DATA_SOURCE) {\n    source = REACT_APP_DATA_SOURCE;\n  } else if (isDemo) {\n    source = 'demo';\n  }\n  return validateDataSource(source);\n};\n\nexport default getDataSource;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'what-input';\nimport App from './components/app';\nimport EasterEgg from './components/easter-egg';\nimport getDataSource from './utils/data-source';\nimport './styles/index.css';\n\nReactDOM.render(\n  <>\n    <App data={getDataSource()} />\n    <EasterEgg />\n  </>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}